
byu014_lnguy089_lab9_part2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000020  00800100  0000061a  000006ae  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000061a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000007  00800120  00800120  000006ce  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000006ce  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000700  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000040  00000000  00000000  00000740  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000009c2  00000000  00000000  00000780  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000874  00000000  00000000  00001142  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000003c9  00000000  00000000  000019b6  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000078  00000000  00000000  00001d80  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000046e  00000000  00000000  00001df8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000008d  00000000  00000000  00002266  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000030  00000000  00000000  000022f3  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	4c c0       	rjmp	.+152    	; 0x9a <__ctors_end>
   2:	00 00       	nop
   4:	67 c0       	rjmp	.+206    	; 0xd4 <__bad_interrupt>
   6:	00 00       	nop
   8:	65 c0       	rjmp	.+202    	; 0xd4 <__bad_interrupt>
   a:	00 00       	nop
   c:	63 c0       	rjmp	.+198    	; 0xd4 <__bad_interrupt>
   e:	00 00       	nop
  10:	61 c0       	rjmp	.+194    	; 0xd4 <__bad_interrupt>
  12:	00 00       	nop
  14:	5f c0       	rjmp	.+190    	; 0xd4 <__bad_interrupt>
  16:	00 00       	nop
  18:	5d c0       	rjmp	.+186    	; 0xd4 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	5b c0       	rjmp	.+182    	; 0xd4 <__bad_interrupt>
  1e:	00 00       	nop
  20:	59 c0       	rjmp	.+178    	; 0xd4 <__bad_interrupt>
  22:	00 00       	nop
  24:	57 c0       	rjmp	.+174    	; 0xd4 <__bad_interrupt>
  26:	00 00       	nop
  28:	55 c0       	rjmp	.+170    	; 0xd4 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	53 c0       	rjmp	.+166    	; 0xd4 <__bad_interrupt>
  2e:	00 00       	nop
  30:	51 c0       	rjmp	.+162    	; 0xd4 <__bad_interrupt>
  32:	00 00       	nop
  34:	4f c0       	rjmp	.+158    	; 0xd4 <__bad_interrupt>
  36:	00 00       	nop
  38:	4d c0       	rjmp	.+154    	; 0xd4 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	4b c0       	rjmp	.+150    	; 0xd4 <__bad_interrupt>
  3e:	00 00       	nop
  40:	49 c0       	rjmp	.+146    	; 0xd4 <__bad_interrupt>
  42:	00 00       	nop
  44:	47 c0       	rjmp	.+142    	; 0xd4 <__bad_interrupt>
  46:	00 00       	nop
  48:	45 c0       	rjmp	.+138    	; 0xd4 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	43 c0       	rjmp	.+134    	; 0xd4 <__bad_interrupt>
  4e:	00 00       	nop
  50:	41 c0       	rjmp	.+130    	; 0xd4 <__bad_interrupt>
  52:	00 00       	nop
  54:	3f c0       	rjmp	.+126    	; 0xd4 <__bad_interrupt>
  56:	00 00       	nop
  58:	3d c0       	rjmp	.+122    	; 0xd4 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	3b c0       	rjmp	.+118    	; 0xd4 <__bad_interrupt>
  5e:	00 00       	nop
  60:	39 c0       	rjmp	.+114    	; 0xd4 <__bad_interrupt>
  62:	00 00       	nop
  64:	37 c0       	rjmp	.+110    	; 0xd4 <__bad_interrupt>
  66:	00 00       	nop
  68:	35 c0       	rjmp	.+106    	; 0xd4 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	33 c0       	rjmp	.+102    	; 0xd4 <__bad_interrupt>
  6e:	00 00       	nop
  70:	31 c0       	rjmp	.+98     	; 0xd4 <__bad_interrupt>
  72:	00 00       	nop
  74:	2f c0       	rjmp	.+94     	; 0xd4 <__bad_interrupt>
  76:	00 00       	nop
  78:	2d c0       	rjmp	.+90     	; 0xd4 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	2b c0       	rjmp	.+86     	; 0xd4 <__bad_interrupt>
  7e:	00 00       	nop
  80:	29 c0       	rjmp	.+82     	; 0xd4 <__bad_interrupt>
  82:	00 00       	nop
  84:	27 c0       	rjmp	.+78     	; 0xd4 <__bad_interrupt>
  86:	00 00       	nop
  88:	25 c0       	rjmp	.+74     	; 0xd4 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	d9 00       	.word	0x00d9	; ????
  8e:	17 01       	movw	r2, r14
  90:	1b 01       	movw	r2, r22
  92:	1f 01       	movw	r2, r30
  94:	e1 00       	.word	0x00e1	; ????
  96:	dd 00       	.word	0x00dd	; ????
  98:	e5 00       	.word	0x00e5	; ????

0000009a <__ctors_end>:
  9a:	11 24       	eor	r1, r1
  9c:	1f be       	out	0x3f, r1	; 63
  9e:	cf ef       	ldi	r28, 0xFF	; 255
  a0:	d0 e4       	ldi	r29, 0x40	; 64
  a2:	de bf       	out	0x3e, r29	; 62
  a4:	cd bf       	out	0x3d, r28	; 61

000000a6 <__do_copy_data>:
  a6:	11 e0       	ldi	r17, 0x01	; 1
  a8:	a0 e0       	ldi	r26, 0x00	; 0
  aa:	b1 e0       	ldi	r27, 0x01	; 1
  ac:	ea e1       	ldi	r30, 0x1A	; 26
  ae:	f6 e0       	ldi	r31, 0x06	; 6
  b0:	00 e0       	ldi	r16, 0x00	; 0
  b2:	0b bf       	out	0x3b, r16	; 59
  b4:	02 c0       	rjmp	.+4      	; 0xba <__do_copy_data+0x14>
  b6:	07 90       	elpm	r0, Z+
  b8:	0d 92       	st	X+, r0
  ba:	a0 32       	cpi	r26, 0x20	; 32
  bc:	b1 07       	cpc	r27, r17
  be:	d9 f7       	brne	.-10     	; 0xb6 <__do_copy_data+0x10>

000000c0 <__do_clear_bss>:
  c0:	21 e0       	ldi	r18, 0x01	; 1
  c2:	a0 e2       	ldi	r26, 0x20	; 32
  c4:	b1 e0       	ldi	r27, 0x01	; 1
  c6:	01 c0       	rjmp	.+2      	; 0xca <.do_clear_bss_start>

000000c8 <.do_clear_bss_loop>:
  c8:	1d 92       	st	X+, r1

000000ca <.do_clear_bss_start>:
  ca:	a7 32       	cpi	r26, 0x27	; 39
  cc:	b2 07       	cpc	r27, r18
  ce:	e1 f7       	brne	.-8      	; 0xc8 <.do_clear_bss_loop>
  d0:	15 d1       	rcall	.+554    	; 0x2fc <main>
  d2:	a1 c2       	rjmp	.+1346   	; 0x616 <_exit>

000000d4 <__bad_interrupt>:
  d4:	95 cf       	rjmp	.-214    	; 0x0 <__vectors>

000000d6 <set_PWM>:
	set_PWM(0);
}

void PWM_off() {
	TCCR0A = 0x00;
	TCCR0B = 0x00;
  d6:	cf 92       	push	r12
  d8:	df 92       	push	r13
  da:	ef 92       	push	r14
  dc:	ff 92       	push	r15
  de:	6b 01       	movw	r12, r22
  e0:	7c 01       	movw	r14, r24
  e2:	9b 01       	movw	r18, r22
  e4:	ac 01       	movw	r20, r24
  e6:	60 91 20 01 	lds	r22, 0x0120	; 0x800120 <__data_end>
  ea:	70 91 21 01 	lds	r23, 0x0121	; 0x800121 <__data_end+0x1>
  ee:	80 91 22 01 	lds	r24, 0x0122	; 0x800122 <__data_end+0x2>
  f2:	90 91 23 01 	lds	r25, 0x0123	; 0x800123 <__data_end+0x3>
  f6:	0d d1       	rcall	.+538    	; 0x312 <__cmpsf2>
  f8:	88 23       	and	r24, r24
  fa:	09 f4       	brne	.+2      	; 0xfe <set_PWM+0x28>
  fc:	40 c0       	rjmp	.+128    	; 0x17e <set_PWM+0xa8>
  fe:	20 e0       	ldi	r18, 0x00	; 0
 100:	30 e0       	ldi	r19, 0x00	; 0
 102:	a9 01       	movw	r20, r18
 104:	c7 01       	movw	r24, r14
 106:	b6 01       	movw	r22, r12
 108:	04 d1       	rcall	.+520    	; 0x312 <__cmpsf2>
 10a:	81 11       	cpse	r24, r1
 10c:	04 c0       	rjmp	.+8      	; 0x116 <set_PWM+0x40>
 10e:	85 b5       	in	r24, 0x25	; 37
 110:	88 70       	andi	r24, 0x08	; 8
 112:	85 bd       	out	0x25, r24	; 37
 114:	03 c0       	rjmp	.+6      	; 0x11c <set_PWM+0x46>
 116:	85 b5       	in	r24, 0x25	; 37
 118:	83 60       	ori	r24, 0x03	; 3
 11a:	85 bd       	out	0x25, r24	; 37
 11c:	28 e5       	ldi	r18, 0x58	; 88
 11e:	39 e3       	ldi	r19, 0x39	; 57
 120:	44 e7       	ldi	r20, 0x74	; 116
 122:	5f e3       	ldi	r21, 0x3F	; 63
 124:	c7 01       	movw	r24, r14
 126:	b6 01       	movw	r22, r12
 128:	f4 d0       	rcall	.+488    	; 0x312 <__cmpsf2>
 12a:	88 23       	and	r24, r24
 12c:	1c f4       	brge	.+6      	; 0x134 <set_PWM+0x5e>
 12e:	8f ef       	ldi	r24, 0xFF	; 255
 130:	87 bd       	out	0x27, r24	; 39
 132:	1c c0       	rjmp	.+56     	; 0x16c <set_PWM+0x96>
 134:	20 e0       	ldi	r18, 0x00	; 0
 136:	34 e2       	ldi	r19, 0x24	; 36
 138:	44 ef       	ldi	r20, 0xF4	; 244
 13a:	56 e4       	ldi	r21, 0x46	; 70
 13c:	c7 01       	movw	r24, r14
 13e:	b6 01       	movw	r22, r12
 140:	fa d1       	rcall	.+1012   	; 0x536 <__gesf2>
 142:	18 16       	cp	r1, r24
 144:	14 f4       	brge	.+4      	; 0x14a <set_PWM+0x74>
 146:	17 bc       	out	0x27, r1	; 39
 148:	11 c0       	rjmp	.+34     	; 0x16c <set_PWM+0x96>
 14a:	20 e0       	ldi	r18, 0x00	; 0
 14c:	30 e0       	ldi	r19, 0x00	; 0
 14e:	40 e0       	ldi	r20, 0x00	; 0
 150:	53 e4       	ldi	r21, 0x43	; 67
 152:	c7 01       	movw	r24, r14
 154:	b6 01       	movw	r22, r12
 156:	f3 d1       	rcall	.+998    	; 0x53e <__mulsf3>
 158:	9b 01       	movw	r18, r22
 15a:	ac 01       	movw	r20, r24
 15c:	60 e0       	ldi	r22, 0x00	; 0
 15e:	74 e2       	ldi	r23, 0x24	; 36
 160:	84 ef       	ldi	r24, 0xF4	; 244
 162:	9a e4       	ldi	r25, 0x4A	; 74
 164:	da d0       	rcall	.+436    	; 0x31a <__divsf3>
 166:	41 d1       	rcall	.+642    	; 0x3ea <__fixsfsi>
 168:	61 50       	subi	r22, 0x01	; 1
 16a:	67 bd       	out	0x27, r22	; 39
 16c:	16 bc       	out	0x26, r1	; 38
 16e:	c0 92 20 01 	sts	0x0120, r12	; 0x800120 <__data_end>
 172:	d0 92 21 01 	sts	0x0121, r13	; 0x800121 <__data_end+0x1>
 176:	e0 92 22 01 	sts	0x0122, r14	; 0x800122 <__data_end+0x2>
 17a:	f0 92 23 01 	sts	0x0123, r15	; 0x800123 <__data_end+0x3>
 17e:	ff 90       	pop	r15
 180:	ef 90       	pop	r14
 182:	df 90       	pop	r13
 184:	cf 90       	pop	r12
 186:	08 95       	ret

00000188 <PWM_on>:
 188:	81 e4       	ldi	r24, 0x41	; 65
 18a:	84 bd       	out	0x24, r24	; 36
 18c:	8b e0       	ldi	r24, 0x0B	; 11
 18e:	85 bd       	out	0x25, r24	; 37
 190:	60 e0       	ldi	r22, 0x00	; 0
 192:	70 e0       	ldi	r23, 0x00	; 0
 194:	cb 01       	movw	r24, r22
 196:	9f cf       	rjmp	.-194    	; 0xd6 <set_PWM>
 198:	08 95       	ret

0000019a <Tick>:
unsigned char i = 0;
const double tones[8] = {261.63, 293.66, 329.63, 349.23, 329, 440, 493.88, 523.25};
unsigned char isOn = 0;
void Tick()
{
	switch(state)
 19a:	20 91 26 01 	lds	r18, 0x0126	; 0x800126 <state>
 19e:	82 2f       	mov	r24, r18
 1a0:	90 e0       	ldi	r25, 0x00	; 0
 1a2:	87 30       	cpi	r24, 0x07	; 7
 1a4:	91 05       	cpc	r25, r1
 1a6:	08 f0       	brcs	.+2      	; 0x1aa <Tick+0x10>
 1a8:	57 c0       	rjmp	.+174    	; 0x258 <Tick+0xbe>
 1aa:	fc 01       	movw	r30, r24
 1ac:	ea 5b       	subi	r30, 0xBA	; 186
 1ae:	ff 4f       	sbci	r31, 0xFF	; 255
 1b0:	29 c2       	rjmp	.+1106   	; 0x604 <__tablejump2__>
	{
		case start:
			state = off;
 1b2:	85 e0       	ldi	r24, 0x05	; 5
 1b4:	80 93 26 01 	sts	0x0126, r24	; 0x800126 <state>
			break;
 1b8:	8d c0       	rjmp	.+282    	; 0x2d4 <Tick+0x13a>
		
		case off:
			state = wait;
 1ba:	83 e0       	ldi	r24, 0x03	; 3
 1bc:	80 93 26 01 	sts	0x0126, r24	; 0x800126 <state>
			break;
 1c0:	08 95       	ret
		
		case on:
			state = wait;
 1c2:	83 e0       	ldi	r24, 0x03	; 3
 1c4:	80 93 26 01 	sts	0x0126, r24	; 0x800126 <state>
			break;
 1c8:	08 95       	ret
		case ready:
			if((~PINA & 0x07) == 0x01)
 1ca:	80 b1       	in	r24, 0x00	; 0
 1cc:	90 e0       	ldi	r25, 0x00	; 0
 1ce:	80 95       	com	r24
 1d0:	90 95       	com	r25
 1d2:	87 70       	andi	r24, 0x07	; 7
 1d4:	99 27       	eor	r25, r25
 1d6:	01 97       	sbiw	r24, 0x01	; 1
 1d8:	21 f4       	brne	.+8      	; 0x1e2 <Tick+0x48>
			{
				state = up;
 1da:	81 e0       	ldi	r24, 0x01	; 1
 1dc:	80 93 26 01 	sts	0x0126, r24	; 0x800126 <state>
 1e0:	47 c0       	rjmp	.+142    	; 0x270 <Tick+0xd6>
				break;
			}
			else if((~PINA & 0x07) == 0x02)
 1e2:	80 b1       	in	r24, 0x00	; 0
 1e4:	90 e0       	ldi	r25, 0x00	; 0
 1e6:	80 95       	com	r24
 1e8:	90 95       	com	r25
 1ea:	87 70       	andi	r24, 0x07	; 7
 1ec:	99 27       	eor	r25, r25
 1ee:	02 97       	sbiw	r24, 0x02	; 2
 1f0:	89 f4       	brne	.+34     	; 0x214 <Tick+0x7a>
			{
				if(isOn == 0)
 1f2:	80 91 24 01 	lds	r24, 0x0124	; 0x800124 <isOn>
 1f6:	81 11       	cpse	r24, r1
 1f8:	07 c0       	rjmp	.+14     	; 0x208 <Tick+0x6e>
				{
					state = on;
 1fa:	84 e0       	ldi	r24, 0x04	; 4
 1fc:	80 93 26 01 	sts	0x0126, r24	; 0x800126 <state>
					isOn = 1;
 200:	81 e0       	ldi	r24, 0x01	; 1
 202:	80 93 24 01 	sts	0x0124, r24	; 0x800124 <isOn>
 206:	6b c0       	rjmp	.+214    	; 0x2de <Tick+0x144>
					break;
				}
				else
				{
					isOn = 0;
 208:	10 92 24 01 	sts	0x0124, r1	; 0x800124 <isOn>
					state = off;
 20c:	85 e0       	ldi	r24, 0x05	; 5
 20e:	80 93 26 01 	sts	0x0126, r24	; 0x800126 <state>
					break;
 212:	60 c0       	rjmp	.+192    	; 0x2d4 <Tick+0x13a>
				}
			}
			else if((~PINA & 0x07) == 0x04)
 214:	80 b1       	in	r24, 0x00	; 0
 216:	90 e0       	ldi	r25, 0x00	; 0
 218:	80 95       	com	r24
 21a:	90 95       	com	r25
 21c:	87 70       	andi	r24, 0x07	; 7
 21e:	99 27       	eor	r25, r25
 220:	04 97       	sbiw	r24, 0x04	; 4
 222:	09 f0       	breq	.+2      	; 0x226 <Tick+0x8c>
 224:	6a c0       	rjmp	.+212    	; 0x2fa <Tick+0x160>
			{
				state = down;
 226:	82 e0       	ldi	r24, 0x02	; 2
 228:	80 93 26 01 	sts	0x0126, r24	; 0x800126 <state>
 22c:	3b c0       	rjmp	.+118    	; 0x2a4 <Tick+0x10a>
			{
				state = ready;
				break;
			}
		case up:
			state = wait;
 22e:	83 e0       	ldi	r24, 0x03	; 3
 230:	80 93 26 01 	sts	0x0126, r24	; 0x800126 <state>
			break;
 234:	08 95       	ret
		
		case down:
			state = wait;
 236:	83 e0       	ldi	r24, 0x03	; 3
 238:	80 93 26 01 	sts	0x0126, r24	; 0x800126 <state>
			break;
 23c:	08 95       	ret
		case wait:
			if((~PINA & 0x7) != 0x00)
 23e:	80 b1       	in	r24, 0x00	; 0
 240:	90 e0       	ldi	r25, 0x00	; 0
 242:	80 95       	com	r24
 244:	90 95       	com	r25
 246:	87 70       	andi	r24, 0x07	; 7
 248:	99 27       	eor	r25, r25
 24a:	89 2b       	or	r24, r25
 24c:	09 f0       	breq	.+2      	; 0x250 <Tick+0xb6>
 24e:	55 c0       	rjmp	.+170    	; 0x2fa <Tick+0x160>
				state = wait;
				break;
			}
			else
			{
				state = ready;
 250:	86 e0       	ldi	r24, 0x06	; 6
 252:	80 93 26 01 	sts	0x0126, r24	; 0x800126 <state>
				break;	
 256:	08 95       	ret
			}
		default:
			break;
	}
	switch(state)
 258:	22 30       	cpi	r18, 0x02	; 2
 25a:	21 f1       	breq	.+72     	; 0x2a4 <Tick+0x10a>
 25c:	18 f4       	brcc	.+6      	; 0x264 <Tick+0xca>
 25e:	21 30       	cpi	r18, 0x01	; 1
 260:	39 f0       	breq	.+14     	; 0x270 <Tick+0xd6>
 262:	08 95       	ret
 264:	24 30       	cpi	r18, 0x04	; 4
 266:	d9 f1       	breq	.+118    	; 0x2de <Tick+0x144>
 268:	25 30       	cpi	r18, 0x05	; 5
 26a:	09 f0       	breq	.+2      	; 0x26e <Tick+0xd4>
 26c:	46 c0       	rjmp	.+140    	; 0x2fa <Tick+0x160>
 26e:	32 c0       	rjmp	.+100    	; 0x2d4 <Tick+0x13a>
		case start:
			break;
		case wait:
			break;
		case up:
			if(i < 7 && isOn)
 270:	e0 91 25 01 	lds	r30, 0x0125	; 0x800125 <i>
 274:	e7 30       	cpi	r30, 0x07	; 7
 276:	08 f0       	brcs	.+2      	; 0x27a <Tick+0xe0>
 278:	40 c0       	rjmp	.+128    	; 0x2fa <Tick+0x160>
 27a:	80 91 24 01 	lds	r24, 0x0124	; 0x800124 <isOn>
 27e:	88 23       	and	r24, r24
 280:	09 f4       	brne	.+2      	; 0x284 <Tick+0xea>
 282:	3b c0       	rjmp	.+118    	; 0x2fa <Tick+0x160>
			{
				i += 1;
 284:	ef 5f       	subi	r30, 0xFF	; 255
 286:	e0 93 25 01 	sts	0x0125, r30	; 0x800125 <i>
				set_PWM(tones[i]);
 28a:	f0 e0       	ldi	r31, 0x00	; 0
 28c:	ee 0f       	add	r30, r30
 28e:	ff 1f       	adc	r31, r31
 290:	ee 0f       	add	r30, r30
 292:	ff 1f       	adc	r31, r31
 294:	e0 50       	subi	r30, 0x00	; 0
 296:	ff 4f       	sbci	r31, 0xFF	; 255
 298:	60 81       	ld	r22, Z
 29a:	71 81       	ldd	r23, Z+1	; 0x01
 29c:	82 81       	ldd	r24, Z+2	; 0x02
 29e:	93 81       	ldd	r25, Z+3	; 0x03
 2a0:	1a cf       	rjmp	.-460    	; 0xd6 <set_PWM>
 2a2:	08 95       	ret
			}
			break;
		case down:
			if(i > 0 && isOn)
 2a4:	e0 91 25 01 	lds	r30, 0x0125	; 0x800125 <i>
 2a8:	ee 23       	and	r30, r30
 2aa:	39 f1       	breq	.+78     	; 0x2fa <Tick+0x160>
 2ac:	80 91 24 01 	lds	r24, 0x0124	; 0x800124 <isOn>
 2b0:	88 23       	and	r24, r24
 2b2:	19 f1       	breq	.+70     	; 0x2fa <Tick+0x160>
			{
				i -= 1;
 2b4:	e1 50       	subi	r30, 0x01	; 1
 2b6:	e0 93 25 01 	sts	0x0125, r30	; 0x800125 <i>
				set_PWM(tones[i]);
 2ba:	f0 e0       	ldi	r31, 0x00	; 0
 2bc:	ee 0f       	add	r30, r30
 2be:	ff 1f       	adc	r31, r31
 2c0:	ee 0f       	add	r30, r30
 2c2:	ff 1f       	adc	r31, r31
 2c4:	e0 50       	subi	r30, 0x00	; 0
 2c6:	ff 4f       	sbci	r31, 0xFF	; 255
 2c8:	60 81       	ld	r22, Z
 2ca:	71 81       	ldd	r23, Z+1	; 0x01
 2cc:	82 81       	ldd	r24, Z+2	; 0x02
 2ce:	93 81       	ldd	r25, Z+3	; 0x03
 2d0:	02 cf       	rjmp	.-508    	; 0xd6 <set_PWM>
 2d2:	08 95       	ret
			}
			break;
		case off:
			set_PWM(0);
 2d4:	60 e0       	ldi	r22, 0x00	; 0
 2d6:	70 e0       	ldi	r23, 0x00	; 0
 2d8:	cb 01       	movw	r24, r22
 2da:	fd ce       	rjmp	.-518    	; 0xd6 <set_PWM>
			break;
 2dc:	08 95       	ret
		case on:
			set_PWM(tones[i]);
 2de:	e0 91 25 01 	lds	r30, 0x0125	; 0x800125 <i>
 2e2:	f0 e0       	ldi	r31, 0x00	; 0
 2e4:	ee 0f       	add	r30, r30
 2e6:	ff 1f       	adc	r31, r31
 2e8:	ee 0f       	add	r30, r30
 2ea:	ff 1f       	adc	r31, r31
 2ec:	e0 50       	subi	r30, 0x00	; 0
 2ee:	ff 4f       	sbci	r31, 0xFF	; 255
 2f0:	60 81       	ld	r22, Z
 2f2:	71 81       	ldd	r23, Z+1	; 0x01
 2f4:	82 81       	ldd	r24, Z+2	; 0x02
 2f6:	93 81       	ldd	r25, Z+3	; 0x03
 2f8:	ee ce       	rjmp	.-548    	; 0xd6 <set_PWM>
 2fa:	08 95       	ret

000002fc <main>:
	}
}
int main(void)
{
    /* Replace with your application code */
	DDRA = 0x00; PORTA = 0xFF;
 2fc:	11 b8       	out	0x01, r1	; 1
 2fe:	8f ef       	ldi	r24, 0xFF	; 255
 300:	82 b9       	out	0x02, r24	; 2
	DDRB = 0x08; PORTB = 0x00;
 302:	88 e0       	ldi	r24, 0x08	; 8
 304:	84 b9       	out	0x04, r24	; 4
 306:	15 b8       	out	0x05, r1	; 5
	PWM_on();
 308:	3f df       	rcall	.-386    	; 0x188 <PWM_on>
	state = start;
 30a:	10 92 26 01 	sts	0x0126, r1	; 0x800126 <state>
    while (1) 
    {
		Tick();
 30e:	45 df       	rcall	.-374    	; 0x19a <Tick>
 310:	fe cf       	rjmp	.-4      	; 0x30e <main+0x12>

00000312 <__cmpsf2>:
 312:	9c d0       	rcall	.+312    	; 0x44c <__fp_cmp>
 314:	08 f4       	brcc	.+2      	; 0x318 <__cmpsf2+0x6>
 316:	81 e0       	ldi	r24, 0x01	; 1
 318:	08 95       	ret

0000031a <__divsf3>:
 31a:	0c d0       	rcall	.+24     	; 0x334 <__divsf3x>
 31c:	d2 c0       	rjmp	.+420    	; 0x4c2 <__fp_round>
 31e:	ca d0       	rcall	.+404    	; 0x4b4 <__fp_pscB>
 320:	40 f0       	brcs	.+16     	; 0x332 <__divsf3+0x18>
 322:	c1 d0       	rcall	.+386    	; 0x4a6 <__fp_pscA>
 324:	30 f0       	brcs	.+12     	; 0x332 <__divsf3+0x18>
 326:	21 f4       	brne	.+8      	; 0x330 <__divsf3+0x16>
 328:	5f 3f       	cpi	r21, 0xFF	; 255
 32a:	19 f0       	breq	.+6      	; 0x332 <__divsf3+0x18>
 32c:	b3 c0       	rjmp	.+358    	; 0x494 <__fp_inf>
 32e:	51 11       	cpse	r21, r1
 330:	fc c0       	rjmp	.+504    	; 0x52a <__fp_szero>
 332:	b6 c0       	rjmp	.+364    	; 0x4a0 <__fp_nan>

00000334 <__divsf3x>:
 334:	d7 d0       	rcall	.+430    	; 0x4e4 <__fp_split3>
 336:	98 f3       	brcs	.-26     	; 0x31e <__divsf3+0x4>

00000338 <__divsf3_pse>:
 338:	99 23       	and	r25, r25
 33a:	c9 f3       	breq	.-14     	; 0x32e <__divsf3+0x14>
 33c:	55 23       	and	r21, r21
 33e:	b1 f3       	breq	.-20     	; 0x32c <__divsf3+0x12>
 340:	95 1b       	sub	r25, r21
 342:	55 0b       	sbc	r21, r21
 344:	bb 27       	eor	r27, r27
 346:	aa 27       	eor	r26, r26
 348:	62 17       	cp	r22, r18
 34a:	73 07       	cpc	r23, r19
 34c:	84 07       	cpc	r24, r20
 34e:	38 f0       	brcs	.+14     	; 0x35e <__divsf3_pse+0x26>
 350:	9f 5f       	subi	r25, 0xFF	; 255
 352:	5f 4f       	sbci	r21, 0xFF	; 255
 354:	22 0f       	add	r18, r18
 356:	33 1f       	adc	r19, r19
 358:	44 1f       	adc	r20, r20
 35a:	aa 1f       	adc	r26, r26
 35c:	a9 f3       	breq	.-22     	; 0x348 <__divsf3_pse+0x10>
 35e:	33 d0       	rcall	.+102    	; 0x3c6 <__divsf3_pse+0x8e>
 360:	0e 2e       	mov	r0, r30
 362:	3a f0       	brmi	.+14     	; 0x372 <__divsf3_pse+0x3a>
 364:	e0 e8       	ldi	r30, 0x80	; 128
 366:	30 d0       	rcall	.+96     	; 0x3c8 <__divsf3_pse+0x90>
 368:	91 50       	subi	r25, 0x01	; 1
 36a:	50 40       	sbci	r21, 0x00	; 0
 36c:	e6 95       	lsr	r30
 36e:	00 1c       	adc	r0, r0
 370:	ca f7       	brpl	.-14     	; 0x364 <__divsf3_pse+0x2c>
 372:	29 d0       	rcall	.+82     	; 0x3c6 <__divsf3_pse+0x8e>
 374:	fe 2f       	mov	r31, r30
 376:	27 d0       	rcall	.+78     	; 0x3c6 <__divsf3_pse+0x8e>
 378:	66 0f       	add	r22, r22
 37a:	77 1f       	adc	r23, r23
 37c:	88 1f       	adc	r24, r24
 37e:	bb 1f       	adc	r27, r27
 380:	26 17       	cp	r18, r22
 382:	37 07       	cpc	r19, r23
 384:	48 07       	cpc	r20, r24
 386:	ab 07       	cpc	r26, r27
 388:	b0 e8       	ldi	r27, 0x80	; 128
 38a:	09 f0       	breq	.+2      	; 0x38e <__divsf3_pse+0x56>
 38c:	bb 0b       	sbc	r27, r27
 38e:	80 2d       	mov	r24, r0
 390:	bf 01       	movw	r22, r30
 392:	ff 27       	eor	r31, r31
 394:	93 58       	subi	r25, 0x83	; 131
 396:	5f 4f       	sbci	r21, 0xFF	; 255
 398:	2a f0       	brmi	.+10     	; 0x3a4 <__divsf3_pse+0x6c>
 39a:	9e 3f       	cpi	r25, 0xFE	; 254
 39c:	51 05       	cpc	r21, r1
 39e:	68 f0       	brcs	.+26     	; 0x3ba <__divsf3_pse+0x82>
 3a0:	79 c0       	rjmp	.+242    	; 0x494 <__fp_inf>
 3a2:	c3 c0       	rjmp	.+390    	; 0x52a <__fp_szero>
 3a4:	5f 3f       	cpi	r21, 0xFF	; 255
 3a6:	ec f3       	brlt	.-6      	; 0x3a2 <__divsf3_pse+0x6a>
 3a8:	98 3e       	cpi	r25, 0xE8	; 232
 3aa:	dc f3       	brlt	.-10     	; 0x3a2 <__divsf3_pse+0x6a>
 3ac:	86 95       	lsr	r24
 3ae:	77 95       	ror	r23
 3b0:	67 95       	ror	r22
 3b2:	b7 95       	ror	r27
 3b4:	f7 95       	ror	r31
 3b6:	9f 5f       	subi	r25, 0xFF	; 255
 3b8:	c9 f7       	brne	.-14     	; 0x3ac <__divsf3_pse+0x74>
 3ba:	88 0f       	add	r24, r24
 3bc:	91 1d       	adc	r25, r1
 3be:	96 95       	lsr	r25
 3c0:	87 95       	ror	r24
 3c2:	97 f9       	bld	r25, 7
 3c4:	08 95       	ret
 3c6:	e1 e0       	ldi	r30, 0x01	; 1
 3c8:	66 0f       	add	r22, r22
 3ca:	77 1f       	adc	r23, r23
 3cc:	88 1f       	adc	r24, r24
 3ce:	bb 1f       	adc	r27, r27
 3d0:	62 17       	cp	r22, r18
 3d2:	73 07       	cpc	r23, r19
 3d4:	84 07       	cpc	r24, r20
 3d6:	ba 07       	cpc	r27, r26
 3d8:	20 f0       	brcs	.+8      	; 0x3e2 <__divsf3_pse+0xaa>
 3da:	62 1b       	sub	r22, r18
 3dc:	73 0b       	sbc	r23, r19
 3de:	84 0b       	sbc	r24, r20
 3e0:	ba 0b       	sbc	r27, r26
 3e2:	ee 1f       	adc	r30, r30
 3e4:	88 f7       	brcc	.-30     	; 0x3c8 <__divsf3_pse+0x90>
 3e6:	e0 95       	com	r30
 3e8:	08 95       	ret

000003ea <__fixsfsi>:
 3ea:	04 d0       	rcall	.+8      	; 0x3f4 <__fixunssfsi>
 3ec:	68 94       	set
 3ee:	b1 11       	cpse	r27, r1
 3f0:	9c c0       	rjmp	.+312    	; 0x52a <__fp_szero>
 3f2:	08 95       	ret

000003f4 <__fixunssfsi>:
 3f4:	7f d0       	rcall	.+254    	; 0x4f4 <__fp_splitA>
 3f6:	88 f0       	brcs	.+34     	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
 3f8:	9f 57       	subi	r25, 0x7F	; 127
 3fa:	90 f0       	brcs	.+36     	; 0x420 <__LOCK_REGION_LENGTH__+0x20>
 3fc:	b9 2f       	mov	r27, r25
 3fe:	99 27       	eor	r25, r25
 400:	b7 51       	subi	r27, 0x17	; 23
 402:	a0 f0       	brcs	.+40     	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>
 404:	d1 f0       	breq	.+52     	; 0x43a <__LOCK_REGION_LENGTH__+0x3a>
 406:	66 0f       	add	r22, r22
 408:	77 1f       	adc	r23, r23
 40a:	88 1f       	adc	r24, r24
 40c:	99 1f       	adc	r25, r25
 40e:	1a f0       	brmi	.+6      	; 0x416 <__LOCK_REGION_LENGTH__+0x16>
 410:	ba 95       	dec	r27
 412:	c9 f7       	brne	.-14     	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
 414:	12 c0       	rjmp	.+36     	; 0x43a <__LOCK_REGION_LENGTH__+0x3a>
 416:	b1 30       	cpi	r27, 0x01	; 1
 418:	81 f0       	breq	.+32     	; 0x43a <__LOCK_REGION_LENGTH__+0x3a>
 41a:	86 d0       	rcall	.+268    	; 0x528 <__fp_zero>
 41c:	b1 e0       	ldi	r27, 0x01	; 1
 41e:	08 95       	ret
 420:	83 c0       	rjmp	.+262    	; 0x528 <__fp_zero>
 422:	67 2f       	mov	r22, r23
 424:	78 2f       	mov	r23, r24
 426:	88 27       	eor	r24, r24
 428:	b8 5f       	subi	r27, 0xF8	; 248
 42a:	39 f0       	breq	.+14     	; 0x43a <__LOCK_REGION_LENGTH__+0x3a>
 42c:	b9 3f       	cpi	r27, 0xF9	; 249
 42e:	cc f3       	brlt	.-14     	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
 430:	86 95       	lsr	r24
 432:	77 95       	ror	r23
 434:	67 95       	ror	r22
 436:	b3 95       	inc	r27
 438:	d9 f7       	brne	.-10     	; 0x430 <__LOCK_REGION_LENGTH__+0x30>
 43a:	3e f4       	brtc	.+14     	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
 43c:	90 95       	com	r25
 43e:	80 95       	com	r24
 440:	70 95       	com	r23
 442:	61 95       	neg	r22
 444:	7f 4f       	sbci	r23, 0xFF	; 255
 446:	8f 4f       	sbci	r24, 0xFF	; 255
 448:	9f 4f       	sbci	r25, 0xFF	; 255
 44a:	08 95       	ret

0000044c <__fp_cmp>:
 44c:	99 0f       	add	r25, r25
 44e:	00 08       	sbc	r0, r0
 450:	55 0f       	add	r21, r21
 452:	aa 0b       	sbc	r26, r26
 454:	e0 e8       	ldi	r30, 0x80	; 128
 456:	fe ef       	ldi	r31, 0xFE	; 254
 458:	16 16       	cp	r1, r22
 45a:	17 06       	cpc	r1, r23
 45c:	e8 07       	cpc	r30, r24
 45e:	f9 07       	cpc	r31, r25
 460:	c0 f0       	brcs	.+48     	; 0x492 <__fp_cmp+0x46>
 462:	12 16       	cp	r1, r18
 464:	13 06       	cpc	r1, r19
 466:	e4 07       	cpc	r30, r20
 468:	f5 07       	cpc	r31, r21
 46a:	98 f0       	brcs	.+38     	; 0x492 <__fp_cmp+0x46>
 46c:	62 1b       	sub	r22, r18
 46e:	73 0b       	sbc	r23, r19
 470:	84 0b       	sbc	r24, r20
 472:	95 0b       	sbc	r25, r21
 474:	39 f4       	brne	.+14     	; 0x484 <__fp_cmp+0x38>
 476:	0a 26       	eor	r0, r26
 478:	61 f0       	breq	.+24     	; 0x492 <__fp_cmp+0x46>
 47a:	23 2b       	or	r18, r19
 47c:	24 2b       	or	r18, r20
 47e:	25 2b       	or	r18, r21
 480:	21 f4       	brne	.+8      	; 0x48a <__fp_cmp+0x3e>
 482:	08 95       	ret
 484:	0a 26       	eor	r0, r26
 486:	09 f4       	brne	.+2      	; 0x48a <__fp_cmp+0x3e>
 488:	a1 40       	sbci	r26, 0x01	; 1
 48a:	a6 95       	lsr	r26
 48c:	8f ef       	ldi	r24, 0xFF	; 255
 48e:	81 1d       	adc	r24, r1
 490:	81 1d       	adc	r24, r1
 492:	08 95       	ret

00000494 <__fp_inf>:
 494:	97 f9       	bld	r25, 7
 496:	9f 67       	ori	r25, 0x7F	; 127
 498:	80 e8       	ldi	r24, 0x80	; 128
 49a:	70 e0       	ldi	r23, 0x00	; 0
 49c:	60 e0       	ldi	r22, 0x00	; 0
 49e:	08 95       	ret

000004a0 <__fp_nan>:
 4a0:	9f ef       	ldi	r25, 0xFF	; 255
 4a2:	80 ec       	ldi	r24, 0xC0	; 192
 4a4:	08 95       	ret

000004a6 <__fp_pscA>:
 4a6:	00 24       	eor	r0, r0
 4a8:	0a 94       	dec	r0
 4aa:	16 16       	cp	r1, r22
 4ac:	17 06       	cpc	r1, r23
 4ae:	18 06       	cpc	r1, r24
 4b0:	09 06       	cpc	r0, r25
 4b2:	08 95       	ret

000004b4 <__fp_pscB>:
 4b4:	00 24       	eor	r0, r0
 4b6:	0a 94       	dec	r0
 4b8:	12 16       	cp	r1, r18
 4ba:	13 06       	cpc	r1, r19
 4bc:	14 06       	cpc	r1, r20
 4be:	05 06       	cpc	r0, r21
 4c0:	08 95       	ret

000004c2 <__fp_round>:
 4c2:	09 2e       	mov	r0, r25
 4c4:	03 94       	inc	r0
 4c6:	00 0c       	add	r0, r0
 4c8:	11 f4       	brne	.+4      	; 0x4ce <__fp_round+0xc>
 4ca:	88 23       	and	r24, r24
 4cc:	52 f0       	brmi	.+20     	; 0x4e2 <__fp_round+0x20>
 4ce:	bb 0f       	add	r27, r27
 4d0:	40 f4       	brcc	.+16     	; 0x4e2 <__fp_round+0x20>
 4d2:	bf 2b       	or	r27, r31
 4d4:	11 f4       	brne	.+4      	; 0x4da <__fp_round+0x18>
 4d6:	60 ff       	sbrs	r22, 0
 4d8:	04 c0       	rjmp	.+8      	; 0x4e2 <__fp_round+0x20>
 4da:	6f 5f       	subi	r22, 0xFF	; 255
 4dc:	7f 4f       	sbci	r23, 0xFF	; 255
 4de:	8f 4f       	sbci	r24, 0xFF	; 255
 4e0:	9f 4f       	sbci	r25, 0xFF	; 255
 4e2:	08 95       	ret

000004e4 <__fp_split3>:
 4e4:	57 fd       	sbrc	r21, 7
 4e6:	90 58       	subi	r25, 0x80	; 128
 4e8:	44 0f       	add	r20, r20
 4ea:	55 1f       	adc	r21, r21
 4ec:	59 f0       	breq	.+22     	; 0x504 <__fp_splitA+0x10>
 4ee:	5f 3f       	cpi	r21, 0xFF	; 255
 4f0:	71 f0       	breq	.+28     	; 0x50e <__fp_splitA+0x1a>
 4f2:	47 95       	ror	r20

000004f4 <__fp_splitA>:
 4f4:	88 0f       	add	r24, r24
 4f6:	97 fb       	bst	r25, 7
 4f8:	99 1f       	adc	r25, r25
 4fa:	61 f0       	breq	.+24     	; 0x514 <__fp_splitA+0x20>
 4fc:	9f 3f       	cpi	r25, 0xFF	; 255
 4fe:	79 f0       	breq	.+30     	; 0x51e <__fp_splitA+0x2a>
 500:	87 95       	ror	r24
 502:	08 95       	ret
 504:	12 16       	cp	r1, r18
 506:	13 06       	cpc	r1, r19
 508:	14 06       	cpc	r1, r20
 50a:	55 1f       	adc	r21, r21
 50c:	f2 cf       	rjmp	.-28     	; 0x4f2 <__fp_split3+0xe>
 50e:	46 95       	lsr	r20
 510:	f1 df       	rcall	.-30     	; 0x4f4 <__fp_splitA>
 512:	08 c0       	rjmp	.+16     	; 0x524 <__fp_splitA+0x30>
 514:	16 16       	cp	r1, r22
 516:	17 06       	cpc	r1, r23
 518:	18 06       	cpc	r1, r24
 51a:	99 1f       	adc	r25, r25
 51c:	f1 cf       	rjmp	.-30     	; 0x500 <__fp_splitA+0xc>
 51e:	86 95       	lsr	r24
 520:	71 05       	cpc	r23, r1
 522:	61 05       	cpc	r22, r1
 524:	08 94       	sec
 526:	08 95       	ret

00000528 <__fp_zero>:
 528:	e8 94       	clt

0000052a <__fp_szero>:
 52a:	bb 27       	eor	r27, r27
 52c:	66 27       	eor	r22, r22
 52e:	77 27       	eor	r23, r23
 530:	cb 01       	movw	r24, r22
 532:	97 f9       	bld	r25, 7
 534:	08 95       	ret

00000536 <__gesf2>:
 536:	8a df       	rcall	.-236    	; 0x44c <__fp_cmp>
 538:	08 f4       	brcc	.+2      	; 0x53c <__gesf2+0x6>
 53a:	8f ef       	ldi	r24, 0xFF	; 255
 53c:	08 95       	ret

0000053e <__mulsf3>:
 53e:	0b d0       	rcall	.+22     	; 0x556 <__mulsf3x>
 540:	c0 cf       	rjmp	.-128    	; 0x4c2 <__fp_round>
 542:	b1 df       	rcall	.-158    	; 0x4a6 <__fp_pscA>
 544:	28 f0       	brcs	.+10     	; 0x550 <__mulsf3+0x12>
 546:	b6 df       	rcall	.-148    	; 0x4b4 <__fp_pscB>
 548:	18 f0       	brcs	.+6      	; 0x550 <__mulsf3+0x12>
 54a:	95 23       	and	r25, r21
 54c:	09 f0       	breq	.+2      	; 0x550 <__mulsf3+0x12>
 54e:	a2 cf       	rjmp	.-188    	; 0x494 <__fp_inf>
 550:	a7 cf       	rjmp	.-178    	; 0x4a0 <__fp_nan>
 552:	11 24       	eor	r1, r1
 554:	ea cf       	rjmp	.-44     	; 0x52a <__fp_szero>

00000556 <__mulsf3x>:
 556:	c6 df       	rcall	.-116    	; 0x4e4 <__fp_split3>
 558:	a0 f3       	brcs	.-24     	; 0x542 <__mulsf3+0x4>

0000055a <__mulsf3_pse>:
 55a:	95 9f       	mul	r25, r21
 55c:	d1 f3       	breq	.-12     	; 0x552 <__mulsf3+0x14>
 55e:	95 0f       	add	r25, r21
 560:	50 e0       	ldi	r21, 0x00	; 0
 562:	55 1f       	adc	r21, r21
 564:	62 9f       	mul	r22, r18
 566:	f0 01       	movw	r30, r0
 568:	72 9f       	mul	r23, r18
 56a:	bb 27       	eor	r27, r27
 56c:	f0 0d       	add	r31, r0
 56e:	b1 1d       	adc	r27, r1
 570:	63 9f       	mul	r22, r19
 572:	aa 27       	eor	r26, r26
 574:	f0 0d       	add	r31, r0
 576:	b1 1d       	adc	r27, r1
 578:	aa 1f       	adc	r26, r26
 57a:	64 9f       	mul	r22, r20
 57c:	66 27       	eor	r22, r22
 57e:	b0 0d       	add	r27, r0
 580:	a1 1d       	adc	r26, r1
 582:	66 1f       	adc	r22, r22
 584:	82 9f       	mul	r24, r18
 586:	22 27       	eor	r18, r18
 588:	b0 0d       	add	r27, r0
 58a:	a1 1d       	adc	r26, r1
 58c:	62 1f       	adc	r22, r18
 58e:	73 9f       	mul	r23, r19
 590:	b0 0d       	add	r27, r0
 592:	a1 1d       	adc	r26, r1
 594:	62 1f       	adc	r22, r18
 596:	83 9f       	mul	r24, r19
 598:	a0 0d       	add	r26, r0
 59a:	61 1d       	adc	r22, r1
 59c:	22 1f       	adc	r18, r18
 59e:	74 9f       	mul	r23, r20
 5a0:	33 27       	eor	r19, r19
 5a2:	a0 0d       	add	r26, r0
 5a4:	61 1d       	adc	r22, r1
 5a6:	23 1f       	adc	r18, r19
 5a8:	84 9f       	mul	r24, r20
 5aa:	60 0d       	add	r22, r0
 5ac:	21 1d       	adc	r18, r1
 5ae:	82 2f       	mov	r24, r18
 5b0:	76 2f       	mov	r23, r22
 5b2:	6a 2f       	mov	r22, r26
 5b4:	11 24       	eor	r1, r1
 5b6:	9f 57       	subi	r25, 0x7F	; 127
 5b8:	50 40       	sbci	r21, 0x00	; 0
 5ba:	8a f0       	brmi	.+34     	; 0x5de <__mulsf3_pse+0x84>
 5bc:	e1 f0       	breq	.+56     	; 0x5f6 <__mulsf3_pse+0x9c>
 5be:	88 23       	and	r24, r24
 5c0:	4a f0       	brmi	.+18     	; 0x5d4 <__mulsf3_pse+0x7a>
 5c2:	ee 0f       	add	r30, r30
 5c4:	ff 1f       	adc	r31, r31
 5c6:	bb 1f       	adc	r27, r27
 5c8:	66 1f       	adc	r22, r22
 5ca:	77 1f       	adc	r23, r23
 5cc:	88 1f       	adc	r24, r24
 5ce:	91 50       	subi	r25, 0x01	; 1
 5d0:	50 40       	sbci	r21, 0x00	; 0
 5d2:	a9 f7       	brne	.-22     	; 0x5be <__mulsf3_pse+0x64>
 5d4:	9e 3f       	cpi	r25, 0xFE	; 254
 5d6:	51 05       	cpc	r21, r1
 5d8:	70 f0       	brcs	.+28     	; 0x5f6 <__mulsf3_pse+0x9c>
 5da:	5c cf       	rjmp	.-328    	; 0x494 <__fp_inf>
 5dc:	a6 cf       	rjmp	.-180    	; 0x52a <__fp_szero>
 5de:	5f 3f       	cpi	r21, 0xFF	; 255
 5e0:	ec f3       	brlt	.-6      	; 0x5dc <__mulsf3_pse+0x82>
 5e2:	98 3e       	cpi	r25, 0xE8	; 232
 5e4:	dc f3       	brlt	.-10     	; 0x5dc <__mulsf3_pse+0x82>
 5e6:	86 95       	lsr	r24
 5e8:	77 95       	ror	r23
 5ea:	67 95       	ror	r22
 5ec:	b7 95       	ror	r27
 5ee:	f7 95       	ror	r31
 5f0:	e7 95       	ror	r30
 5f2:	9f 5f       	subi	r25, 0xFF	; 255
 5f4:	c1 f7       	brne	.-16     	; 0x5e6 <__mulsf3_pse+0x8c>
 5f6:	fe 2b       	or	r31, r30
 5f8:	88 0f       	add	r24, r24
 5fa:	91 1d       	adc	r25, r1
 5fc:	96 95       	lsr	r25
 5fe:	87 95       	ror	r24
 600:	97 f9       	bld	r25, 7
 602:	08 95       	ret

00000604 <__tablejump2__>:
 604:	ee 0f       	add	r30, r30
 606:	ff 1f       	adc	r31, r31
 608:	00 24       	eor	r0, r0
 60a:	00 1c       	adc	r0, r0
 60c:	0b be       	out	0x3b, r0	; 59
 60e:	07 90       	elpm	r0, Z+
 610:	f6 91       	elpm	r31, Z
 612:	e0 2d       	mov	r30, r0
 614:	09 94       	ijmp

00000616 <_exit>:
 616:	f8 94       	cli

00000618 <__stop_program>:
 618:	ff cf       	rjmp	.-2      	; 0x618 <__stop_program>
