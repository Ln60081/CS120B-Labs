
byu014_lnguy089_lab4_part1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000224  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000001b0  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000004  00800100  00800100  00000224  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000224  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000254  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000028  00000000  00000000  00000294  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000885  00000000  00000000  000002bc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000007c6  00000000  00000000  00000b41  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000002d1  00000000  00000000  00001307  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000054  00000000  00000000  000015d8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000412  00000000  00000000  0000162c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000076  00000000  00000000  00001a3e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000018  00000000  00000000  00001ab4  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	53 c0       	rjmp	.+166    	; 0xac <__bad_interrupt>
   6:	00 00       	nop
   8:	51 c0       	rjmp	.+162    	; 0xac <__bad_interrupt>
   a:	00 00       	nop
   c:	4f c0       	rjmp	.+158    	; 0xac <__bad_interrupt>
   e:	00 00       	nop
  10:	4d c0       	rjmp	.+154    	; 0xac <__bad_interrupt>
  12:	00 00       	nop
  14:	4b c0       	rjmp	.+150    	; 0xac <__bad_interrupt>
  16:	00 00       	nop
  18:	49 c0       	rjmp	.+146    	; 0xac <__bad_interrupt>
  1a:	00 00       	nop
  1c:	47 c0       	rjmp	.+142    	; 0xac <__bad_interrupt>
  1e:	00 00       	nop
  20:	45 c0       	rjmp	.+138    	; 0xac <__bad_interrupt>
  22:	00 00       	nop
  24:	43 c0       	rjmp	.+134    	; 0xac <__bad_interrupt>
  26:	00 00       	nop
  28:	41 c0       	rjmp	.+130    	; 0xac <__bad_interrupt>
  2a:	00 00       	nop
  2c:	3f c0       	rjmp	.+126    	; 0xac <__bad_interrupt>
  2e:	00 00       	nop
  30:	3d c0       	rjmp	.+122    	; 0xac <__bad_interrupt>
  32:	00 00       	nop
  34:	3b c0       	rjmp	.+118    	; 0xac <__bad_interrupt>
  36:	00 00       	nop
  38:	39 c0       	rjmp	.+114    	; 0xac <__bad_interrupt>
  3a:	00 00       	nop
  3c:	37 c0       	rjmp	.+110    	; 0xac <__bad_interrupt>
  3e:	00 00       	nop
  40:	35 c0       	rjmp	.+106    	; 0xac <__bad_interrupt>
  42:	00 00       	nop
  44:	33 c0       	rjmp	.+102    	; 0xac <__bad_interrupt>
  46:	00 00       	nop
  48:	31 c0       	rjmp	.+98     	; 0xac <__bad_interrupt>
  4a:	00 00       	nop
  4c:	2f c0       	rjmp	.+94     	; 0xac <__bad_interrupt>
  4e:	00 00       	nop
  50:	2d c0       	rjmp	.+90     	; 0xac <__bad_interrupt>
  52:	00 00       	nop
  54:	2b c0       	rjmp	.+86     	; 0xac <__bad_interrupt>
  56:	00 00       	nop
  58:	29 c0       	rjmp	.+82     	; 0xac <__bad_interrupt>
  5a:	00 00       	nop
  5c:	27 c0       	rjmp	.+78     	; 0xac <__bad_interrupt>
  5e:	00 00       	nop
  60:	25 c0       	rjmp	.+74     	; 0xac <__bad_interrupt>
  62:	00 00       	nop
  64:	23 c0       	rjmp	.+70     	; 0xac <__bad_interrupt>
  66:	00 00       	nop
  68:	21 c0       	rjmp	.+66     	; 0xac <__bad_interrupt>
  6a:	00 00       	nop
  6c:	1f c0       	rjmp	.+62     	; 0xac <__bad_interrupt>
  6e:	00 00       	nop
  70:	1d c0       	rjmp	.+58     	; 0xac <__bad_interrupt>
  72:	00 00       	nop
  74:	1b c0       	rjmp	.+54     	; 0xac <__bad_interrupt>
  76:	00 00       	nop
  78:	19 c0       	rjmp	.+50     	; 0xac <__bad_interrupt>
  7a:	00 00       	nop
  7c:	17 c0       	rjmp	.+46     	; 0xac <__bad_interrupt>
  7e:	00 00       	nop
  80:	15 c0       	rjmp	.+42     	; 0xac <__bad_interrupt>
  82:	00 00       	nop
  84:	13 c0       	rjmp	.+38     	; 0xac <__bad_interrupt>
  86:	00 00       	nop
  88:	11 c0       	rjmp	.+34     	; 0xac <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e4       	ldi	r29, 0x40	; 64
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_clear_bss>:
  98:	21 e0       	ldi	r18, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	01 c0       	rjmp	.+2      	; 0xa2 <.do_clear_bss_start>

000000a0 <.do_clear_bss_loop>:
  a0:	1d 92       	st	X+, r1

000000a2 <.do_clear_bss_start>:
  a2:	a4 30       	cpi	r26, 0x04	; 4
  a4:	b2 07       	cpc	r27, r18
  a6:	e1 f7       	brne	.-8      	; 0xa0 <.do_clear_bss_loop>
  a8:	66 d0       	rcall	.+204    	; 0x176 <main>
  aa:	80 c0       	rjmp	.+256    	; 0x1ac <_exit>

000000ac <__bad_interrupt>:
  ac:	a9 cf       	rjmp	.-174    	; 0x0 <__vectors>

000000ae <Tick>:
enum States{Start, s0, s1} state;
unsigned char tempA;
unsigned char tempB;

void Tick()
{
  ae:	cf 93       	push	r28
  b0:	df 93       	push	r29
  b2:	cd b7       	in	r28, 0x3d	; 61
  b4:	de b7       	in	r29, 0x3e	; 62
	tempA = PINA;
  b6:	80 e2       	ldi	r24, 0x20	; 32
  b8:	90 e0       	ldi	r25, 0x00	; 0
  ba:	fc 01       	movw	r30, r24
  bc:	80 81       	ld	r24, Z
  be:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <tempA>
	tempB = 0x0;
  c2:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <_edata>
	switch(state)
  c6:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <state>
  ca:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <state+0x1>
  ce:	81 30       	cpi	r24, 0x01	; 1
  d0:	91 05       	cpc	r25, r1
  d2:	69 f0       	breq	.+26     	; 0xee <Tick+0x40>
  d4:	81 30       	cpi	r24, 0x01	; 1
  d6:	91 05       	cpc	r25, r1
  d8:	18 f0       	brcs	.+6      	; 0xe0 <Tick+0x32>
  da:	02 97       	sbiw	r24, 0x02	; 2
  dc:	d1 f0       	breq	.+52     	; 0x112 <Tick+0x64>
				state = s1;
			}
			break;
		
		default:
			break;
  de:	2b c0       	rjmp	.+86     	; 0x136 <Tick+0x88>
	tempA = PINA;
	tempB = 0x0;
	switch(state)
	{
		case Start:
			state = s0;
  e0:	81 e0       	ldi	r24, 0x01	; 1
  e2:	90 e0       	ldi	r25, 0x00	; 0
  e4:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <state+0x1>
  e8:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <state>
			break;
  ec:	24 c0       	rjmp	.+72     	; 0x136 <Tick+0x88>
		
		case s0:
			if(tempA == 0x1)
  ee:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <tempA>
  f2:	81 30       	cpi	r24, 0x01	; 1
  f4:	39 f4       	brne	.+14     	; 0x104 <Tick+0x56>
			{
				state = s1;
  f6:	82 e0       	ldi	r24, 0x02	; 2
  f8:	90 e0       	ldi	r25, 0x00	; 0
  fa:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <state+0x1>
  fe:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <state>
			}
			else
			{
				state = s0;
			}
			break;
 102:	19 c0       	rjmp	.+50     	; 0x136 <Tick+0x88>
			{
				state = s1;
			}
			else
			{
				state = s0;
 104:	81 e0       	ldi	r24, 0x01	; 1
 106:	90 e0       	ldi	r25, 0x00	; 0
 108:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <state+0x1>
 10c:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <state>
			}
			break;
 110:	12 c0       	rjmp	.+36     	; 0x136 <Tick+0x88>
		
		case s1:
			if(tempA == 0x1)
 112:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <tempA>
 116:	81 30       	cpi	r24, 0x01	; 1
 118:	39 f4       	brne	.+14     	; 0x128 <Tick+0x7a>
			{
				state = s0;
 11a:	81 e0       	ldi	r24, 0x01	; 1
 11c:	90 e0       	ldi	r25, 0x00	; 0
 11e:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <state+0x1>
 122:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <state>
			}
			else
			{
				state = s1;
			}
			break;
 126:	06 c0       	rjmp	.+12     	; 0x134 <Tick+0x86>
			{
				state = s0;
			}
			else
			{
				state = s1;
 128:	82 e0       	ldi	r24, 0x02	; 2
 12a:	90 e0       	ldi	r25, 0x00	; 0
 12c:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <state+0x1>
 130:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <state>
			}
			break;
 134:	00 00       	nop
		
		default:
			break;
	}
	switch(state)
 136:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <state>
 13a:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <state+0x1>
 13e:	81 30       	cpi	r24, 0x01	; 1
 140:	91 05       	cpc	r25, r1
 142:	31 f0       	breq	.+12     	; 0x150 <Tick+0xa2>
 144:	81 30       	cpi	r24, 0x01	; 1
 146:	91 05       	cpc	r25, r1
 148:	58 f0       	brcs	.+22     	; 0x160 <Tick+0xb2>
 14a:	02 97       	sbiw	r24, 0x02	; 2
 14c:	29 f0       	breq	.+10     	; 0x158 <Tick+0xaa>
		case s1:
			tempB  = 0x2;
			break;
		
		default:
			break;
 14e:	09 c0       	rjmp	.+18     	; 0x162 <Tick+0xb4>
	{
		case Start:
			break;
		
		case s0:
			tempB = 0x1;
 150:	81 e0       	ldi	r24, 0x01	; 1
 152:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
			break;
 156:	05 c0       	rjmp	.+10     	; 0x162 <Tick+0xb4>
			
		case s1:
			tempB  = 0x2;
 158:	82 e0       	ldi	r24, 0x02	; 2
 15a:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
			break;
 15e:	01 c0       	rjmp	.+2      	; 0x162 <Tick+0xb4>
			break;
	}
	switch(state)
	{
		case Start:
			break;
 160:	00 00       	nop
		
		default:
			break;
		
	}
		PORTB = tempB;
 162:	85 e2       	ldi	r24, 0x25	; 37
 164:	90 e0       	ldi	r25, 0x00	; 0
 166:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <_edata>
 16a:	fc 01       	movw	r30, r24
 16c:	20 83       	st	Z, r18
}
 16e:	00 00       	nop
 170:	df 91       	pop	r29
 172:	cf 91       	pop	r28
 174:	08 95       	ret

00000176 <main>:
int main(void)
{
 176:	cf 93       	push	r28
 178:	df 93       	push	r29
 17a:	cd b7       	in	r28, 0x3d	; 61
 17c:	de b7       	in	r29, 0x3e	; 62
    /* Replace with your application code */
	DDRA = 0x0; PORTA = 0x0;
 17e:	81 e2       	ldi	r24, 0x21	; 33
 180:	90 e0       	ldi	r25, 0x00	; 0
 182:	fc 01       	movw	r30, r24
 184:	10 82       	st	Z, r1
 186:	82 e2       	ldi	r24, 0x22	; 34
 188:	90 e0       	ldi	r25, 0x00	; 0
 18a:	fc 01       	movw	r30, r24
 18c:	10 82       	st	Z, r1
	DDRB = 0xF; PORTB = 0x0;
 18e:	84 e2       	ldi	r24, 0x24	; 36
 190:	90 e0       	ldi	r25, 0x00	; 0
 192:	2f e0       	ldi	r18, 0x0F	; 15
 194:	fc 01       	movw	r30, r24
 196:	20 83       	st	Z, r18
 198:	85 e2       	ldi	r24, 0x25	; 37
 19a:	90 e0       	ldi	r25, 0x00	; 0
 19c:	fc 01       	movw	r30, r24
 19e:	10 82       	st	Z, r1
	state = Start;
 1a0:	10 92 03 01 	sts	0x0103, r1	; 0x800103 <state+0x1>
 1a4:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <state>
	
    while (1) 
    {
		Tick();
 1a8:	82 df       	rcall	.-252    	; 0xae <Tick>
    }
 1aa:	fe cf       	rjmp	.-4      	; 0x1a8 <main+0x32>

000001ac <_exit>:
 1ac:	f8 94       	cli

000001ae <__stop_program>:
 1ae:	ff cf       	rjmp	.-2      	; 0x1ae <__stop_program>
