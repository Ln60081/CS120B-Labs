
byu014_lnguy089_lab4_part2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000434  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000003c0  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000004  00800100  00800100  00000434  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000434  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000464  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000028  00000000  00000000  000004a4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000899  00000000  00000000  000004cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000007c6  00000000  00000000  00000d65  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000047a  00000000  00000000  0000152b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000054  00000000  00000000  000019a8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000421  00000000  00000000  000019fc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000076  00000000  00000000  00001e1d  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000018  00000000  00000000  00001e93  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	53 c0       	rjmp	.+166    	; 0xac <__bad_interrupt>
   6:	00 00       	nop
   8:	51 c0       	rjmp	.+162    	; 0xac <__bad_interrupt>
   a:	00 00       	nop
   c:	4f c0       	rjmp	.+158    	; 0xac <__bad_interrupt>
   e:	00 00       	nop
  10:	4d c0       	rjmp	.+154    	; 0xac <__bad_interrupt>
  12:	00 00       	nop
  14:	4b c0       	rjmp	.+150    	; 0xac <__bad_interrupt>
  16:	00 00       	nop
  18:	49 c0       	rjmp	.+146    	; 0xac <__bad_interrupt>
  1a:	00 00       	nop
  1c:	47 c0       	rjmp	.+142    	; 0xac <__bad_interrupt>
  1e:	00 00       	nop
  20:	45 c0       	rjmp	.+138    	; 0xac <__bad_interrupt>
  22:	00 00       	nop
  24:	43 c0       	rjmp	.+134    	; 0xac <__bad_interrupt>
  26:	00 00       	nop
  28:	41 c0       	rjmp	.+130    	; 0xac <__bad_interrupt>
  2a:	00 00       	nop
  2c:	3f c0       	rjmp	.+126    	; 0xac <__bad_interrupt>
  2e:	00 00       	nop
  30:	3d c0       	rjmp	.+122    	; 0xac <__bad_interrupt>
  32:	00 00       	nop
  34:	3b c0       	rjmp	.+118    	; 0xac <__bad_interrupt>
  36:	00 00       	nop
  38:	39 c0       	rjmp	.+114    	; 0xac <__bad_interrupt>
  3a:	00 00       	nop
  3c:	37 c0       	rjmp	.+110    	; 0xac <__bad_interrupt>
  3e:	00 00       	nop
  40:	35 c0       	rjmp	.+106    	; 0xac <__bad_interrupt>
  42:	00 00       	nop
  44:	33 c0       	rjmp	.+102    	; 0xac <__bad_interrupt>
  46:	00 00       	nop
  48:	31 c0       	rjmp	.+98     	; 0xac <__bad_interrupt>
  4a:	00 00       	nop
  4c:	2f c0       	rjmp	.+94     	; 0xac <__bad_interrupt>
  4e:	00 00       	nop
  50:	2d c0       	rjmp	.+90     	; 0xac <__bad_interrupt>
  52:	00 00       	nop
  54:	2b c0       	rjmp	.+86     	; 0xac <__bad_interrupt>
  56:	00 00       	nop
  58:	29 c0       	rjmp	.+82     	; 0xac <__bad_interrupt>
  5a:	00 00       	nop
  5c:	27 c0       	rjmp	.+78     	; 0xac <__bad_interrupt>
  5e:	00 00       	nop
  60:	25 c0       	rjmp	.+74     	; 0xac <__bad_interrupt>
  62:	00 00       	nop
  64:	23 c0       	rjmp	.+70     	; 0xac <__bad_interrupt>
  66:	00 00       	nop
  68:	21 c0       	rjmp	.+66     	; 0xac <__bad_interrupt>
  6a:	00 00       	nop
  6c:	1f c0       	rjmp	.+62     	; 0xac <__bad_interrupt>
  6e:	00 00       	nop
  70:	1d c0       	rjmp	.+58     	; 0xac <__bad_interrupt>
  72:	00 00       	nop
  74:	1b c0       	rjmp	.+54     	; 0xac <__bad_interrupt>
  76:	00 00       	nop
  78:	19 c0       	rjmp	.+50     	; 0xac <__bad_interrupt>
  7a:	00 00       	nop
  7c:	17 c0       	rjmp	.+46     	; 0xac <__bad_interrupt>
  7e:	00 00       	nop
  80:	15 c0       	rjmp	.+42     	; 0xac <__bad_interrupt>
  82:	00 00       	nop
  84:	13 c0       	rjmp	.+38     	; 0xac <__bad_interrupt>
  86:	00 00       	nop
  88:	11 c0       	rjmp	.+34     	; 0xac <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e4       	ldi	r29, 0x40	; 64
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_clear_bss>:
  98:	21 e0       	ldi	r18, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	01 c0       	rjmp	.+2      	; 0xa2 <.do_clear_bss_start>

000000a0 <.do_clear_bss_loop>:
  a0:	1d 92       	st	X+, r1

000000a2 <.do_clear_bss_start>:
  a2:	a4 30       	cpi	r26, 0x04	; 4
  a4:	b2 07       	cpc	r27, r18
  a6:	e1 f7       	brne	.-8      	; 0xa0 <.do_clear_bss_loop>
  a8:	72 d1       	rcall	.+740    	; 0x38e <main>
  aa:	88 c1       	rjmp	.+784    	; 0x3bc <_exit>

000000ac <__bad_interrupt>:
  ac:	a9 cf       	rjmp	.-174    	; 0x0 <__vectors>

000000ae <Tick>:
enum States{Start, init, inc, dec,wait, zero} state;
char unsigned tempA;
char unsigned tempC;

void Tick()
{
  ae:	cf 93       	push	r28
  b0:	df 93       	push	r29
  b2:	cd b7       	in	r28, 0x3d	; 61
  b4:	de b7       	in	r29, 0x3e	; 62
	tempA = PINA;
  b6:	80 e2       	ldi	r24, 0x20	; 32
  b8:	90 e0       	ldi	r25, 0x00	; 0
  ba:	fc 01       	movw	r30, r24
  bc:	80 81       	ld	r24, Z
  be:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
	tempC = PORTC;
  c2:	88 e2       	ldi	r24, 0x28	; 40
  c4:	90 e0       	ldi	r25, 0x00	; 0
  c6:	fc 01       	movw	r30, r24
  c8:	80 81       	ld	r24, Z
  ca:	80 93 03 01 	sts	0x0103, r24	; 0x800103 <tempC>
	switch(state)
  ce:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <state>
  d2:	90 91 02 01 	lds	r25, 0x0102	; 0x800102 <state+0x1>
  d6:	82 30       	cpi	r24, 0x02	; 2
  d8:	91 05       	cpc	r25, r1
  da:	09 f4       	brne	.+2      	; 0xde <Tick+0x30>
  dc:	48 c0       	rjmp	.+144    	; 0x16e <Tick+0xc0>
  de:	83 30       	cpi	r24, 0x03	; 3
  e0:	91 05       	cpc	r25, r1
  e2:	28 f4       	brcc	.+10     	; 0xee <Tick+0x40>
  e4:	00 97       	sbiw	r24, 0x00	; 0
  e6:	79 f0       	breq	.+30     	; 0x106 <Tick+0x58>
  e8:	01 97       	sbiw	r24, 0x01	; 1
  ea:	a1 f0       	breq	.+40     	; 0x114 <Tick+0x66>
				state = wait;
			}
			break;
		
		default:
			break;
  ec:	fb c0       	rjmp	.+502    	; 0x2e4 <Tick+0x236>

void Tick()
{
	tempA = PINA;
	tempC = PORTC;
	switch(state)
  ee:	84 30       	cpi	r24, 0x04	; 4
  f0:	91 05       	cpc	r25, r1
  f2:	09 f4       	brne	.+2      	; 0xf6 <Tick+0x48>
  f4:	96 c0       	rjmp	.+300    	; 0x222 <Tick+0x174>
  f6:	84 30       	cpi	r24, 0x04	; 4
  f8:	91 05       	cpc	r25, r1
  fa:	08 f4       	brcc	.+2      	; 0xfe <Tick+0x50>
  fc:	65 c0       	rjmp	.+202    	; 0x1c8 <Tick+0x11a>
  fe:	05 97       	sbiw	r24, 0x05	; 5
 100:	09 f4       	brne	.+2      	; 0x104 <Tick+0x56>
 102:	bb c0       	rjmp	.+374    	; 0x27a <Tick+0x1cc>
				state = wait;
			}
			break;
		
		default:
			break;
 104:	ef c0       	rjmp	.+478    	; 0x2e4 <Tick+0x236>
	tempA = PINA;
	tempC = PORTC;
	switch(state)
	{
		case Start:
			state = init;
 106:	81 e0       	ldi	r24, 0x01	; 1
 108:	90 e0       	ldi	r25, 0x00	; 0
 10a:	90 93 02 01 	sts	0x0102, r25	; 0x800102 <state+0x1>
 10e:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <state>
			break;
 112:	e8 c0       	rjmp	.+464    	; 0x2e4 <Tick+0x236>
			
		case init:
			if(tempA == 0x1)
 114:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 118:	81 30       	cpi	r24, 0x01	; 1
 11a:	39 f4       	brne	.+14     	; 0x12a <Tick+0x7c>
			{
				state = inc;
 11c:	82 e0       	ldi	r24, 0x02	; 2
 11e:	90 e0       	ldi	r25, 0x00	; 0
 120:	90 93 02 01 	sts	0x0102, r25	; 0x800102 <state+0x1>
 124:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <state>
			}
			else if(tempA == 0x0)
			{
				state = wait;
			}
			break;
 128:	d4 c0       	rjmp	.+424    	; 0x2d2 <Tick+0x224>
		case init:
			if(tempA == 0x1)
			{
				state = inc;
			}
			else if(tempA == 0x2)
 12a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 12e:	82 30       	cpi	r24, 0x02	; 2
 130:	39 f4       	brne	.+14     	; 0x140 <Tick+0x92>
			{
				state = dec;
 132:	83 e0       	ldi	r24, 0x03	; 3
 134:	90 e0       	ldi	r25, 0x00	; 0
 136:	90 93 02 01 	sts	0x0102, r25	; 0x800102 <state+0x1>
 13a:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <state>
			}
			else if(tempA == 0x0)
			{
				state = wait;
			}
			break;
 13e:	c9 c0       	rjmp	.+402    	; 0x2d2 <Tick+0x224>
			}
			else if(tempA == 0x2)
			{
				state = dec;
			}
			else if(tempA == 0x3)
 140:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 144:	83 30       	cpi	r24, 0x03	; 3
 146:	39 f4       	brne	.+14     	; 0x156 <Tick+0xa8>
			{
				state = zero;
 148:	85 e0       	ldi	r24, 0x05	; 5
 14a:	90 e0       	ldi	r25, 0x00	; 0
 14c:	90 93 02 01 	sts	0x0102, r25	; 0x800102 <state+0x1>
 150:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <state>
			}
			else if(tempA == 0x0)
			{
				state = wait;
			}
			break;
 154:	be c0       	rjmp	.+380    	; 0x2d2 <Tick+0x224>
			}
			else if(tempA == 0x3)
			{
				state = zero;
			}
			else if(tempA == 0x0)
 156:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 15a:	88 23       	and	r24, r24
 15c:	09 f0       	breq	.+2      	; 0x160 <Tick+0xb2>
 15e:	b9 c0       	rjmp	.+370    	; 0x2d2 <Tick+0x224>
			{
				state = wait;
 160:	84 e0       	ldi	r24, 0x04	; 4
 162:	90 e0       	ldi	r25, 0x00	; 0
 164:	90 93 02 01 	sts	0x0102, r25	; 0x800102 <state+0x1>
 168:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <state>
			}
			break;
 16c:	b2 c0       	rjmp	.+356    	; 0x2d2 <Tick+0x224>
		
		case inc:
			if(tempA == 0x1)
 16e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 172:	81 30       	cpi	r24, 0x01	; 1
 174:	39 f4       	brne	.+14     	; 0x184 <Tick+0xd6>
			{
				state = inc;
 176:	82 e0       	ldi	r24, 0x02	; 2
 178:	90 e0       	ldi	r25, 0x00	; 0
 17a:	90 93 02 01 	sts	0x0102, r25	; 0x800102 <state+0x1>
 17e:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <state>
			}
			else if(tempA == 0x0)
			{
				state = wait;
			}
			break;
 182:	a9 c0       	rjmp	.+338    	; 0x2d6 <Tick+0x228>
		case inc:
			if(tempA == 0x1)
			{
				state = inc;
			}
			else if(tempA == 0x2)
 184:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 188:	82 30       	cpi	r24, 0x02	; 2
 18a:	39 f4       	brne	.+14     	; 0x19a <Tick+0xec>
			{
				state = dec;
 18c:	83 e0       	ldi	r24, 0x03	; 3
 18e:	90 e0       	ldi	r25, 0x00	; 0
 190:	90 93 02 01 	sts	0x0102, r25	; 0x800102 <state+0x1>
 194:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <state>
			}
			else if(tempA == 0x0)
			{
				state = wait;
			}
			break;
 198:	9e c0       	rjmp	.+316    	; 0x2d6 <Tick+0x228>
			}
			else if(tempA == 0x2)
			{
				state = dec;
			}
			else if(tempA == 0x3)
 19a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 19e:	83 30       	cpi	r24, 0x03	; 3
 1a0:	39 f4       	brne	.+14     	; 0x1b0 <Tick+0x102>
			{
				state = zero;
 1a2:	85 e0       	ldi	r24, 0x05	; 5
 1a4:	90 e0       	ldi	r25, 0x00	; 0
 1a6:	90 93 02 01 	sts	0x0102, r25	; 0x800102 <state+0x1>
 1aa:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <state>
			}
			else if(tempA == 0x0)
			{
				state = wait;
			}
			break;
 1ae:	93 c0       	rjmp	.+294    	; 0x2d6 <Tick+0x228>
			}
			else if(tempA == 0x3)
			{
				state = zero;
			}
			else if(tempA == 0x0)
 1b0:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 1b4:	88 23       	and	r24, r24
 1b6:	09 f0       	breq	.+2      	; 0x1ba <Tick+0x10c>
 1b8:	8e c0       	rjmp	.+284    	; 0x2d6 <Tick+0x228>
			{
				state = wait;
 1ba:	84 e0       	ldi	r24, 0x04	; 4
 1bc:	90 e0       	ldi	r25, 0x00	; 0
 1be:	90 93 02 01 	sts	0x0102, r25	; 0x800102 <state+0x1>
 1c2:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <state>
			}
			break;
 1c6:	87 c0       	rjmp	.+270    	; 0x2d6 <Tick+0x228>
		
		case dec:
			if(tempA == 0x1)
 1c8:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 1cc:	81 30       	cpi	r24, 0x01	; 1
 1ce:	39 f4       	brne	.+14     	; 0x1de <Tick+0x130>
			{
				state = inc;
 1d0:	82 e0       	ldi	r24, 0x02	; 2
 1d2:	90 e0       	ldi	r25, 0x00	; 0
 1d4:	90 93 02 01 	sts	0x0102, r25	; 0x800102 <state+0x1>
 1d8:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <state>
			}
			else if(tempA == 0x0)
			{
				state = wait;
			}
			break;
 1dc:	7e c0       	rjmp	.+252    	; 0x2da <Tick+0x22c>
		case dec:
			if(tempA == 0x1)
			{
				state = inc;
			}
			else if(tempA == 0x2)
 1de:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 1e2:	82 30       	cpi	r24, 0x02	; 2
 1e4:	39 f4       	brne	.+14     	; 0x1f4 <Tick+0x146>
			{
				state = dec;
 1e6:	83 e0       	ldi	r24, 0x03	; 3
 1e8:	90 e0       	ldi	r25, 0x00	; 0
 1ea:	90 93 02 01 	sts	0x0102, r25	; 0x800102 <state+0x1>
 1ee:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <state>
			}
			else if(tempA == 0x0)
			{
				state = wait;
			}
			break;
 1f2:	73 c0       	rjmp	.+230    	; 0x2da <Tick+0x22c>
			}
			else if(tempA == 0x2)
			{
				state = dec;
			}
			else if(tempA == 0x3)
 1f4:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 1f8:	83 30       	cpi	r24, 0x03	; 3
 1fa:	39 f4       	brne	.+14     	; 0x20a <Tick+0x15c>
			{
				state = zero;
 1fc:	85 e0       	ldi	r24, 0x05	; 5
 1fe:	90 e0       	ldi	r25, 0x00	; 0
 200:	90 93 02 01 	sts	0x0102, r25	; 0x800102 <state+0x1>
 204:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <state>
			}
			else if(tempA == 0x0)
			{
				state = wait;
			}
			break;
 208:	68 c0       	rjmp	.+208    	; 0x2da <Tick+0x22c>
			}
			else if(tempA == 0x3)
			{
				state = zero;
			}
			else if(tempA == 0x0)
 20a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 20e:	88 23       	and	r24, r24
 210:	09 f0       	breq	.+2      	; 0x214 <Tick+0x166>
 212:	63 c0       	rjmp	.+198    	; 0x2da <Tick+0x22c>
			{
				state = wait;
 214:	84 e0       	ldi	r24, 0x04	; 4
 216:	90 e0       	ldi	r25, 0x00	; 0
 218:	90 93 02 01 	sts	0x0102, r25	; 0x800102 <state+0x1>
 21c:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <state>
			}
			break;
 220:	5c c0       	rjmp	.+184    	; 0x2da <Tick+0x22c>
			
		case wait:
			if(tempA == 0x1)
 222:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 226:	81 30       	cpi	r24, 0x01	; 1
 228:	39 f4       	brne	.+14     	; 0x238 <Tick+0x18a>
			{
				state = inc;
 22a:	82 e0       	ldi	r24, 0x02	; 2
 22c:	90 e0       	ldi	r25, 0x00	; 0
 22e:	90 93 02 01 	sts	0x0102, r25	; 0x800102 <state+0x1>
 232:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <state>
			}
			else if(tempA == 0x0)
			{
				state = wait;
			}
			break;
 236:	53 c0       	rjmp	.+166    	; 0x2de <Tick+0x230>
		case wait:
			if(tempA == 0x1)
			{
				state = inc;
			}
			else if(tempA == 0x2)
 238:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 23c:	82 30       	cpi	r24, 0x02	; 2
 23e:	39 f4       	brne	.+14     	; 0x24e <Tick+0x1a0>
			{
				state = dec;
 240:	83 e0       	ldi	r24, 0x03	; 3
 242:	90 e0       	ldi	r25, 0x00	; 0
 244:	90 93 02 01 	sts	0x0102, r25	; 0x800102 <state+0x1>
 248:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <state>
			}
			else if(tempA == 0x0)
			{
				state = wait;
			}
			break;
 24c:	48 c0       	rjmp	.+144    	; 0x2de <Tick+0x230>
			}
			else if(tempA == 0x2)
			{
				state = dec;
			}
			else if(tempA == 0x3)
 24e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 252:	83 30       	cpi	r24, 0x03	; 3
 254:	39 f4       	brne	.+14     	; 0x264 <Tick+0x1b6>
			{
				state = zero;
 256:	85 e0       	ldi	r24, 0x05	; 5
 258:	90 e0       	ldi	r25, 0x00	; 0
 25a:	90 93 02 01 	sts	0x0102, r25	; 0x800102 <state+0x1>
 25e:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <state>
			}
			else if(tempA == 0x0)
			{
				state = wait;
			}
			break;
 262:	3d c0       	rjmp	.+122    	; 0x2de <Tick+0x230>
			}
			else if(tempA == 0x3)
			{
				state = zero;
			}
			else if(tempA == 0x0)
 264:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 268:	88 23       	and	r24, r24
 26a:	c9 f5       	brne	.+114    	; 0x2de <Tick+0x230>
			{
				state = wait;
 26c:	84 e0       	ldi	r24, 0x04	; 4
 26e:	90 e0       	ldi	r25, 0x00	; 0
 270:	90 93 02 01 	sts	0x0102, r25	; 0x800102 <state+0x1>
 274:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <state>
			}
			break;
 278:	32 c0       	rjmp	.+100    	; 0x2de <Tick+0x230>
			
		
		case zero:
			if(tempA == 0x1)
 27a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 27e:	81 30       	cpi	r24, 0x01	; 1
 280:	39 f4       	brne	.+14     	; 0x290 <Tick+0x1e2>
			{
				state = inc;
 282:	82 e0       	ldi	r24, 0x02	; 2
 284:	90 e0       	ldi	r25, 0x00	; 0
 286:	90 93 02 01 	sts	0x0102, r25	; 0x800102 <state+0x1>
 28a:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <state>
			}
			else if(tempA == 0x0)
			{
				state = wait;
			}
			break;
 28e:	29 c0       	rjmp	.+82     	; 0x2e2 <Tick+0x234>
		case zero:
			if(tempA == 0x1)
			{
				state = inc;
			}
			else if(tempA == 0x2)
 290:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 294:	82 30       	cpi	r24, 0x02	; 2
 296:	39 f4       	brne	.+14     	; 0x2a6 <Tick+0x1f8>
			{
				state = dec;
 298:	83 e0       	ldi	r24, 0x03	; 3
 29a:	90 e0       	ldi	r25, 0x00	; 0
 29c:	90 93 02 01 	sts	0x0102, r25	; 0x800102 <state+0x1>
 2a0:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <state>
			}
			else if(tempA == 0x0)
			{
				state = wait;
			}
			break;
 2a4:	1e c0       	rjmp	.+60     	; 0x2e2 <Tick+0x234>
			}
			else if(tempA == 0x2)
			{
				state = dec;
			}
			else if(tempA == 0x3)
 2a6:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 2aa:	83 30       	cpi	r24, 0x03	; 3
 2ac:	39 f4       	brne	.+14     	; 0x2bc <Tick+0x20e>
			{
				state = zero;
 2ae:	85 e0       	ldi	r24, 0x05	; 5
 2b0:	90 e0       	ldi	r25, 0x00	; 0
 2b2:	90 93 02 01 	sts	0x0102, r25	; 0x800102 <state+0x1>
 2b6:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <state>
			}
			else if(tempA == 0x0)
			{
				state = wait;
			}
			break;
 2ba:	13 c0       	rjmp	.+38     	; 0x2e2 <Tick+0x234>
			}
			else if(tempA == 0x3)
			{
				state = zero;
			}
			else if(tempA == 0x0)
 2bc:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 2c0:	88 23       	and	r24, r24
 2c2:	79 f4       	brne	.+30     	; 0x2e2 <Tick+0x234>
			{
				state = wait;
 2c4:	84 e0       	ldi	r24, 0x04	; 4
 2c6:	90 e0       	ldi	r25, 0x00	; 0
 2c8:	90 93 02 01 	sts	0x0102, r25	; 0x800102 <state+0x1>
 2cc:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <state>
			}
			break;
 2d0:	08 c0       	rjmp	.+16     	; 0x2e2 <Tick+0x234>
			}
			else if(tempA == 0x0)
			{
				state = wait;
			}
			break;
 2d2:	00 00       	nop
 2d4:	07 c0       	rjmp	.+14     	; 0x2e4 <Tick+0x236>
			}
			else if(tempA == 0x0)
			{
				state = wait;
			}
			break;
 2d6:	00 00       	nop
 2d8:	05 c0       	rjmp	.+10     	; 0x2e4 <Tick+0x236>
			}
			else if(tempA == 0x0)
			{
				state = wait;
			}
			break;
 2da:	00 00       	nop
 2dc:	03 c0       	rjmp	.+6      	; 0x2e4 <Tick+0x236>
			}
			else if(tempA == 0x0)
			{
				state = wait;
			}
			break;
 2de:	00 00       	nop
 2e0:	01 c0       	rjmp	.+2      	; 0x2e4 <Tick+0x236>
			}
			else if(tempA == 0x0)
			{
				state = wait;
			}
			break;
 2e2:	00 00       	nop
		
		default:
			break;
	}
	
	switch(state)
 2e4:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <state>
 2e8:	90 91 02 01 	lds	r25, 0x0102	; 0x800102 <state+0x1>
 2ec:	82 30       	cpi	r24, 0x02	; 2
 2ee:	91 05       	cpc	r25, r1
 2f0:	e1 f0       	breq	.+56     	; 0x32a <Tick+0x27c>
 2f2:	83 30       	cpi	r24, 0x03	; 3
 2f4:	91 05       	cpc	r25, r1
 2f6:	30 f4       	brcc	.+12     	; 0x304 <Tick+0x256>
 2f8:	00 97       	sbiw	r24, 0x00	; 0
 2fa:	09 f4       	brne	.+2      	; 0x2fe <Tick+0x250>
 2fc:	3d c0       	rjmp	.+122    	; 0x378 <Tick+0x2ca>
 2fe:	01 97       	sbiw	r24, 0x01	; 1
 300:	51 f0       	breq	.+20     	; 0x316 <Tick+0x268>
			tempC = 0;
			PORTC = 0;
			break;
		 
		 default: 
			break;
 302:	41 c0       	rjmp	.+130    	; 0x386 <Tick+0x2d8>
		
		default:
			break;
	}
	
	switch(state)
 304:	84 30       	cpi	r24, 0x04	; 4
 306:	91 05       	cpc	r25, r1
 308:	c9 f1       	breq	.+114    	; 0x37c <Tick+0x2ce>
 30a:	84 30       	cpi	r24, 0x04	; 4
 30c:	91 05       	cpc	r25, r1
 30e:	e8 f0       	brcs	.+58     	; 0x34a <Tick+0x29c>
 310:	05 97       	sbiw	r24, 0x05	; 5
 312:	59 f1       	breq	.+86     	; 0x36a <Tick+0x2bc>
			tempC = 0;
			PORTC = 0;
			break;
		 
		 default: 
			break;
 314:	38 c0       	rjmp	.+112    	; 0x386 <Tick+0x2d8>
	{
		case Start:
			break;
			
		case init:
			tempC = 7;
 316:	87 e0       	ldi	r24, 0x07	; 7
 318:	80 93 03 01 	sts	0x0103, r24	; 0x800103 <tempC>
			PORTC = tempC;
 31c:	88 e2       	ldi	r24, 0x28	; 40
 31e:	90 e0       	ldi	r25, 0x00	; 0
 320:	20 91 03 01 	lds	r18, 0x0103	; 0x800103 <tempC>
 324:	fc 01       	movw	r30, r24
 326:	20 83       	st	Z, r18
			break;
 328:	2e c0       	rjmp	.+92     	; 0x386 <Tick+0x2d8>
			
		case inc:
			if(tempC < 9)
 32a:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <tempC>
 32e:	89 30       	cpi	r24, 0x09	; 9
 330:	38 f5       	brcc	.+78     	; 0x380 <Tick+0x2d2>
			{
				tempC += 1;
 332:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <tempC>
 336:	8f 5f       	subi	r24, 0xFF	; 255
 338:	80 93 03 01 	sts	0x0103, r24	; 0x800103 <tempC>
				PORTC = tempC;
 33c:	88 e2       	ldi	r24, 0x28	; 40
 33e:	90 e0       	ldi	r25, 0x00	; 0
 340:	20 91 03 01 	lds	r18, 0x0103	; 0x800103 <tempC>
 344:	fc 01       	movw	r30, r24
 346:	20 83       	st	Z, r18
			}
			break;
 348:	1b c0       	rjmp	.+54     	; 0x380 <Tick+0x2d2>
		
		case dec:
			if(tempC > 0)
 34a:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <tempC>
 34e:	88 23       	and	r24, r24
 350:	c9 f0       	breq	.+50     	; 0x384 <Tick+0x2d6>
			{
				tempC -= 1;
 352:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <tempC>
 356:	81 50       	subi	r24, 0x01	; 1
 358:	80 93 03 01 	sts	0x0103, r24	; 0x800103 <tempC>
				PORTC = tempC;
 35c:	88 e2       	ldi	r24, 0x28	; 40
 35e:	90 e0       	ldi	r25, 0x00	; 0
 360:	20 91 03 01 	lds	r18, 0x0103	; 0x800103 <tempC>
 364:	fc 01       	movw	r30, r24
 366:	20 83       	st	Z, r18
			}
			break;
 368:	0d c0       	rjmp	.+26     	; 0x384 <Tick+0x2d6>
		
		case wait:
			break;
		
		case zero:
			tempC = 0;
 36a:	10 92 03 01 	sts	0x0103, r1	; 0x800103 <tempC>
			PORTC = 0;
 36e:	88 e2       	ldi	r24, 0x28	; 40
 370:	90 e0       	ldi	r25, 0x00	; 0
 372:	fc 01       	movw	r30, r24
 374:	10 82       	st	Z, r1
			break;
 376:	07 c0       	rjmp	.+14     	; 0x386 <Tick+0x2d8>
	}
	
	switch(state)
	{
		case Start:
			break;
 378:	00 00       	nop
 37a:	05 c0       	rjmp	.+10     	; 0x386 <Tick+0x2d8>
				PORTC = tempC;
			}
			break;
		
		case wait:
			break;
 37c:	00 00       	nop
 37e:	03 c0       	rjmp	.+6      	; 0x386 <Tick+0x2d8>
			if(tempC < 9)
			{
				tempC += 1;
				PORTC = tempC;
			}
			break;
 380:	00 00       	nop
 382:	01 c0       	rjmp	.+2      	; 0x386 <Tick+0x2d8>
			if(tempC > 0)
			{
				tempC -= 1;
				PORTC = tempC;
			}
			break;
 384:	00 00       	nop
			break;
		 
		 default: 
			break;
	}
}
 386:	00 00       	nop
 388:	df 91       	pop	r29
 38a:	cf 91       	pop	r28
 38c:	08 95       	ret

0000038e <main>:

int main(void)
{
 38e:	cf 93       	push	r28
 390:	df 93       	push	r29
 392:	cd b7       	in	r28, 0x3d	; 61
 394:	de b7       	in	r29, 0x3e	; 62
	DDRA = 0x0; PORTA = 0x0;
 396:	81 e2       	ldi	r24, 0x21	; 33
 398:	90 e0       	ldi	r25, 0x00	; 0
 39a:	fc 01       	movw	r30, r24
 39c:	10 82       	st	Z, r1
 39e:	82 e2       	ldi	r24, 0x22	; 34
 3a0:	90 e0       	ldi	r25, 0x00	; 0
 3a2:	fc 01       	movw	r30, r24
 3a4:	10 82       	st	Z, r1
	DDRC = 0xF; PORTC = 0x0;
 3a6:	87 e2       	ldi	r24, 0x27	; 39
 3a8:	90 e0       	ldi	r25, 0x00	; 0
 3aa:	2f e0       	ldi	r18, 0x0F	; 15
 3ac:	fc 01       	movw	r30, r24
 3ae:	20 83       	st	Z, r18
 3b0:	88 e2       	ldi	r24, 0x28	; 40
 3b2:	90 e0       	ldi	r25, 0x00	; 0
 3b4:	fc 01       	movw	r30, r24
 3b6:	10 82       	st	Z, r1
    /* Replace with your application code */
    while (1) 
    {
		Tick();
 3b8:	7a de       	rcall	.-780    	; 0xae <Tick>
    }
 3ba:	fe cf       	rjmp	.-4      	; 0x3b8 <main+0x2a>

000003bc <_exit>:
 3bc:	f8 94       	cli

000003be <__stop_program>:
 3be:	ff cf       	rjmp	.-2      	; 0x3be <__stop_program>
