
byu014_lnguy089_lab4_part2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000002  00800100  000002b8  0000034c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000002b8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000004  00800102  00800102  0000034e  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000034e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000380  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000028  00000000  00000000  000003c0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000008ab  00000000  00000000  000003e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000007c6  00000000  00000000  00000c93  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000385  00000000  00000000  00001459  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000054  00000000  00000000  000017e0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000426  00000000  00000000  00001834  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000076  00000000  00000000  00001c5a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000018  00000000  00000000  00001cd0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e4       	ldi	r29, 0x40	; 64
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e8 eb       	ldi	r30, 0xB8	; 184
  a0:	f2 e0       	ldi	r31, 0x02	; 2
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a2 30       	cpi	r26, 0x02	; 2
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	a2 e0       	ldi	r26, 0x02	; 2
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a6 30       	cpi	r26, 0x06	; 6
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	e1 d0       	rcall	.+450    	; 0x286 <main>
  c4:	f7 c0       	rjmp	.+494    	; 0x2b4 <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <Tick>:
char unsigned tempA;
char unsigned tempC;
unsigned char flag = 1;

void Tick()
{
  c8:	cf 93       	push	r28
  ca:	df 93       	push	r29
  cc:	cd b7       	in	r28, 0x3d	; 61
  ce:	de b7       	in	r29, 0x3e	; 62
	tempA = PINA;
  d0:	80 e2       	ldi	r24, 0x20	; 32
  d2:	90 e0       	ldi	r25, 0x00	; 0
  d4:	fc 01       	movw	r30, r24
  d6:	80 81       	ld	r24, Z
  d8:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <__data_end>
	tempC = PORTC;
  dc:	88 e2       	ldi	r24, 0x28	; 40
  de:	90 e0       	ldi	r25, 0x00	; 0
  e0:	fc 01       	movw	r30, r24
  e2:	80 81       	ld	r24, Z
  e4:	80 93 05 01 	sts	0x0105, r24	; 0x800105 <tempC>
	switch(state)
  e8:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <state>
  ec:	90 91 04 01 	lds	r25, 0x0104	; 0x800104 <state+0x1>
  f0:	82 30       	cpi	r24, 0x02	; 2
  f2:	91 05       	cpc	r25, r1
  f4:	01 f1       	breq	.+64     	; 0x136 <Tick+0x6e>
  f6:	83 30       	cpi	r24, 0x03	; 3
  f8:	91 05       	cpc	r25, r1
  fa:	28 f4       	brcc	.+10     	; 0x106 <Tick+0x3e>
  fc:	00 97       	sbiw	r24, 0x00	; 0
  fe:	69 f0       	breq	.+26     	; 0x11a <Tick+0x52>
 100:	01 97       	sbiw	r24, 0x01	; 1
 102:	91 f0       	breq	.+36     	; 0x128 <Tick+0x60>
		case zero:
			state = wait;
			break;
		
		default:
			break;
 104:	65 c0       	rjmp	.+202    	; 0x1d0 <Tick+0x108>

void Tick()
{
	tempA = PINA;
	tempC = PORTC;
	switch(state)
 106:	84 30       	cpi	r24, 0x04	; 4
 108:	91 05       	cpc	r25, r1
 10a:	19 f1       	breq	.+70     	; 0x152 <Tick+0x8a>
 10c:	84 30       	cpi	r24, 0x04	; 4
 10e:	91 05       	cpc	r25, r1
 110:	c8 f0       	brcs	.+50     	; 0x144 <Tick+0x7c>
 112:	05 97       	sbiw	r24, 0x05	; 5
 114:	09 f4       	brne	.+2      	; 0x118 <Tick+0x50>
 116:	52 c0       	rjmp	.+164    	; 0x1bc <Tick+0xf4>
		case zero:
			state = wait;
			break;
		
		default:
			break;
 118:	5b c0       	rjmp	.+182    	; 0x1d0 <Tick+0x108>
	tempA = PINA;
	tempC = PORTC;
	switch(state)
	{
		case Start:
			state = init;
 11a:	81 e0       	ldi	r24, 0x01	; 1
 11c:	90 e0       	ldi	r25, 0x00	; 0
 11e:	90 93 04 01 	sts	0x0104, r25	; 0x800104 <state+0x1>
 122:	80 93 03 01 	sts	0x0103, r24	; 0x800103 <state>
			break;
 126:	54 c0       	rjmp	.+168    	; 0x1d0 <Tick+0x108>
			
		case init:
			state = wait;
 128:	84 e0       	ldi	r24, 0x04	; 4
 12a:	90 e0       	ldi	r25, 0x00	; 0
 12c:	90 93 04 01 	sts	0x0104, r25	; 0x800104 <state+0x1>
 130:	80 93 03 01 	sts	0x0103, r24	; 0x800103 <state>
			break;
 134:	4d c0       	rjmp	.+154    	; 0x1d0 <Tick+0x108>
		
		case inc:
			state = wait;
 136:	84 e0       	ldi	r24, 0x04	; 4
 138:	90 e0       	ldi	r25, 0x00	; 0
 13a:	90 93 04 01 	sts	0x0104, r25	; 0x800104 <state+0x1>
 13e:	80 93 03 01 	sts	0x0103, r24	; 0x800103 <state>
			break;
 142:	46 c0       	rjmp	.+140    	; 0x1d0 <Tick+0x108>
		
		case dec:
			state = wait;
 144:	84 e0       	ldi	r24, 0x04	; 4
 146:	90 e0       	ldi	r25, 0x00	; 0
 148:	90 93 04 01 	sts	0x0104, r25	; 0x800104 <state+0x1>
 14c:	80 93 03 01 	sts	0x0103, r24	; 0x800103 <state>
			break;
 150:	3f c0       	rjmp	.+126    	; 0x1d0 <Tick+0x108>
			
		case wait:
			if (tempA == 0x3)
 152:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <__data_end>
 156:	83 30       	cpi	r24, 0x03	; 3
 158:	31 f4       	brne	.+12     	; 0x166 <Tick+0x9e>
			{
				state = zero;
 15a:	85 e0       	ldi	r24, 0x05	; 5
 15c:	90 e0       	ldi	r25, 0x00	; 0
 15e:	90 93 04 01 	sts	0x0104, r25	; 0x800104 <state+0x1>
 162:	80 93 03 01 	sts	0x0103, r24	; 0x800103 <state>
			}
			if(tempA == 0x00)
 166:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <__data_end>
 16a:	88 23       	and	r24, r24
 16c:	11 f4       	brne	.+4      	; 0x172 <Tick+0xaa>
			{
				flag = 0;
 16e:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__data_start>
			}
			if(flag == 1)
 172:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 176:	81 30       	cpi	r24, 0x01	; 1
 178:	41 f1       	breq	.+80     	; 0x1ca <Tick+0x102>
			{
				break;
			}
			if(tempA == 0x1)
 17a:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <__data_end>
 17e:	81 30       	cpi	r24, 0x01	; 1
 180:	39 f4       	brne	.+14     	; 0x190 <Tick+0xc8>
			{
				state = inc;
 182:	82 e0       	ldi	r24, 0x02	; 2
 184:	90 e0       	ldi	r25, 0x00	; 0
 186:	90 93 04 01 	sts	0x0104, r25	; 0x800104 <state+0x1>
 18a:	80 93 03 01 	sts	0x0103, r24	; 0x800103 <state>
			}
			else if(tempA == 0x0)
			{
				state = wait;
			}
			break;
 18e:	1f c0       	rjmp	.+62     	; 0x1ce <Tick+0x106>
			}
			if(tempA == 0x1)
			{
				state = inc;
			}
			else if(tempA == 0x2)
 190:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <__data_end>
 194:	82 30       	cpi	r24, 0x02	; 2
 196:	39 f4       	brne	.+14     	; 0x1a6 <Tick+0xde>
			{
				state = dec;
 198:	83 e0       	ldi	r24, 0x03	; 3
 19a:	90 e0       	ldi	r25, 0x00	; 0
 19c:	90 93 04 01 	sts	0x0104, r25	; 0x800104 <state+0x1>
 1a0:	80 93 03 01 	sts	0x0103, r24	; 0x800103 <state>
			}
			else if(tempA == 0x0)
			{
				state = wait;
			}
			break;
 1a4:	14 c0       	rjmp	.+40     	; 0x1ce <Tick+0x106>
			}
			else if(tempA == 0x2)
			{
				state = dec;
			}
			else if(tempA == 0x0)
 1a6:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <__data_end>
 1aa:	88 23       	and	r24, r24
 1ac:	81 f4       	brne	.+32     	; 0x1ce <Tick+0x106>
			{
				state = wait;
 1ae:	84 e0       	ldi	r24, 0x04	; 4
 1b0:	90 e0       	ldi	r25, 0x00	; 0
 1b2:	90 93 04 01 	sts	0x0104, r25	; 0x800104 <state+0x1>
 1b6:	80 93 03 01 	sts	0x0103, r24	; 0x800103 <state>
			}
			break;
 1ba:	09 c0       	rjmp	.+18     	; 0x1ce <Tick+0x106>
			
		
		case zero:
			state = wait;
 1bc:	84 e0       	ldi	r24, 0x04	; 4
 1be:	90 e0       	ldi	r25, 0x00	; 0
 1c0:	90 93 04 01 	sts	0x0104, r25	; 0x800104 <state+0x1>
 1c4:	80 93 03 01 	sts	0x0103, r24	; 0x800103 <state>
			break;
 1c8:	03 c0       	rjmp	.+6      	; 0x1d0 <Tick+0x108>
			{
				flag = 0;
			}
			if(flag == 1)
			{
				break;
 1ca:	00 00       	nop
 1cc:	01 c0       	rjmp	.+2      	; 0x1d0 <Tick+0x108>
			}
			else if(tempA == 0x0)
			{
				state = wait;
			}
			break;
 1ce:	00 00       	nop
		
		default:
			break;
	}
	
	switch(state)
 1d0:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <state>
 1d4:	90 91 04 01 	lds	r25, 0x0104	; 0x800104 <state+0x1>
 1d8:	82 30       	cpi	r24, 0x02	; 2
 1da:	91 05       	cpc	r25, r1
 1dc:	e9 f0       	breq	.+58     	; 0x218 <Tick+0x150>
 1de:	83 30       	cpi	r24, 0x03	; 3
 1e0:	91 05       	cpc	r25, r1
 1e2:	30 f4       	brcc	.+12     	; 0x1f0 <Tick+0x128>
 1e4:	00 97       	sbiw	r24, 0x00	; 0
 1e6:	09 f4       	brne	.+2      	; 0x1ea <Tick+0x122>
 1e8:	47 c0       	rjmp	.+142    	; 0x278 <Tick+0x1b0>
 1ea:	01 97       	sbiw	r24, 0x01	; 1
 1ec:	59 f0       	breq	.+22     	; 0x204 <Tick+0x13c>
			tempC = 0;
			PORTC = 0;
			break;
		 
		 default: 
			break;
 1ee:	47 c0       	rjmp	.+142    	; 0x27e <Tick+0x1b6>
		
		default:
			break;
	}
	
	switch(state)
 1f0:	84 30       	cpi	r24, 0x04	; 4
 1f2:	91 05       	cpc	r25, r1
 1f4:	09 f4       	brne	.+2      	; 0x1f8 <Tick+0x130>
 1f6:	42 c0       	rjmp	.+132    	; 0x27c <Tick+0x1b4>
 1f8:	84 30       	cpi	r24, 0x04	; 4
 1fa:	91 05       	cpc	r25, r1
 1fc:	00 f1       	brcs	.+64     	; 0x23e <Tick+0x176>
 1fe:	05 97       	sbiw	r24, 0x05	; 5
 200:	89 f1       	breq	.+98     	; 0x264 <Tick+0x19c>
			tempC = 0;
			PORTC = 0;
			break;
		 
		 default: 
			break;
 202:	3d c0       	rjmp	.+122    	; 0x27e <Tick+0x1b6>
	{
		case Start:
			break;
			
		case init:
			tempC = 7;
 204:	87 e0       	ldi	r24, 0x07	; 7
 206:	80 93 05 01 	sts	0x0105, r24	; 0x800105 <tempC>
			PORTC = tempC;
 20a:	88 e2       	ldi	r24, 0x28	; 40
 20c:	90 e0       	ldi	r25, 0x00	; 0
 20e:	20 91 05 01 	lds	r18, 0x0105	; 0x800105 <tempC>
 212:	fc 01       	movw	r30, r24
 214:	20 83       	st	Z, r18
			break;
 216:	33 c0       	rjmp	.+102    	; 0x27e <Tick+0x1b6>
			
		case inc:
			if(tempC < 9)
 218:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <tempC>
 21c:	89 30       	cpi	r24, 0x09	; 9
 21e:	58 f4       	brcc	.+22     	; 0x236 <Tick+0x16e>
			{
				tempC += 1;
 220:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <tempC>
 224:	8f 5f       	subi	r24, 0xFF	; 255
 226:	80 93 05 01 	sts	0x0105, r24	; 0x800105 <tempC>
				PORTC = tempC;
 22a:	88 e2       	ldi	r24, 0x28	; 40
 22c:	90 e0       	ldi	r25, 0x00	; 0
 22e:	20 91 05 01 	lds	r18, 0x0105	; 0x800105 <tempC>
 232:	fc 01       	movw	r30, r24
 234:	20 83       	st	Z, r18
			}
			flag = 1;
 236:	81 e0       	ldi	r24, 0x01	; 1
 238:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
			break;
 23c:	20 c0       	rjmp	.+64     	; 0x27e <Tick+0x1b6>
		
		case dec:
			if(tempC > 0)
 23e:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <tempC>
 242:	88 23       	and	r24, r24
 244:	59 f0       	breq	.+22     	; 0x25c <Tick+0x194>
			{
				tempC -= 1;
 246:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <tempC>
 24a:	81 50       	subi	r24, 0x01	; 1
 24c:	80 93 05 01 	sts	0x0105, r24	; 0x800105 <tempC>
				PORTC = tempC;
 250:	88 e2       	ldi	r24, 0x28	; 40
 252:	90 e0       	ldi	r25, 0x00	; 0
 254:	20 91 05 01 	lds	r18, 0x0105	; 0x800105 <tempC>
 258:	fc 01       	movw	r30, r24
 25a:	20 83       	st	Z, r18
			}
			flag = 1;
 25c:	81 e0       	ldi	r24, 0x01	; 1
 25e:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
			break;
 262:	0d c0       	rjmp	.+26     	; 0x27e <Tick+0x1b6>
		
		case wait:
			break;
		
		case zero:
			flag = 1;
 264:	81 e0       	ldi	r24, 0x01	; 1
 266:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
			tempC = 0;
 26a:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <tempC>
			PORTC = 0;
 26e:	88 e2       	ldi	r24, 0x28	; 40
 270:	90 e0       	ldi	r25, 0x00	; 0
 272:	fc 01       	movw	r30, r24
 274:	10 82       	st	Z, r1
			break;
 276:	03 c0       	rjmp	.+6      	; 0x27e <Tick+0x1b6>
	}
	
	switch(state)
	{
		case Start:
			break;
 278:	00 00       	nop
 27a:	01 c0       	rjmp	.+2      	; 0x27e <Tick+0x1b6>
			}
			flag = 1;
			break;
		
		case wait:
			break;
 27c:	00 00       	nop
			break;
		 
		 default: 
			break;
	}
}
 27e:	00 00       	nop
 280:	df 91       	pop	r29
 282:	cf 91       	pop	r28
 284:	08 95       	ret

00000286 <main>:

int main(void)
{
 286:	cf 93       	push	r28
 288:	df 93       	push	r29
 28a:	cd b7       	in	r28, 0x3d	; 61
 28c:	de b7       	in	r29, 0x3e	; 62
	DDRA = 0x0; PORTA = 0x0;
 28e:	81 e2       	ldi	r24, 0x21	; 33
 290:	90 e0       	ldi	r25, 0x00	; 0
 292:	fc 01       	movw	r30, r24
 294:	10 82       	st	Z, r1
 296:	82 e2       	ldi	r24, 0x22	; 34
 298:	90 e0       	ldi	r25, 0x00	; 0
 29a:	fc 01       	movw	r30, r24
 29c:	10 82       	st	Z, r1
	DDRC = 0xF; PORTC = 0x0;
 29e:	87 e2       	ldi	r24, 0x27	; 39
 2a0:	90 e0       	ldi	r25, 0x00	; 0
 2a2:	2f e0       	ldi	r18, 0x0F	; 15
 2a4:	fc 01       	movw	r30, r24
 2a6:	20 83       	st	Z, r18
 2a8:	88 e2       	ldi	r24, 0x28	; 40
 2aa:	90 e0       	ldi	r25, 0x00	; 0
 2ac:	fc 01       	movw	r30, r24
 2ae:	10 82       	st	Z, r1
    /* Replace with your application code */
    while (1) 
    {
		Tick();
 2b0:	0b df       	rcall	.-490    	; 0xc8 <Tick>
    }
 2b2:	fe cf       	rjmp	.-4      	; 0x2b0 <main+0x2a>

000002b4 <_exit>:
 2b4:	f8 94       	cli

000002b6 <__stop_program>:
 2b6:	ff cf       	rjmp	.-2      	; 0x2b6 <__stop_program>
