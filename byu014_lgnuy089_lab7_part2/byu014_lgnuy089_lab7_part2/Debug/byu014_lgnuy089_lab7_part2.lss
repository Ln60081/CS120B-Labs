
byu014_lgnuy089_lab7_part2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000a  00800100  00000710  000007a4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000710  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000b  0080010a  0080010a  000007ae  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000007ae  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000007e0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000088  00000000  00000000  00000820  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000abc  00000000  00000000  000008a8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000863  00000000  00000000  00001364  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000006a9  00000000  00000000  00001bc7  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000218  00000000  00000000  00002270  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000511  00000000  00000000  00002488  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000043e  00000000  00000000  00002999  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000078  00000000  00000000  00002dd7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	e5 c2       	rjmp	.+1482   	; 0x600 <__vector_13>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e4       	ldi	r29, 0x40	; 64
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e0 e1       	ldi	r30, 0x10	; 16
  a0:	f7 e0       	ldi	r31, 0x07	; 7
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	aa 30       	cpi	r26, 0x0A	; 10
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	aa e0       	ldi	r26, 0x0A	; 10
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a5 31       	cpi	r26, 0x15	; 21
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	ff d2       	rcall	.+1534   	; 0x6c2 <main>
  c4:	23 c3       	rjmp	.+1606   	; 0x70c <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <LCD_ClearScreen>:
}

void TimerOff()
{
	TimerFlag = 1;
}
  c8:	cf 93       	push	r28
  ca:	df 93       	push	r29
  cc:	cd b7       	in	r28, 0x3d	; 61
  ce:	de b7       	in	r29, 0x3e	; 62
  d0:	81 e0       	ldi	r24, 0x01	; 1
  d2:	04 d0       	rcall	.+8      	; 0xdc <LCD_WriteCommand>
  d4:	00 00       	nop
  d6:	df 91       	pop	r29
  d8:	cf 91       	pop	r28
  da:	08 95       	ret

000000dc <LCD_WriteCommand>:
  dc:	cf 93       	push	r28
  de:	df 93       	push	r29
  e0:	1f 92       	push	r1
  e2:	cd b7       	in	r28, 0x3d	; 61
  e4:	de b7       	in	r29, 0x3e	; 62
  e6:	89 83       	std	Y+1, r24	; 0x01
  e8:	8b e2       	ldi	r24, 0x2B	; 43
  ea:	90 e0       	ldi	r25, 0x00	; 0
  ec:	2b e2       	ldi	r18, 0x2B	; 43
  ee:	30 e0       	ldi	r19, 0x00	; 0
  f0:	f9 01       	movw	r30, r18
  f2:	20 81       	ld	r18, Z
  f4:	2f 7b       	andi	r18, 0xBF	; 191
  f6:	fc 01       	movw	r30, r24
  f8:	20 83       	st	Z, r18
  fa:	88 e2       	ldi	r24, 0x28	; 40
  fc:	90 e0       	ldi	r25, 0x00	; 0
  fe:	29 81       	ldd	r18, Y+1	; 0x01
 100:	fc 01       	movw	r30, r24
 102:	20 83       	st	Z, r18
 104:	8b e2       	ldi	r24, 0x2B	; 43
 106:	90 e0       	ldi	r25, 0x00	; 0
 108:	2b e2       	ldi	r18, 0x2B	; 43
 10a:	30 e0       	ldi	r19, 0x00	; 0
 10c:	f9 01       	movw	r30, r18
 10e:	20 81       	ld	r18, Z
 110:	20 68       	ori	r18, 0x80	; 128
 112:	fc 01       	movw	r30, r24
 114:	20 83       	st	Z, r18
 116:	00 00       	nop
 118:	8b e2       	ldi	r24, 0x2B	; 43
 11a:	90 e0       	ldi	r25, 0x00	; 0
 11c:	2b e2       	ldi	r18, 0x2B	; 43
 11e:	30 e0       	ldi	r19, 0x00	; 0
 120:	f9 01       	movw	r30, r18
 122:	20 81       	ld	r18, Z
 124:	2f 77       	andi	r18, 0x7F	; 127
 126:	fc 01       	movw	r30, r24
 128:	20 83       	st	Z, r18
 12a:	82 e0       	ldi	r24, 0x02	; 2
 12c:	90 e0       	ldi	r25, 0x00	; 0
 12e:	73 d0       	rcall	.+230    	; 0x216 <delay_ms>
 130:	00 00       	nop
 132:	0f 90       	pop	r0
 134:	df 91       	pop	r29
 136:	cf 91       	pop	r28
 138:	08 95       	ret

0000013a <LCD_WriteData>:
 13a:	cf 93       	push	r28
 13c:	df 93       	push	r29
 13e:	1f 92       	push	r1
 140:	cd b7       	in	r28, 0x3d	; 61
 142:	de b7       	in	r29, 0x3e	; 62
 144:	89 83       	std	Y+1, r24	; 0x01
 146:	8b e2       	ldi	r24, 0x2B	; 43
 148:	90 e0       	ldi	r25, 0x00	; 0
 14a:	2b e2       	ldi	r18, 0x2B	; 43
 14c:	30 e0       	ldi	r19, 0x00	; 0
 14e:	f9 01       	movw	r30, r18
 150:	20 81       	ld	r18, Z
 152:	20 64       	ori	r18, 0x40	; 64
 154:	fc 01       	movw	r30, r24
 156:	20 83       	st	Z, r18
 158:	88 e2       	ldi	r24, 0x28	; 40
 15a:	90 e0       	ldi	r25, 0x00	; 0
 15c:	29 81       	ldd	r18, Y+1	; 0x01
 15e:	fc 01       	movw	r30, r24
 160:	20 83       	st	Z, r18
 162:	8b e2       	ldi	r24, 0x2B	; 43
 164:	90 e0       	ldi	r25, 0x00	; 0
 166:	2b e2       	ldi	r18, 0x2B	; 43
 168:	30 e0       	ldi	r19, 0x00	; 0
 16a:	f9 01       	movw	r30, r18
 16c:	20 81       	ld	r18, Z
 16e:	20 68       	ori	r18, 0x80	; 128
 170:	fc 01       	movw	r30, r24
 172:	20 83       	st	Z, r18
 174:	00 00       	nop
 176:	8b e2       	ldi	r24, 0x2B	; 43
 178:	90 e0       	ldi	r25, 0x00	; 0
 17a:	2b e2       	ldi	r18, 0x2B	; 43
 17c:	30 e0       	ldi	r19, 0x00	; 0
 17e:	f9 01       	movw	r30, r18
 180:	20 81       	ld	r18, Z
 182:	2f 77       	andi	r18, 0x7F	; 127
 184:	fc 01       	movw	r30, r24
 186:	20 83       	st	Z, r18
 188:	81 e0       	ldi	r24, 0x01	; 1
 18a:	90 e0       	ldi	r25, 0x00	; 0
 18c:	44 d0       	rcall	.+136    	; 0x216 <delay_ms>
 18e:	00 00       	nop
 190:	0f 90       	pop	r0
 192:	df 91       	pop	r29
 194:	cf 91       	pop	r28
 196:	08 95       	ret

00000198 <LCD_DisplayString>:
 198:	cf 93       	push	r28
 19a:	df 93       	push	r29
 19c:	00 d0       	rcall	.+0      	; 0x19e <LCD_DisplayString+0x6>
 19e:	00 d0       	rcall	.+0      	; 0x1a0 <LCD_DisplayString+0x8>
 1a0:	cd b7       	in	r28, 0x3d	; 61
 1a2:	de b7       	in	r29, 0x3e	; 62
 1a4:	8a 83       	std	Y+2, r24	; 0x02
 1a6:	7c 83       	std	Y+4, r23	; 0x04
 1a8:	6b 83       	std	Y+3, r22	; 0x03
 1aa:	8e df       	rcall	.-228    	; 0xc8 <LCD_ClearScreen>
 1ac:	8a 81       	ldd	r24, Y+2	; 0x02
 1ae:	89 83       	std	Y+1, r24	; 0x01
 1b0:	0f c0       	rjmp	.+30     	; 0x1d0 <LCD_DisplayString+0x38>
 1b2:	89 81       	ldd	r24, Y+1	; 0x01
 1b4:	91 e0       	ldi	r25, 0x01	; 1
 1b6:	98 0f       	add	r25, r24
 1b8:	99 83       	std	Y+1, r25	; 0x01
 1ba:	18 d0       	rcall	.+48     	; 0x1ec <LCD_Cursor>
 1bc:	8b 81       	ldd	r24, Y+3	; 0x03
 1be:	9c 81       	ldd	r25, Y+4	; 0x04
 1c0:	9c 01       	movw	r18, r24
 1c2:	2f 5f       	subi	r18, 0xFF	; 255
 1c4:	3f 4f       	sbci	r19, 0xFF	; 255
 1c6:	3c 83       	std	Y+4, r19	; 0x04
 1c8:	2b 83       	std	Y+3, r18	; 0x03
 1ca:	fc 01       	movw	r30, r24
 1cc:	80 81       	ld	r24, Z
 1ce:	b5 df       	rcall	.-150    	; 0x13a <LCD_WriteData>
 1d0:	8b 81       	ldd	r24, Y+3	; 0x03
 1d2:	9c 81       	ldd	r25, Y+4	; 0x04
 1d4:	fc 01       	movw	r30, r24
 1d6:	80 81       	ld	r24, Z
 1d8:	88 23       	and	r24, r24
 1da:	59 f7       	brne	.-42     	; 0x1b2 <LCD_DisplayString+0x1a>
 1dc:	00 00       	nop
 1de:	0f 90       	pop	r0
 1e0:	0f 90       	pop	r0
 1e2:	0f 90       	pop	r0
 1e4:	0f 90       	pop	r0
 1e6:	df 91       	pop	r29
 1e8:	cf 91       	pop	r28
 1ea:	08 95       	ret

000001ec <LCD_Cursor>:
 1ec:	cf 93       	push	r28
 1ee:	df 93       	push	r29
 1f0:	1f 92       	push	r1
 1f2:	cd b7       	in	r28, 0x3d	; 61
 1f4:	de b7       	in	r29, 0x3e	; 62
 1f6:	89 83       	std	Y+1, r24	; 0x01
 1f8:	89 81       	ldd	r24, Y+1	; 0x01
 1fa:	81 31       	cpi	r24, 0x11	; 17
 1fc:	20 f4       	brcc	.+8      	; 0x206 <LCD_Cursor+0x1a>
 1fe:	89 81       	ldd	r24, Y+1	; 0x01
 200:	81 58       	subi	r24, 0x81	; 129
 202:	6c df       	rcall	.-296    	; 0xdc <LCD_WriteCommand>
 204:	03 c0       	rjmp	.+6      	; 0x20c <LCD_Cursor+0x20>
 206:	89 81       	ldd	r24, Y+1	; 0x01
 208:	81 55       	subi	r24, 0x51	; 81
 20a:	68 df       	rcall	.-304    	; 0xdc <LCD_WriteCommand>
 20c:	00 00       	nop
 20e:	0f 90       	pop	r0
 210:	df 91       	pop	r29
 212:	cf 91       	pop	r28
 214:	08 95       	ret

00000216 <delay_ms>:
 216:	cf 93       	push	r28
 218:	df 93       	push	r29
 21a:	00 d0       	rcall	.+0      	; 0x21c <delay_ms+0x6>
 21c:	00 d0       	rcall	.+0      	; 0x21e <delay_ms+0x8>
 21e:	00 d0       	rcall	.+0      	; 0x220 <delay_ms+0xa>
 220:	cd b7       	in	r28, 0x3d	; 61
 222:	de b7       	in	r29, 0x3e	; 62
 224:	9e 83       	std	Y+6, r25	; 0x06
 226:	8d 83       	std	Y+5, r24	; 0x05
 228:	1a 82       	std	Y+2, r1	; 0x02
 22a:	19 82       	std	Y+1, r1	; 0x01
 22c:	13 c0       	rjmp	.+38     	; 0x254 <delay_ms+0x3e>
 22e:	1c 82       	std	Y+4, r1	; 0x04
 230:	1b 82       	std	Y+3, r1	; 0x03
 232:	06 c0       	rjmp	.+12     	; 0x240 <delay_ms+0x2a>
 234:	00 00       	nop
 236:	8b 81       	ldd	r24, Y+3	; 0x03
 238:	9c 81       	ldd	r25, Y+4	; 0x04
 23a:	01 96       	adiw	r24, 0x01	; 1
 23c:	9c 83       	std	Y+4, r25	; 0x04
 23e:	8b 83       	std	Y+3, r24	; 0x03
 240:	8b 81       	ldd	r24, Y+3	; 0x03
 242:	9c 81       	ldd	r25, Y+4	; 0x04
 244:	87 30       	cpi	r24, 0x07	; 7
 246:	93 40       	sbci	r25, 0x03	; 3
 248:	ac f3       	brlt	.-22     	; 0x234 <delay_ms+0x1e>
 24a:	89 81       	ldd	r24, Y+1	; 0x01
 24c:	9a 81       	ldd	r25, Y+2	; 0x02
 24e:	01 96       	adiw	r24, 0x01	; 1
 250:	9a 83       	std	Y+2, r25	; 0x02
 252:	89 83       	std	Y+1, r24	; 0x01
 254:	29 81       	ldd	r18, Y+1	; 0x01
 256:	3a 81       	ldd	r19, Y+2	; 0x02
 258:	8d 81       	ldd	r24, Y+5	; 0x05
 25a:	9e 81       	ldd	r25, Y+6	; 0x06
 25c:	28 17       	cp	r18, r24
 25e:	39 07       	cpc	r19, r25
 260:	34 f3       	brlt	.-52     	; 0x22e <delay_ms+0x18>
 262:	00 00       	nop
 264:	26 96       	adiw	r28, 0x06	; 6
 266:	0f b6       	in	r0, 0x3f	; 63
 268:	f8 94       	cli
 26a:	de bf       	out	0x3e, r29	; 62
 26c:	0f be       	out	0x3f, r0	; 63
 26e:	cd bf       	out	0x3d, r28	; 61
 270:	df 91       	pop	r29
 272:	cf 91       	pop	r28
 274:	08 95       	ret

00000276 <Tick>:
 276:	cf 93       	push	r28
 278:	df 93       	push	r29
 27a:	cd b7       	in	r28, 0x3d	; 61
 27c:	de b7       	in	r29, 0x3e	; 62
 27e:	80 91 11 01 	lds	r24, 0x0111	; 0x800111 <state>
 282:	90 91 12 01 	lds	r25, 0x0112	; 0x800112 <state+0x1>
 286:	82 30       	cpi	r24, 0x02	; 2
 288:	91 05       	cpc	r25, r1
 28a:	29 f1       	breq	.+74     	; 0x2d6 <Tick+0x60>
 28c:	83 30       	cpi	r24, 0x03	; 3
 28e:	91 05       	cpc	r25, r1
 290:	28 f4       	brcc	.+10     	; 0x29c <Tick+0x26>
 292:	00 97       	sbiw	r24, 0x00	; 0
 294:	79 f0       	breq	.+30     	; 0x2b4 <Tick+0x3e>
 296:	01 97       	sbiw	r24, 0x01	; 1
 298:	a1 f0       	breq	.+40     	; 0x2c2 <Tick+0x4c>
 29a:	c1 c0       	rjmp	.+386    	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
 29c:	84 30       	cpi	r24, 0x04	; 4
 29e:	91 05       	cpc	r25, r1
 2a0:	09 f4       	brne	.+2      	; 0x2a4 <Tick+0x2e>
 2a2:	83 c0       	rjmp	.+262    	; 0x3aa <Tick+0x134>
 2a4:	84 30       	cpi	r24, 0x04	; 4
 2a6:	91 05       	cpc	r25, r1
 2a8:	08 f4       	brcc	.+2      	; 0x2ac <Tick+0x36>
 2aa:	3e c0       	rjmp	.+124    	; 0x328 <Tick+0xb2>
 2ac:	05 97       	sbiw	r24, 0x05	; 5
 2ae:	09 f4       	brne	.+2      	; 0x2b2 <Tick+0x3c>
 2b0:	64 c0       	rjmp	.+200    	; 0x37a <Tick+0x104>
 2b2:	b5 c0       	rjmp	.+362    	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
 2b4:	81 e0       	ldi	r24, 0x01	; 1
 2b6:	90 e0       	ldi	r25, 0x00	; 0
 2b8:	90 93 12 01 	sts	0x0112, r25	; 0x800112 <state+0x1>
 2bc:	80 93 11 01 	sts	0x0111, r24	; 0x800111 <state>
 2c0:	ae c0       	rjmp	.+348    	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
 2c2:	82 e0       	ldi	r24, 0x02	; 2
 2c4:	90 e0       	ldi	r25, 0x00	; 0
 2c6:	90 93 12 01 	sts	0x0112, r25	; 0x800112 <state+0x1>
 2ca:	80 93 11 01 	sts	0x0111, r24	; 0x800111 <state>
 2ce:	85 e0       	ldi	r24, 0x05	; 5
 2d0:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <score>
 2d4:	a4 c0       	rjmp	.+328    	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
 2d6:	80 e2       	ldi	r24, 0x20	; 32
 2d8:	90 e0       	ldi	r25, 0x00	; 0
 2da:	fc 01       	movw	r30, r24
 2dc:	80 81       	ld	r24, Z
 2de:	88 2f       	mov	r24, r24
 2e0:	90 e0       	ldi	r25, 0x00	; 0
 2e2:	81 70       	andi	r24, 0x01	; 1
 2e4:	99 27       	eor	r25, r25
 2e6:	89 2b       	or	r24, r25
 2e8:	69 f4       	brne	.+26     	; 0x304 <Tick+0x8e>
 2ea:	82 e0       	ldi	r24, 0x02	; 2
 2ec:	90 e0       	ldi	r25, 0x00	; 0
 2ee:	90 93 14 01 	sts	0x0114, r25	; 0x800114 <prevState+0x1>
 2f2:	80 93 13 01 	sts	0x0113, r24	; 0x800113 <prevState>
 2f6:	85 e0       	ldi	r24, 0x05	; 5
 2f8:	90 e0       	ldi	r25, 0x00	; 0
 2fa:	90 93 12 01 	sts	0x0112, r25	; 0x800112 <state+0x1>
 2fe:	80 93 11 01 	sts	0x0111, r24	; 0x800111 <state>
 302:	8d c0       	rjmp	.+282    	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
 304:	80 91 0f 01 	lds	r24, 0x010F	; 0x80010f <tempC>
 308:	84 30       	cpi	r24, 0x04	; 4
 30a:	39 f4       	brne	.+14     	; 0x31a <Tick+0xa4>
 30c:	83 e0       	ldi	r24, 0x03	; 3
 30e:	90 e0       	ldi	r25, 0x00	; 0
 310:	90 93 12 01 	sts	0x0112, r25	; 0x800112 <state+0x1>
 314:	80 93 11 01 	sts	0x0111, r24	; 0x800111 <state>
 318:	82 c0       	rjmp	.+260    	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
 31a:	82 e0       	ldi	r24, 0x02	; 2
 31c:	90 e0       	ldi	r25, 0x00	; 0
 31e:	90 93 12 01 	sts	0x0112, r25	; 0x800112 <state+0x1>
 322:	80 93 11 01 	sts	0x0111, r24	; 0x800111 <state>
 326:	7b c0       	rjmp	.+246    	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
 328:	80 e2       	ldi	r24, 0x20	; 32
 32a:	90 e0       	ldi	r25, 0x00	; 0
 32c:	fc 01       	movw	r30, r24
 32e:	80 81       	ld	r24, Z
 330:	88 2f       	mov	r24, r24
 332:	90 e0       	ldi	r25, 0x00	; 0
 334:	81 70       	andi	r24, 0x01	; 1
 336:	99 27       	eor	r25, r25
 338:	89 2b       	or	r24, r25
 33a:	69 f4       	brne	.+26     	; 0x356 <Tick+0xe0>
 33c:	83 e0       	ldi	r24, 0x03	; 3
 33e:	90 e0       	ldi	r25, 0x00	; 0
 340:	90 93 14 01 	sts	0x0114, r25	; 0x800114 <prevState+0x1>
 344:	80 93 13 01 	sts	0x0113, r24	; 0x800113 <prevState>
 348:	85 e0       	ldi	r24, 0x05	; 5
 34a:	90 e0       	ldi	r25, 0x00	; 0
 34c:	90 93 12 01 	sts	0x0112, r25	; 0x800112 <state+0x1>
 350:	80 93 11 01 	sts	0x0111, r24	; 0x800111 <state>
 354:	64 c0       	rjmp	.+200    	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
 356:	80 91 0f 01 	lds	r24, 0x010F	; 0x80010f <tempC>
 35a:	81 30       	cpi	r24, 0x01	; 1
 35c:	39 f4       	brne	.+14     	; 0x36c <Tick+0xf6>
 35e:	82 e0       	ldi	r24, 0x02	; 2
 360:	90 e0       	ldi	r25, 0x00	; 0
 362:	90 93 12 01 	sts	0x0112, r25	; 0x800112 <state+0x1>
 366:	80 93 11 01 	sts	0x0111, r24	; 0x800111 <state>
 36a:	59 c0       	rjmp	.+178    	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
 36c:	83 e0       	ldi	r24, 0x03	; 3
 36e:	90 e0       	ldi	r25, 0x00	; 0
 370:	90 93 12 01 	sts	0x0112, r25	; 0x800112 <state+0x1>
 374:	80 93 11 01 	sts	0x0111, r24	; 0x800111 <state>
 378:	52 c0       	rjmp	.+164    	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
 37a:	80 e2       	ldi	r24, 0x20	; 32
 37c:	90 e0       	ldi	r25, 0x00	; 0
 37e:	fc 01       	movw	r30, r24
 380:	80 81       	ld	r24, Z
 382:	88 2f       	mov	r24, r24
 384:	90 e0       	ldi	r25, 0x00	; 0
 386:	81 70       	andi	r24, 0x01	; 1
 388:	99 27       	eor	r25, r25
 38a:	89 2b       	or	r24, r25
 38c:	39 f4       	brne	.+14     	; 0x39c <Tick+0x126>
 38e:	85 e0       	ldi	r24, 0x05	; 5
 390:	90 e0       	ldi	r25, 0x00	; 0
 392:	90 93 12 01 	sts	0x0112, r25	; 0x800112 <state+0x1>
 396:	80 93 11 01 	sts	0x0111, r24	; 0x800111 <state>
 39a:	41 c0       	rjmp	.+130    	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
 39c:	84 e0       	ldi	r24, 0x04	; 4
 39e:	90 e0       	ldi	r25, 0x00	; 0
 3a0:	90 93 12 01 	sts	0x0112, r25	; 0x800112 <state+0x1>
 3a4:	80 93 11 01 	sts	0x0111, r24	; 0x800111 <state>
 3a8:	3a c0       	rjmp	.+116    	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
 3aa:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <reset>
 3ae:	8a 30       	cpi	r24, 0x0A	; 10
 3b0:	31 f4       	brne	.+12     	; 0x3be <Tick+0x148>
 3b2:	81 e0       	ldi	r24, 0x01	; 1
 3b4:	90 e0       	ldi	r25, 0x00	; 0
 3b6:	90 93 12 01 	sts	0x0112, r25	; 0x800112 <state+0x1>
 3ba:	80 93 11 01 	sts	0x0111, r24	; 0x800111 <state>
 3be:	80 e2       	ldi	r24, 0x20	; 32
 3c0:	90 e0       	ldi	r25, 0x00	; 0
 3c2:	fc 01       	movw	r30, r24
 3c4:	80 81       	ld	r24, Z
 3c6:	88 2f       	mov	r24, r24
 3c8:	90 e0       	ldi	r25, 0x00	; 0
 3ca:	81 70       	andi	r24, 0x01	; 1
 3cc:	99 27       	eor	r25, r25
 3ce:	89 2b       	or	r24, r25
 3d0:	f9 f4       	brne	.+62     	; 0x410 <__LOCK_REGION_LENGTH__+0x10>
 3d2:	80 91 0f 01 	lds	r24, 0x010F	; 0x80010f <tempC>
 3d6:	84 30       	cpi	r24, 0x04	; 4
 3d8:	39 f4       	brne	.+14     	; 0x3e8 <Tick+0x172>
 3da:	83 e0       	ldi	r24, 0x03	; 3
 3dc:	90 e0       	ldi	r25, 0x00	; 0
 3de:	90 93 12 01 	sts	0x0112, r25	; 0x800112 <state+0x1>
 3e2:	80 93 11 01 	sts	0x0111, r24	; 0x800111 <state>
 3e6:	1a c0       	rjmp	.+52     	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
 3e8:	80 91 0f 01 	lds	r24, 0x010F	; 0x80010f <tempC>
 3ec:	81 30       	cpi	r24, 0x01	; 1
 3ee:	39 f4       	brne	.+14     	; 0x3fe <Tick+0x188>
 3f0:	82 e0       	ldi	r24, 0x02	; 2
 3f2:	90 e0       	ldi	r25, 0x00	; 0
 3f4:	90 93 12 01 	sts	0x0112, r25	; 0x800112 <state+0x1>
 3f8:	80 93 11 01 	sts	0x0111, r24	; 0x800111 <state>
 3fc:	0f c0       	rjmp	.+30     	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
 3fe:	80 91 13 01 	lds	r24, 0x0113	; 0x800113 <prevState>
 402:	90 91 14 01 	lds	r25, 0x0114	; 0x800114 <prevState+0x1>
 406:	90 93 12 01 	sts	0x0112, r25	; 0x800112 <state+0x1>
 40a:	80 93 11 01 	sts	0x0111, r24	; 0x800111 <state>
 40e:	06 c0       	rjmp	.+12     	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
 410:	84 e0       	ldi	r24, 0x04	; 4
 412:	90 e0       	ldi	r25, 0x00	; 0
 414:	90 93 12 01 	sts	0x0112, r25	; 0x800112 <state+0x1>
 418:	80 93 11 01 	sts	0x0111, r24	; 0x800111 <state>
 41c:	00 00       	nop
 41e:	80 91 11 01 	lds	r24, 0x0111	; 0x800111 <state>
 422:	90 91 12 01 	lds	r25, 0x0112	; 0x800112 <state+0x1>
 426:	82 30       	cpi	r24, 0x02	; 2
 428:	91 05       	cpc	r25, r1
 42a:	e9 f0       	breq	.+58     	; 0x466 <__LOCK_REGION_LENGTH__+0x66>
 42c:	83 30       	cpi	r24, 0x03	; 3
 42e:	91 05       	cpc	r25, r1
 430:	30 f4       	brcc	.+12     	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
 432:	00 97       	sbiw	r24, 0x00	; 0
 434:	09 f4       	brne	.+2      	; 0x438 <__LOCK_REGION_LENGTH__+0x38>
 436:	6d c0       	rjmp	.+218    	; 0x512 <__LOCK_REGION_LENGTH__+0x112>
 438:	01 97       	sbiw	r24, 0x01	; 1
 43a:	59 f0       	breq	.+22     	; 0x452 <__LOCK_REGION_LENGTH__+0x52>
 43c:	6d c0       	rjmp	.+218    	; 0x518 <__LOCK_REGION_LENGTH__+0x118>
 43e:	84 30       	cpi	r24, 0x04	; 4
 440:	91 05       	cpc	r25, r1
 442:	49 f1       	breq	.+82     	; 0x496 <__LOCK_REGION_LENGTH__+0x96>
 444:	84 30       	cpi	r24, 0x04	; 4
 446:	91 05       	cpc	r25, r1
 448:	d0 f0       	brcs	.+52     	; 0x47e <__LOCK_REGION_LENGTH__+0x7e>
 44a:	05 97       	sbiw	r24, 0x05	; 5
 44c:	09 f4       	brne	.+2      	; 0x450 <__LOCK_REGION_LENGTH__+0x50>
 44e:	63 c0       	rjmp	.+198    	; 0x516 <__LOCK_REGION_LENGTH__+0x116>
 450:	63 c0       	rjmp	.+198    	; 0x518 <__LOCK_REGION_LENGTH__+0x118>
 452:	81 e0       	ldi	r24, 0x01	; 1
 454:	80 93 0f 01 	sts	0x010F, r24	; 0x80010f <tempC>
 458:	88 e2       	ldi	r24, 0x28	; 40
 45a:	90 e0       	ldi	r25, 0x00	; 0
 45c:	20 91 0f 01 	lds	r18, 0x010F	; 0x80010f <tempC>
 460:	fc 01       	movw	r30, r24
 462:	20 83       	st	Z, r18
 464:	59 c0       	rjmp	.+178    	; 0x518 <__LOCK_REGION_LENGTH__+0x118>
 466:	80 91 0f 01 	lds	r24, 0x010F	; 0x80010f <tempC>
 46a:	88 0f       	add	r24, r24
 46c:	80 93 0f 01 	sts	0x010F, r24	; 0x80010f <tempC>
 470:	88 e2       	ldi	r24, 0x28	; 40
 472:	90 e0       	ldi	r25, 0x00	; 0
 474:	20 91 0f 01 	lds	r18, 0x010F	; 0x80010f <tempC>
 478:	fc 01       	movw	r30, r24
 47a:	20 83       	st	Z, r18
 47c:	4d c0       	rjmp	.+154    	; 0x518 <__LOCK_REGION_LENGTH__+0x118>
 47e:	80 91 0f 01 	lds	r24, 0x010F	; 0x80010f <tempC>
 482:	86 95       	lsr	r24
 484:	80 93 0f 01 	sts	0x010F, r24	; 0x80010f <tempC>
 488:	88 e2       	ldi	r24, 0x28	; 40
 48a:	90 e0       	ldi	r25, 0x00	; 0
 48c:	20 91 0f 01 	lds	r18, 0x010F	; 0x80010f <tempC>
 490:	fc 01       	movw	r30, r24
 492:	20 83       	st	Z, r18
 494:	41 c0       	rjmp	.+130    	; 0x518 <__LOCK_REGION_LENGTH__+0x118>
 496:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <reset>
 49a:	8a 30       	cpi	r24, 0x0A	; 10
 49c:	50 f4       	brcc	.+20     	; 0x4b2 <__LOCK_REGION_LENGTH__+0xb2>
 49e:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <score>
 4a2:	89 30       	cpi	r24, 0x09	; 9
 4a4:	31 f4       	brne	.+12     	; 0x4b2 <__LOCK_REGION_LENGTH__+0xb2>
 4a6:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <reset>
 4aa:	8f 5f       	subi	r24, 0xFF	; 255
 4ac:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <reset>
 4b0:	33 c0       	rjmp	.+102    	; 0x518 <__LOCK_REGION_LENGTH__+0x118>
 4b2:	80 91 0f 01 	lds	r24, 0x010F	; 0x80010f <tempC>
 4b6:	82 30       	cpi	r24, 0x02	; 2
 4b8:	d1 f4       	brne	.+52     	; 0x4ee <__LOCK_REGION_LENGTH__+0xee>
 4ba:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <score>
 4be:	88 30       	cpi	r24, 0x08	; 8
 4c0:	41 f4       	brne	.+16     	; 0x4d2 <__LOCK_REGION_LENGTH__+0xd2>
 4c2:	89 e0       	ldi	r24, 0x09	; 9
 4c4:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <score>
 4c8:	65 e0       	ldi	r22, 0x05	; 5
 4ca:	71 e0       	ldi	r23, 0x01	; 1
 4cc:	81 e0       	ldi	r24, 0x01	; 1
 4ce:	64 de       	rcall	.-824    	; 0x198 <LCD_DisplayString>
 4d0:	23 c0       	rjmp	.+70     	; 0x518 <__LOCK_REGION_LENGTH__+0x118>
 4d2:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <score>
 4d6:	8f 5f       	subi	r24, 0xFF	; 255
 4d8:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <score>
 4dc:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <score>
 4e0:	88 2f       	mov	r24, r24
 4e2:	90 e0       	ldi	r25, 0x00	; 0
 4e4:	c0 96       	adiw	r24, 0x30	; 48
 4e6:	bc 01       	movw	r22, r24
 4e8:	81 e0       	ldi	r24, 0x01	; 1
 4ea:	56 de       	rcall	.-852    	; 0x198 <LCD_DisplayString>
 4ec:	15 c0       	rjmp	.+42     	; 0x518 <__LOCK_REGION_LENGTH__+0x118>
 4ee:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <score>
 4f2:	88 23       	and	r24, r24
 4f4:	29 f0       	breq	.+10     	; 0x500 <__LOCK_REGION_LENGTH__+0x100>
 4f6:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <score>
 4fa:	81 50       	subi	r24, 0x01	; 1
 4fc:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <score>
 500:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <score>
 504:	88 2f       	mov	r24, r24
 506:	90 e0       	ldi	r25, 0x00	; 0
 508:	c0 96       	adiw	r24, 0x30	; 48
 50a:	bc 01       	movw	r22, r24
 50c:	81 e0       	ldi	r24, 0x01	; 1
 50e:	44 de       	rcall	.-888    	; 0x198 <LCD_DisplayString>
 510:	03 c0       	rjmp	.+6      	; 0x518 <__LOCK_REGION_LENGTH__+0x118>
 512:	00 00       	nop
 514:	01 c0       	rjmp	.+2      	; 0x518 <__LOCK_REGION_LENGTH__+0x118>
 516:	00 00       	nop
 518:	00 00       	nop
 51a:	df 91       	pop	r29
 51c:	cf 91       	pop	r28
 51e:	08 95       	ret

00000520 <TimerOn>:
 520:	cf 93       	push	r28
 522:	df 93       	push	r29
 524:	cd b7       	in	r28, 0x3d	; 61
 526:	de b7       	in	r29, 0x3e	; 62
 528:	81 e8       	ldi	r24, 0x81	; 129
 52a:	90 e0       	ldi	r25, 0x00	; 0
 52c:	2b e0       	ldi	r18, 0x0B	; 11
 52e:	fc 01       	movw	r30, r24
 530:	20 83       	st	Z, r18
 532:	88 e8       	ldi	r24, 0x88	; 136
 534:	90 e0       	ldi	r25, 0x00	; 0
 536:	2d e7       	ldi	r18, 0x7D	; 125
 538:	30 e0       	ldi	r19, 0x00	; 0
 53a:	fc 01       	movw	r30, r24
 53c:	31 83       	std	Z+1, r19	; 0x01
 53e:	20 83       	st	Z, r18
 540:	8f e6       	ldi	r24, 0x6F	; 111
 542:	90 e0       	ldi	r25, 0x00	; 0
 544:	22 e0       	ldi	r18, 0x02	; 2
 546:	fc 01       	movw	r30, r24
 548:	20 83       	st	Z, r18
 54a:	84 e8       	ldi	r24, 0x84	; 132
 54c:	90 e0       	ldi	r25, 0x00	; 0
 54e:	fc 01       	movw	r30, r24
 550:	11 82       	std	Z+1, r1	; 0x01
 552:	10 82       	st	Z, r1
 554:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 558:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 55c:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__data_start+0x2>
 560:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__data_start+0x3>
 564:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <_avr_timer_cntcurr>
 568:	90 93 0c 01 	sts	0x010C, r25	; 0x80010c <_avr_timer_cntcurr+0x1>
 56c:	a0 93 0d 01 	sts	0x010D, r26	; 0x80010d <_avr_timer_cntcurr+0x2>
 570:	b0 93 0e 01 	sts	0x010E, r27	; 0x80010e <_avr_timer_cntcurr+0x3>
 574:	8f e5       	ldi	r24, 0x5F	; 95
 576:	90 e0       	ldi	r25, 0x00	; 0
 578:	2f e5       	ldi	r18, 0x5F	; 95
 57a:	30 e0       	ldi	r19, 0x00	; 0
 57c:	f9 01       	movw	r30, r18
 57e:	20 81       	ld	r18, Z
 580:	20 68       	ori	r18, 0x80	; 128
 582:	fc 01       	movw	r30, r24
 584:	20 83       	st	Z, r18
 586:	00 00       	nop
 588:	df 91       	pop	r29
 58a:	cf 91       	pop	r28
 58c:	08 95       	ret

0000058e <TimerSet>:



void TimerSet(unsigned long M)
{
 58e:	cf 93       	push	r28
 590:	df 93       	push	r29
 592:	00 d0       	rcall	.+0      	; 0x594 <TimerSet+0x6>
 594:	00 d0       	rcall	.+0      	; 0x596 <TimerSet+0x8>
 596:	cd b7       	in	r28, 0x3d	; 61
 598:	de b7       	in	r29, 0x3e	; 62
 59a:	69 83       	std	Y+1, r22	; 0x01
 59c:	7a 83       	std	Y+2, r23	; 0x02
 59e:	8b 83       	std	Y+3, r24	; 0x03
 5a0:	9c 83       	std	Y+4, r25	; 0x04
	_avr_timer_M = M;
 5a2:	89 81       	ldd	r24, Y+1	; 0x01
 5a4:	9a 81       	ldd	r25, Y+2	; 0x02
 5a6:	ab 81       	ldd	r26, Y+3	; 0x03
 5a8:	bc 81       	ldd	r27, Y+4	; 0x04
 5aa:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
 5ae:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
 5b2:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <__data_start+0x2>
 5b6:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <__data_start+0x3>
	_avr_timer_cntcurr = _avr_timer_M;
 5ba:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 5be:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 5c2:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__data_start+0x2>
 5c6:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__data_start+0x3>
 5ca:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <_avr_timer_cntcurr>
 5ce:	90 93 0c 01 	sts	0x010C, r25	; 0x80010c <_avr_timer_cntcurr+0x1>
 5d2:	a0 93 0d 01 	sts	0x010D, r26	; 0x80010d <_avr_timer_cntcurr+0x2>
 5d6:	b0 93 0e 01 	sts	0x010E, r27	; 0x80010e <_avr_timer_cntcurr+0x3>
}
 5da:	00 00       	nop
 5dc:	0f 90       	pop	r0
 5de:	0f 90       	pop	r0
 5e0:	0f 90       	pop	r0
 5e2:	0f 90       	pop	r0
 5e4:	df 91       	pop	r29
 5e6:	cf 91       	pop	r28
 5e8:	08 95       	ret

000005ea <TimerISR>:

void TimerISR()
{
 5ea:	cf 93       	push	r28
 5ec:	df 93       	push	r29
 5ee:	cd b7       	in	r28, 0x3d	; 61
 5f0:	de b7       	in	r29, 0x3e	; 62
	TimerFlag = 1;
 5f2:	81 e0       	ldi	r24, 0x01	; 1
 5f4:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <__data_end>
}
 5f8:	00 00       	nop
 5fa:	df 91       	pop	r29
 5fc:	cf 91       	pop	r28
 5fe:	08 95       	ret

00000600 <__vector_13>:

ISR(TIMER1_COMPA_vect) {
 600:	1f 92       	push	r1
 602:	0f 92       	push	r0
 604:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
 608:	0f 92       	push	r0
 60a:	11 24       	eor	r1, r1
 60c:	00 90 5b 00 	lds	r0, 0x005B	; 0x80005b <__TEXT_REGION_LENGTH__+0x7e005b>
 610:	0f 92       	push	r0
 612:	2f 93       	push	r18
 614:	3f 93       	push	r19
 616:	4f 93       	push	r20
 618:	5f 93       	push	r21
 61a:	6f 93       	push	r22
 61c:	7f 93       	push	r23
 61e:	8f 93       	push	r24
 620:	9f 93       	push	r25
 622:	af 93       	push	r26
 624:	bf 93       	push	r27
 626:	ef 93       	push	r30
 628:	ff 93       	push	r31
 62a:	cf 93       	push	r28
 62c:	df 93       	push	r29
 62e:	cd b7       	in	r28, 0x3d	; 61
 630:	de b7       	in	r29, 0x3e	; 62
	// CPU automatically calls when TCNT1 == OCR1 (every 1 ms per TimerOn settings)
	_avr_timer_cntcurr--; // Count down to 0 rather than up to TOP
 632:	80 91 0b 01 	lds	r24, 0x010B	; 0x80010b <_avr_timer_cntcurr>
 636:	90 91 0c 01 	lds	r25, 0x010C	; 0x80010c <_avr_timer_cntcurr+0x1>
 63a:	a0 91 0d 01 	lds	r26, 0x010D	; 0x80010d <_avr_timer_cntcurr+0x2>
 63e:	b0 91 0e 01 	lds	r27, 0x010E	; 0x80010e <_avr_timer_cntcurr+0x3>
 642:	01 97       	sbiw	r24, 0x01	; 1
 644:	a1 09       	sbc	r26, r1
 646:	b1 09       	sbc	r27, r1
 648:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <_avr_timer_cntcurr>
 64c:	90 93 0c 01 	sts	0x010C, r25	; 0x80010c <_avr_timer_cntcurr+0x1>
 650:	a0 93 0d 01 	sts	0x010D, r26	; 0x80010d <_avr_timer_cntcurr+0x2>
 654:	b0 93 0e 01 	sts	0x010E, r27	; 0x80010e <_avr_timer_cntcurr+0x3>
	if (_avr_timer_cntcurr == 0) { // results in a more efficient compare
 658:	80 91 0b 01 	lds	r24, 0x010B	; 0x80010b <_avr_timer_cntcurr>
 65c:	90 91 0c 01 	lds	r25, 0x010C	; 0x80010c <_avr_timer_cntcurr+0x1>
 660:	a0 91 0d 01 	lds	r26, 0x010D	; 0x80010d <_avr_timer_cntcurr+0x2>
 664:	b0 91 0e 01 	lds	r27, 0x010E	; 0x80010e <_avr_timer_cntcurr+0x3>
 668:	89 2b       	or	r24, r25
 66a:	8a 2b       	or	r24, r26
 66c:	8b 2b       	or	r24, r27
 66e:	89 f4       	brne	.+34     	; 0x692 <__vector_13+0x92>
		TimerISR(); // Call the ISR that the user uses
 670:	bc df       	rcall	.-136    	; 0x5ea <TimerISR>
		_avr_timer_cntcurr = _avr_timer_M;
 672:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 676:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 67a:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__data_start+0x2>
 67e:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__data_start+0x3>
 682:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <_avr_timer_cntcurr>
 686:	90 93 0c 01 	sts	0x010C, r25	; 0x80010c <_avr_timer_cntcurr+0x1>
 68a:	a0 93 0d 01 	sts	0x010D, r26	; 0x80010d <_avr_timer_cntcurr+0x2>
 68e:	b0 93 0e 01 	sts	0x010E, r27	; 0x80010e <_avr_timer_cntcurr+0x3>
	}
}
 692:	00 00       	nop
 694:	df 91       	pop	r29
 696:	cf 91       	pop	r28
 698:	ff 91       	pop	r31
 69a:	ef 91       	pop	r30
 69c:	bf 91       	pop	r27
 69e:	af 91       	pop	r26
 6a0:	9f 91       	pop	r25
 6a2:	8f 91       	pop	r24
 6a4:	7f 91       	pop	r23
 6a6:	6f 91       	pop	r22
 6a8:	5f 91       	pop	r21
 6aa:	4f 91       	pop	r20
 6ac:	3f 91       	pop	r19
 6ae:	2f 91       	pop	r18
 6b0:	0f 90       	pop	r0
 6b2:	00 92 5b 00 	sts	0x005B, r0	; 0x80005b <__TEXT_REGION_LENGTH__+0x7e005b>
 6b6:	0f 90       	pop	r0
 6b8:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
 6bc:	0f 90       	pop	r0
 6be:	1f 90       	pop	r1
 6c0:	18 95       	reti

000006c2 <main>:


int main(void)
{
 6c2:	cf 93       	push	r28
 6c4:	df 93       	push	r29
 6c6:	cd b7       	in	r28, 0x3d	; 61
 6c8:	de b7       	in	r29, 0x3e	; 62
    /* Replace with your application code */
	DDRA = 0x00; PORTA = 0xFF;
 6ca:	81 e2       	ldi	r24, 0x21	; 33
 6cc:	90 e0       	ldi	r25, 0x00	; 0
 6ce:	fc 01       	movw	r30, r24
 6d0:	10 82       	st	Z, r1
 6d2:	82 e2       	ldi	r24, 0x22	; 34
 6d4:	90 e0       	ldi	r25, 0x00	; 0
 6d6:	2f ef       	ldi	r18, 0xFF	; 255
 6d8:	fc 01       	movw	r30, r24
 6da:	20 83       	st	Z, r18
	DDRC = 0xFF;
 6dc:	87 e2       	ldi	r24, 0x27	; 39
 6de:	90 e0       	ldi	r25, 0x00	; 0
 6e0:	2f ef       	ldi	r18, 0xFF	; 255
 6e2:	fc 01       	movw	r30, r24
 6e4:	20 83       	st	Z, r18
	PORTC = 0x00;
 6e6:	88 e2       	ldi	r24, 0x28	; 40
 6e8:	90 e0       	ldi	r25, 0x00	; 0
 6ea:	fc 01       	movw	r30, r24
 6ec:	10 82       	st	Z, r1
	TimerSet(300);
 6ee:	6c e2       	ldi	r22, 0x2C	; 44
 6f0:	71 e0       	ldi	r23, 0x01	; 1
 6f2:	80 e0       	ldi	r24, 0x00	; 0
 6f4:	90 e0       	ldi	r25, 0x00	; 0
 6f6:	4b df       	rcall	.-362    	; 0x58e <TimerSet>
	TimerOn();
 6f8:	13 df       	rcall	.-474    	; 0x520 <TimerOn>
	
    while (1) 
    {
		Tick();
 6fa:	bd dd       	rcall	.-1158   	; 0x276 <Tick>
 6fc:	00 00       	nop
		while(!TimerFlag);
 6fe:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <__data_end>
 702:	88 23       	and	r24, r24
 704:	e1 f3       	breq	.-8      	; 0x6fe <main+0x3c>
 706:	10 92 0a 01 	sts	0x010A, r1	; 0x80010a <__data_end>
		TimerFlag = 0;
 70a:	f7 cf       	rjmp	.-18     	; 0x6fa <main+0x38>

0000070c <_exit>:
    }
 70c:	f8 94       	cli

0000070e <__stop_program>:
 70e:	ff cf       	rjmp	.-2      	; 0x70e <__stop_program>
