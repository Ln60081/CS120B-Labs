
byu014_lgnuy089_lab7_part2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000a  00800100  00000788  0000081c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000788  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000c  0080010a  0080010a  00000826  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000826  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000858  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000088  00000000  00000000  00000898  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000ae0  00000000  00000000  00000920  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000863  00000000  00000000  00001400  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000071e  00000000  00000000  00001c63  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000218  00000000  00000000  00002384  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000523  00000000  00000000  0000259c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000043e  00000000  00000000  00002abf  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000078  00000000  00000000  00002efd  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	17 c3       	rjmp	.+1582   	; 0x664 <__vector_13>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e4       	ldi	r29, 0x40	; 64
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e8 e8       	ldi	r30, 0x88	; 136
  a0:	f7 e0       	ldi	r31, 0x07	; 7
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	aa 30       	cpi	r26, 0x0A	; 10
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	aa e0       	ldi	r26, 0x0A	; 10
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a6 31       	cpi	r26, 0x16	; 22
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	31 d3       	rcall	.+1634   	; 0x726 <main>
  c4:	5f c3       	rjmp	.+1726   	; 0x784 <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <LCD_ClearScreen>:
}

void TimerOff()
{
	TimerFlag = 1;
}
  c8:	cf 93       	push	r28
  ca:	df 93       	push	r29
  cc:	cd b7       	in	r28, 0x3d	; 61
  ce:	de b7       	in	r29, 0x3e	; 62
  d0:	81 e0       	ldi	r24, 0x01	; 1
  d2:	1a d0       	rcall	.+52     	; 0x108 <LCD_WriteCommand>
  d4:	00 00       	nop
  d6:	df 91       	pop	r29
  d8:	cf 91       	pop	r28
  da:	08 95       	ret

000000dc <LCD_init>:
  dc:	cf 93       	push	r28
  de:	df 93       	push	r29
  e0:	cd b7       	in	r28, 0x3d	; 61
  e2:	de b7       	in	r29, 0x3e	; 62
  e4:	84 e6       	ldi	r24, 0x64	; 100
  e6:	90 e0       	ldi	r25, 0x00	; 0
  e8:	ac d0       	rcall	.+344    	; 0x242 <delay_ms>
  ea:	88 e3       	ldi	r24, 0x38	; 56
  ec:	0d d0       	rcall	.+26     	; 0x108 <LCD_WriteCommand>
  ee:	86 e0       	ldi	r24, 0x06	; 6
  f0:	0b d0       	rcall	.+22     	; 0x108 <LCD_WriteCommand>
  f2:	8f e0       	ldi	r24, 0x0F	; 15
  f4:	09 d0       	rcall	.+18     	; 0x108 <LCD_WriteCommand>
  f6:	81 e0       	ldi	r24, 0x01	; 1
  f8:	07 d0       	rcall	.+14     	; 0x108 <LCD_WriteCommand>
  fa:	8a e0       	ldi	r24, 0x0A	; 10
  fc:	90 e0       	ldi	r25, 0x00	; 0
  fe:	a1 d0       	rcall	.+322    	; 0x242 <delay_ms>
 100:	00 00       	nop
 102:	df 91       	pop	r29
 104:	cf 91       	pop	r28
 106:	08 95       	ret

00000108 <LCD_WriteCommand>:
 108:	cf 93       	push	r28
 10a:	df 93       	push	r29
 10c:	1f 92       	push	r1
 10e:	cd b7       	in	r28, 0x3d	; 61
 110:	de b7       	in	r29, 0x3e	; 62
 112:	89 83       	std	Y+1, r24	; 0x01
 114:	8b e2       	ldi	r24, 0x2B	; 43
 116:	90 e0       	ldi	r25, 0x00	; 0
 118:	2b e2       	ldi	r18, 0x2B	; 43
 11a:	30 e0       	ldi	r19, 0x00	; 0
 11c:	f9 01       	movw	r30, r18
 11e:	20 81       	ld	r18, Z
 120:	2f 7b       	andi	r18, 0xBF	; 191
 122:	fc 01       	movw	r30, r24
 124:	20 83       	st	Z, r18
 126:	88 e2       	ldi	r24, 0x28	; 40
 128:	90 e0       	ldi	r25, 0x00	; 0
 12a:	29 81       	ldd	r18, Y+1	; 0x01
 12c:	fc 01       	movw	r30, r24
 12e:	20 83       	st	Z, r18
 130:	8b e2       	ldi	r24, 0x2B	; 43
 132:	90 e0       	ldi	r25, 0x00	; 0
 134:	2b e2       	ldi	r18, 0x2B	; 43
 136:	30 e0       	ldi	r19, 0x00	; 0
 138:	f9 01       	movw	r30, r18
 13a:	20 81       	ld	r18, Z
 13c:	20 68       	ori	r18, 0x80	; 128
 13e:	fc 01       	movw	r30, r24
 140:	20 83       	st	Z, r18
 142:	00 00       	nop
 144:	8b e2       	ldi	r24, 0x2B	; 43
 146:	90 e0       	ldi	r25, 0x00	; 0
 148:	2b e2       	ldi	r18, 0x2B	; 43
 14a:	30 e0       	ldi	r19, 0x00	; 0
 14c:	f9 01       	movw	r30, r18
 14e:	20 81       	ld	r18, Z
 150:	2f 77       	andi	r18, 0x7F	; 127
 152:	fc 01       	movw	r30, r24
 154:	20 83       	st	Z, r18
 156:	82 e0       	ldi	r24, 0x02	; 2
 158:	90 e0       	ldi	r25, 0x00	; 0
 15a:	73 d0       	rcall	.+230    	; 0x242 <delay_ms>
 15c:	00 00       	nop
 15e:	0f 90       	pop	r0
 160:	df 91       	pop	r29
 162:	cf 91       	pop	r28
 164:	08 95       	ret

00000166 <LCD_WriteData>:
 166:	cf 93       	push	r28
 168:	df 93       	push	r29
 16a:	1f 92       	push	r1
 16c:	cd b7       	in	r28, 0x3d	; 61
 16e:	de b7       	in	r29, 0x3e	; 62
 170:	89 83       	std	Y+1, r24	; 0x01
 172:	8b e2       	ldi	r24, 0x2B	; 43
 174:	90 e0       	ldi	r25, 0x00	; 0
 176:	2b e2       	ldi	r18, 0x2B	; 43
 178:	30 e0       	ldi	r19, 0x00	; 0
 17a:	f9 01       	movw	r30, r18
 17c:	20 81       	ld	r18, Z
 17e:	20 64       	ori	r18, 0x40	; 64
 180:	fc 01       	movw	r30, r24
 182:	20 83       	st	Z, r18
 184:	88 e2       	ldi	r24, 0x28	; 40
 186:	90 e0       	ldi	r25, 0x00	; 0
 188:	29 81       	ldd	r18, Y+1	; 0x01
 18a:	fc 01       	movw	r30, r24
 18c:	20 83       	st	Z, r18
 18e:	8b e2       	ldi	r24, 0x2B	; 43
 190:	90 e0       	ldi	r25, 0x00	; 0
 192:	2b e2       	ldi	r18, 0x2B	; 43
 194:	30 e0       	ldi	r19, 0x00	; 0
 196:	f9 01       	movw	r30, r18
 198:	20 81       	ld	r18, Z
 19a:	20 68       	ori	r18, 0x80	; 128
 19c:	fc 01       	movw	r30, r24
 19e:	20 83       	st	Z, r18
 1a0:	00 00       	nop
 1a2:	8b e2       	ldi	r24, 0x2B	; 43
 1a4:	90 e0       	ldi	r25, 0x00	; 0
 1a6:	2b e2       	ldi	r18, 0x2B	; 43
 1a8:	30 e0       	ldi	r19, 0x00	; 0
 1aa:	f9 01       	movw	r30, r18
 1ac:	20 81       	ld	r18, Z
 1ae:	2f 77       	andi	r18, 0x7F	; 127
 1b0:	fc 01       	movw	r30, r24
 1b2:	20 83       	st	Z, r18
 1b4:	81 e0       	ldi	r24, 0x01	; 1
 1b6:	90 e0       	ldi	r25, 0x00	; 0
 1b8:	44 d0       	rcall	.+136    	; 0x242 <delay_ms>
 1ba:	00 00       	nop
 1bc:	0f 90       	pop	r0
 1be:	df 91       	pop	r29
 1c0:	cf 91       	pop	r28
 1c2:	08 95       	ret

000001c4 <LCD_DisplayString>:
 1c4:	cf 93       	push	r28
 1c6:	df 93       	push	r29
 1c8:	00 d0       	rcall	.+0      	; 0x1ca <LCD_DisplayString+0x6>
 1ca:	00 d0       	rcall	.+0      	; 0x1cc <LCD_DisplayString+0x8>
 1cc:	cd b7       	in	r28, 0x3d	; 61
 1ce:	de b7       	in	r29, 0x3e	; 62
 1d0:	8a 83       	std	Y+2, r24	; 0x02
 1d2:	7c 83       	std	Y+4, r23	; 0x04
 1d4:	6b 83       	std	Y+3, r22	; 0x03
 1d6:	78 df       	rcall	.-272    	; 0xc8 <LCD_ClearScreen>
 1d8:	8a 81       	ldd	r24, Y+2	; 0x02
 1da:	89 83       	std	Y+1, r24	; 0x01
 1dc:	0f c0       	rjmp	.+30     	; 0x1fc <LCD_DisplayString+0x38>
 1de:	89 81       	ldd	r24, Y+1	; 0x01
 1e0:	91 e0       	ldi	r25, 0x01	; 1
 1e2:	98 0f       	add	r25, r24
 1e4:	99 83       	std	Y+1, r25	; 0x01
 1e6:	18 d0       	rcall	.+48     	; 0x218 <LCD_Cursor>
 1e8:	8b 81       	ldd	r24, Y+3	; 0x03
 1ea:	9c 81       	ldd	r25, Y+4	; 0x04
 1ec:	9c 01       	movw	r18, r24
 1ee:	2f 5f       	subi	r18, 0xFF	; 255
 1f0:	3f 4f       	sbci	r19, 0xFF	; 255
 1f2:	3c 83       	std	Y+4, r19	; 0x04
 1f4:	2b 83       	std	Y+3, r18	; 0x03
 1f6:	fc 01       	movw	r30, r24
 1f8:	80 81       	ld	r24, Z
 1fa:	b5 df       	rcall	.-150    	; 0x166 <LCD_WriteData>
 1fc:	8b 81       	ldd	r24, Y+3	; 0x03
 1fe:	9c 81       	ldd	r25, Y+4	; 0x04
 200:	fc 01       	movw	r30, r24
 202:	80 81       	ld	r24, Z
 204:	88 23       	and	r24, r24
 206:	59 f7       	brne	.-42     	; 0x1de <LCD_DisplayString+0x1a>
 208:	00 00       	nop
 20a:	0f 90       	pop	r0
 20c:	0f 90       	pop	r0
 20e:	0f 90       	pop	r0
 210:	0f 90       	pop	r0
 212:	df 91       	pop	r29
 214:	cf 91       	pop	r28
 216:	08 95       	ret

00000218 <LCD_Cursor>:
 218:	cf 93       	push	r28
 21a:	df 93       	push	r29
 21c:	1f 92       	push	r1
 21e:	cd b7       	in	r28, 0x3d	; 61
 220:	de b7       	in	r29, 0x3e	; 62
 222:	89 83       	std	Y+1, r24	; 0x01
 224:	89 81       	ldd	r24, Y+1	; 0x01
 226:	81 31       	cpi	r24, 0x11	; 17
 228:	20 f4       	brcc	.+8      	; 0x232 <LCD_Cursor+0x1a>
 22a:	89 81       	ldd	r24, Y+1	; 0x01
 22c:	81 58       	subi	r24, 0x81	; 129
 22e:	6c df       	rcall	.-296    	; 0x108 <LCD_WriteCommand>
 230:	03 c0       	rjmp	.+6      	; 0x238 <LCD_Cursor+0x20>
 232:	89 81       	ldd	r24, Y+1	; 0x01
 234:	81 55       	subi	r24, 0x51	; 81
 236:	68 df       	rcall	.-304    	; 0x108 <LCD_WriteCommand>
 238:	00 00       	nop
 23a:	0f 90       	pop	r0
 23c:	df 91       	pop	r29
 23e:	cf 91       	pop	r28
 240:	08 95       	ret

00000242 <delay_ms>:
 242:	cf 93       	push	r28
 244:	df 93       	push	r29
 246:	00 d0       	rcall	.+0      	; 0x248 <delay_ms+0x6>
 248:	00 d0       	rcall	.+0      	; 0x24a <delay_ms+0x8>
 24a:	00 d0       	rcall	.+0      	; 0x24c <delay_ms+0xa>
 24c:	cd b7       	in	r28, 0x3d	; 61
 24e:	de b7       	in	r29, 0x3e	; 62
 250:	9e 83       	std	Y+6, r25	; 0x06
 252:	8d 83       	std	Y+5, r24	; 0x05
 254:	1a 82       	std	Y+2, r1	; 0x02
 256:	19 82       	std	Y+1, r1	; 0x01
 258:	13 c0       	rjmp	.+38     	; 0x280 <delay_ms+0x3e>
 25a:	1c 82       	std	Y+4, r1	; 0x04
 25c:	1b 82       	std	Y+3, r1	; 0x03
 25e:	06 c0       	rjmp	.+12     	; 0x26c <delay_ms+0x2a>
 260:	00 00       	nop
 262:	8b 81       	ldd	r24, Y+3	; 0x03
 264:	9c 81       	ldd	r25, Y+4	; 0x04
 266:	01 96       	adiw	r24, 0x01	; 1
 268:	9c 83       	std	Y+4, r25	; 0x04
 26a:	8b 83       	std	Y+3, r24	; 0x03
 26c:	8b 81       	ldd	r24, Y+3	; 0x03
 26e:	9c 81       	ldd	r25, Y+4	; 0x04
 270:	87 30       	cpi	r24, 0x07	; 7
 272:	93 40       	sbci	r25, 0x03	; 3
 274:	ac f3       	brlt	.-22     	; 0x260 <delay_ms+0x1e>
 276:	89 81       	ldd	r24, Y+1	; 0x01
 278:	9a 81       	ldd	r25, Y+2	; 0x02
 27a:	01 96       	adiw	r24, 0x01	; 1
 27c:	9a 83       	std	Y+2, r25	; 0x02
 27e:	89 83       	std	Y+1, r24	; 0x01
 280:	29 81       	ldd	r18, Y+1	; 0x01
 282:	3a 81       	ldd	r19, Y+2	; 0x02
 284:	8d 81       	ldd	r24, Y+5	; 0x05
 286:	9e 81       	ldd	r25, Y+6	; 0x06
 288:	28 17       	cp	r18, r24
 28a:	39 07       	cpc	r19, r25
 28c:	34 f3       	brlt	.-52     	; 0x25a <delay_ms+0x18>
 28e:	00 00       	nop
 290:	26 96       	adiw	r28, 0x06	; 6
 292:	0f b6       	in	r0, 0x3f	; 63
 294:	f8 94       	cli
 296:	de bf       	out	0x3e, r29	; 62
 298:	0f be       	out	0x3f, r0	; 63
 29a:	cd bf       	out	0x3d, r28	; 61
 29c:	df 91       	pop	r29
 29e:	cf 91       	pop	r28
 2a0:	08 95       	ret

000002a2 <Tick>:
 2a2:	cf 93       	push	r28
 2a4:	df 93       	push	r29
 2a6:	cd b7       	in	r28, 0x3d	; 61
 2a8:	de b7       	in	r29, 0x3e	; 62
 2aa:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <state>
 2ae:	90 91 13 01 	lds	r25, 0x0113	; 0x800113 <state+0x1>
 2b2:	82 30       	cpi	r24, 0x02	; 2
 2b4:	91 05       	cpc	r25, r1
 2b6:	29 f1       	breq	.+74     	; 0x302 <Tick+0x60>
 2b8:	83 30       	cpi	r24, 0x03	; 3
 2ba:	91 05       	cpc	r25, r1
 2bc:	28 f4       	brcc	.+10     	; 0x2c8 <Tick+0x26>
 2be:	00 97       	sbiw	r24, 0x00	; 0
 2c0:	79 f0       	breq	.+30     	; 0x2e0 <Tick+0x3e>
 2c2:	01 97       	sbiw	r24, 0x01	; 1
 2c4:	a1 f0       	breq	.+40     	; 0x2ee <Tick+0x4c>
 2c6:	c1 c0       	rjmp	.+386    	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
 2c8:	84 30       	cpi	r24, 0x04	; 4
 2ca:	91 05       	cpc	r25, r1
 2cc:	09 f4       	brne	.+2      	; 0x2d0 <Tick+0x2e>
 2ce:	83 c0       	rjmp	.+262    	; 0x3d6 <Tick+0x134>
 2d0:	84 30       	cpi	r24, 0x04	; 4
 2d2:	91 05       	cpc	r25, r1
 2d4:	08 f4       	brcc	.+2      	; 0x2d8 <Tick+0x36>
 2d6:	3e c0       	rjmp	.+124    	; 0x354 <Tick+0xb2>
 2d8:	05 97       	sbiw	r24, 0x05	; 5
 2da:	09 f4       	brne	.+2      	; 0x2de <Tick+0x3c>
 2dc:	64 c0       	rjmp	.+200    	; 0x3a6 <Tick+0x104>
 2de:	b5 c0       	rjmp	.+362    	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
 2e0:	81 e0       	ldi	r24, 0x01	; 1
 2e2:	90 e0       	ldi	r25, 0x00	; 0
 2e4:	90 93 13 01 	sts	0x0113, r25	; 0x800113 <state+0x1>
 2e8:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <state>
 2ec:	ae c0       	rjmp	.+348    	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
 2ee:	82 e0       	ldi	r24, 0x02	; 2
 2f0:	90 e0       	ldi	r25, 0x00	; 0
 2f2:	90 93 13 01 	sts	0x0113, r25	; 0x800113 <state+0x1>
 2f6:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <state>
 2fa:	85 e0       	ldi	r24, 0x05	; 5
 2fc:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <score>
 300:	a4 c0       	rjmp	.+328    	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
 302:	80 e2       	ldi	r24, 0x20	; 32
 304:	90 e0       	ldi	r25, 0x00	; 0
 306:	fc 01       	movw	r30, r24
 308:	80 81       	ld	r24, Z
 30a:	88 2f       	mov	r24, r24
 30c:	90 e0       	ldi	r25, 0x00	; 0
 30e:	81 70       	andi	r24, 0x01	; 1
 310:	99 27       	eor	r25, r25
 312:	89 2b       	or	r24, r25
 314:	69 f4       	brne	.+26     	; 0x330 <Tick+0x8e>
 316:	82 e0       	ldi	r24, 0x02	; 2
 318:	90 e0       	ldi	r25, 0x00	; 0
 31a:	90 93 15 01 	sts	0x0115, r25	; 0x800115 <prevState+0x1>
 31e:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <prevState>
 322:	85 e0       	ldi	r24, 0x05	; 5
 324:	90 e0       	ldi	r25, 0x00	; 0
 326:	90 93 13 01 	sts	0x0113, r25	; 0x800113 <state+0x1>
 32a:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <state>
 32e:	8d c0       	rjmp	.+282    	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
 330:	80 91 0f 01 	lds	r24, 0x010F	; 0x80010f <tempC>
 334:	84 30       	cpi	r24, 0x04	; 4
 336:	39 f4       	brne	.+14     	; 0x346 <Tick+0xa4>
 338:	83 e0       	ldi	r24, 0x03	; 3
 33a:	90 e0       	ldi	r25, 0x00	; 0
 33c:	90 93 13 01 	sts	0x0113, r25	; 0x800113 <state+0x1>
 340:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <state>
 344:	82 c0       	rjmp	.+260    	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
 346:	82 e0       	ldi	r24, 0x02	; 2
 348:	90 e0       	ldi	r25, 0x00	; 0
 34a:	90 93 13 01 	sts	0x0113, r25	; 0x800113 <state+0x1>
 34e:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <state>
 352:	7b c0       	rjmp	.+246    	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
 354:	80 e2       	ldi	r24, 0x20	; 32
 356:	90 e0       	ldi	r25, 0x00	; 0
 358:	fc 01       	movw	r30, r24
 35a:	80 81       	ld	r24, Z
 35c:	88 2f       	mov	r24, r24
 35e:	90 e0       	ldi	r25, 0x00	; 0
 360:	81 70       	andi	r24, 0x01	; 1
 362:	99 27       	eor	r25, r25
 364:	89 2b       	or	r24, r25
 366:	69 f4       	brne	.+26     	; 0x382 <Tick+0xe0>
 368:	83 e0       	ldi	r24, 0x03	; 3
 36a:	90 e0       	ldi	r25, 0x00	; 0
 36c:	90 93 15 01 	sts	0x0115, r25	; 0x800115 <prevState+0x1>
 370:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <prevState>
 374:	85 e0       	ldi	r24, 0x05	; 5
 376:	90 e0       	ldi	r25, 0x00	; 0
 378:	90 93 13 01 	sts	0x0113, r25	; 0x800113 <state+0x1>
 37c:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <state>
 380:	64 c0       	rjmp	.+200    	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
 382:	80 91 0f 01 	lds	r24, 0x010F	; 0x80010f <tempC>
 386:	81 30       	cpi	r24, 0x01	; 1
 388:	39 f4       	brne	.+14     	; 0x398 <Tick+0xf6>
 38a:	82 e0       	ldi	r24, 0x02	; 2
 38c:	90 e0       	ldi	r25, 0x00	; 0
 38e:	90 93 13 01 	sts	0x0113, r25	; 0x800113 <state+0x1>
 392:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <state>
 396:	59 c0       	rjmp	.+178    	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
 398:	83 e0       	ldi	r24, 0x03	; 3
 39a:	90 e0       	ldi	r25, 0x00	; 0
 39c:	90 93 13 01 	sts	0x0113, r25	; 0x800113 <state+0x1>
 3a0:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <state>
 3a4:	52 c0       	rjmp	.+164    	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
 3a6:	80 e2       	ldi	r24, 0x20	; 32
 3a8:	90 e0       	ldi	r25, 0x00	; 0
 3aa:	fc 01       	movw	r30, r24
 3ac:	80 81       	ld	r24, Z
 3ae:	88 2f       	mov	r24, r24
 3b0:	90 e0       	ldi	r25, 0x00	; 0
 3b2:	81 70       	andi	r24, 0x01	; 1
 3b4:	99 27       	eor	r25, r25
 3b6:	89 2b       	or	r24, r25
 3b8:	39 f4       	brne	.+14     	; 0x3c8 <Tick+0x126>
 3ba:	85 e0       	ldi	r24, 0x05	; 5
 3bc:	90 e0       	ldi	r25, 0x00	; 0
 3be:	90 93 13 01 	sts	0x0113, r25	; 0x800113 <state+0x1>
 3c2:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <state>
 3c6:	41 c0       	rjmp	.+130    	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
 3c8:	84 e0       	ldi	r24, 0x04	; 4
 3ca:	90 e0       	ldi	r25, 0x00	; 0
 3cc:	90 93 13 01 	sts	0x0113, r25	; 0x800113 <state+0x1>
 3d0:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <state>
 3d4:	3a c0       	rjmp	.+116    	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
 3d6:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <reset>
 3da:	8a 30       	cpi	r24, 0x0A	; 10
 3dc:	31 f4       	brne	.+12     	; 0x3ea <Tick+0x148>
 3de:	81 e0       	ldi	r24, 0x01	; 1
 3e0:	90 e0       	ldi	r25, 0x00	; 0
 3e2:	90 93 13 01 	sts	0x0113, r25	; 0x800113 <state+0x1>
 3e6:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <state>
 3ea:	80 e2       	ldi	r24, 0x20	; 32
 3ec:	90 e0       	ldi	r25, 0x00	; 0
 3ee:	fc 01       	movw	r30, r24
 3f0:	80 81       	ld	r24, Z
 3f2:	88 2f       	mov	r24, r24
 3f4:	90 e0       	ldi	r25, 0x00	; 0
 3f6:	81 70       	andi	r24, 0x01	; 1
 3f8:	99 27       	eor	r25, r25
 3fa:	89 2b       	or	r24, r25
 3fc:	f9 f4       	brne	.+62     	; 0x43c <__LOCK_REGION_LENGTH__+0x3c>
 3fe:	80 91 0f 01 	lds	r24, 0x010F	; 0x80010f <tempC>
 402:	84 30       	cpi	r24, 0x04	; 4
 404:	39 f4       	brne	.+14     	; 0x414 <__LOCK_REGION_LENGTH__+0x14>
 406:	83 e0       	ldi	r24, 0x03	; 3
 408:	90 e0       	ldi	r25, 0x00	; 0
 40a:	90 93 13 01 	sts	0x0113, r25	; 0x800113 <state+0x1>
 40e:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <state>
 412:	1a c0       	rjmp	.+52     	; 0x448 <__LOCK_REGION_LENGTH__+0x48>
 414:	80 91 0f 01 	lds	r24, 0x010F	; 0x80010f <tempC>
 418:	81 30       	cpi	r24, 0x01	; 1
 41a:	39 f4       	brne	.+14     	; 0x42a <__LOCK_REGION_LENGTH__+0x2a>
 41c:	82 e0       	ldi	r24, 0x02	; 2
 41e:	90 e0       	ldi	r25, 0x00	; 0
 420:	90 93 13 01 	sts	0x0113, r25	; 0x800113 <state+0x1>
 424:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <state>
 428:	0f c0       	rjmp	.+30     	; 0x448 <__LOCK_REGION_LENGTH__+0x48>
 42a:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <prevState>
 42e:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <prevState+0x1>
 432:	90 93 13 01 	sts	0x0113, r25	; 0x800113 <state+0x1>
 436:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <state>
 43a:	06 c0       	rjmp	.+12     	; 0x448 <__LOCK_REGION_LENGTH__+0x48>
 43c:	84 e0       	ldi	r24, 0x04	; 4
 43e:	90 e0       	ldi	r25, 0x00	; 0
 440:	90 93 13 01 	sts	0x0113, r25	; 0x800113 <state+0x1>
 444:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <state>
 448:	00 00       	nop
 44a:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <state>
 44e:	90 91 13 01 	lds	r25, 0x0113	; 0x800113 <state+0x1>
 452:	82 30       	cpi	r24, 0x02	; 2
 454:	91 05       	cpc	r25, r1
 456:	31 f1       	breq	.+76     	; 0x4a4 <__LOCK_REGION_LENGTH__+0xa4>
 458:	83 30       	cpi	r24, 0x03	; 3
 45a:	91 05       	cpc	r25, r1
 45c:	30 f4       	brcc	.+12     	; 0x46a <__LOCK_REGION_LENGTH__+0x6a>
 45e:	00 97       	sbiw	r24, 0x00	; 0
 460:	09 f4       	brne	.+2      	; 0x464 <__LOCK_REGION_LENGTH__+0x64>
 462:	89 c0       	rjmp	.+274    	; 0x576 <__LOCK_REGION_LENGTH__+0x176>
 464:	01 97       	sbiw	r24, 0x01	; 1
 466:	59 f0       	breq	.+22     	; 0x47e <__LOCK_REGION_LENGTH__+0x7e>
 468:	89 c0       	rjmp	.+274    	; 0x57c <__LOCK_REGION_LENGTH__+0x17c>
 46a:	84 30       	cpi	r24, 0x04	; 4
 46c:	91 05       	cpc	r25, r1
 46e:	91 f1       	breq	.+100    	; 0x4d4 <__LOCK_REGION_LENGTH__+0xd4>
 470:	84 30       	cpi	r24, 0x04	; 4
 472:	91 05       	cpc	r25, r1
 474:	18 f1       	brcs	.+70     	; 0x4bc <__LOCK_REGION_LENGTH__+0xbc>
 476:	05 97       	sbiw	r24, 0x05	; 5
 478:	09 f4       	brne	.+2      	; 0x47c <__LOCK_REGION_LENGTH__+0x7c>
 47a:	79 c0       	rjmp	.+242    	; 0x56e <__LOCK_REGION_LENGTH__+0x16e>
 47c:	7f c0       	rjmp	.+254    	; 0x57c <__LOCK_REGION_LENGTH__+0x17c>
 47e:	85 e0       	ldi	r24, 0x05	; 5
 480:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <score>
 484:	81 e0       	ldi	r24, 0x01	; 1
 486:	c8 de       	rcall	.-624    	; 0x218 <LCD_Cursor>
 488:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <score>
 48c:	80 5d       	subi	r24, 0xD0	; 208
 48e:	6b de       	rcall	.-810    	; 0x166 <LCD_WriteData>
 490:	81 e0       	ldi	r24, 0x01	; 1
 492:	80 93 0f 01 	sts	0x010F, r24	; 0x80010f <tempC>
 496:	8b e2       	ldi	r24, 0x2B	; 43
 498:	90 e0       	ldi	r25, 0x00	; 0
 49a:	20 91 0f 01 	lds	r18, 0x010F	; 0x80010f <tempC>
 49e:	fc 01       	movw	r30, r24
 4a0:	20 83       	st	Z, r18
 4a2:	6c c0       	rjmp	.+216    	; 0x57c <__LOCK_REGION_LENGTH__+0x17c>
 4a4:	80 91 0f 01 	lds	r24, 0x010F	; 0x80010f <tempC>
 4a8:	88 0f       	add	r24, r24
 4aa:	80 93 0f 01 	sts	0x010F, r24	; 0x80010f <tempC>
 4ae:	8b e2       	ldi	r24, 0x2B	; 43
 4b0:	90 e0       	ldi	r25, 0x00	; 0
 4b2:	20 91 0f 01 	lds	r18, 0x010F	; 0x80010f <tempC>
 4b6:	fc 01       	movw	r30, r24
 4b8:	20 83       	st	Z, r18
 4ba:	60 c0       	rjmp	.+192    	; 0x57c <__LOCK_REGION_LENGTH__+0x17c>
 4bc:	80 91 0f 01 	lds	r24, 0x010F	; 0x80010f <tempC>
 4c0:	86 95       	lsr	r24
 4c2:	80 93 0f 01 	sts	0x010F, r24	; 0x80010f <tempC>
 4c6:	8b e2       	ldi	r24, 0x2B	; 43
 4c8:	90 e0       	ldi	r25, 0x00	; 0
 4ca:	20 91 0f 01 	lds	r18, 0x010F	; 0x80010f <tempC>
 4ce:	fc 01       	movw	r30, r24
 4d0:	20 83       	st	Z, r18
 4d2:	54 c0       	rjmp	.+168    	; 0x57c <__LOCK_REGION_LENGTH__+0x17c>
 4d4:	80 91 0f 01 	lds	r24, 0x010F	; 0x80010f <tempC>
 4d8:	82 30       	cpi	r24, 0x02	; 2
 4da:	99 f5       	brne	.+102    	; 0x542 <__LOCK_REGION_LENGTH__+0x142>
 4dc:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <score>
 4e0:	89 30       	cpi	r24, 0x09	; 9
 4e2:	e1 f4       	brne	.+56     	; 0x51c <__LOCK_REGION_LENGTH__+0x11c>
 4e4:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <winTime>
 4e8:	88 23       	and	r24, r24
 4ea:	c1 f0       	breq	.+48     	; 0x51c <__LOCK_REGION_LENGTH__+0x11c>
 4ec:	81 e0       	ldi	r24, 0x01	; 1
 4ee:	94 de       	rcall	.-728    	; 0x218 <LCD_Cursor>
 4f0:	66 e0       	ldi	r22, 0x06	; 6
 4f2:	71 e0       	ldi	r23, 0x01	; 1
 4f4:	81 e0       	ldi	r24, 0x01	; 1
 4f6:	66 de       	rcall	.-820    	; 0x1c4 <LCD_DisplayString>
 4f8:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <winTime>
 4fc:	81 50       	subi	r24, 0x01	; 1
 4fe:	80 93 05 01 	sts	0x0105, r24	; 0x800105 <winTime>
 502:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <winTime>
 506:	88 23       	and	r24, r24
 508:	d9 f4       	brne	.+54     	; 0x540 <__LOCK_REGION_LENGTH__+0x140>
 50a:	10 92 13 01 	sts	0x0113, r1	; 0x800113 <state+0x1>
 50e:	10 92 12 01 	sts	0x0112, r1	; 0x800112 <state>
 512:	8a e0       	ldi	r24, 0x0A	; 10
 514:	80 93 05 01 	sts	0x0105, r24	; 0x800105 <winTime>
 518:	d7 dd       	rcall	.-1106   	; 0xc8 <LCD_ClearScreen>
 51a:	30 c0       	rjmp	.+96     	; 0x57c <__LOCK_REGION_LENGTH__+0x17c>
 51c:	80 91 11 01 	lds	r24, 0x0111	; 0x800111 <countFlag>
 520:	88 23       	and	r24, r24
 522:	59 f1       	breq	.+86     	; 0x57a <__LOCK_REGION_LENGTH__+0x17a>
 524:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <score>
 528:	8f 5f       	subi	r24, 0xFF	; 255
 52a:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <score>
 52e:	81 e0       	ldi	r24, 0x01	; 1
 530:	73 de       	rcall	.-794    	; 0x218 <LCD_Cursor>
 532:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <score>
 536:	80 5d       	subi	r24, 0xD0	; 208
 538:	16 de       	rcall	.-980    	; 0x166 <LCD_WriteData>
 53a:	10 92 11 01 	sts	0x0111, r1	; 0x800111 <countFlag>
 53e:	1d c0       	rjmp	.+58     	; 0x57a <__LOCK_REGION_LENGTH__+0x17a>
 540:	1c c0       	rjmp	.+56     	; 0x57a <__LOCK_REGION_LENGTH__+0x17a>
 542:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <score>
 546:	88 23       	and	r24, r24
 548:	59 f0       	breq	.+22     	; 0x560 <__LOCK_REGION_LENGTH__+0x160>
 54a:	80 91 11 01 	lds	r24, 0x0111	; 0x800111 <countFlag>
 54e:	88 23       	and	r24, r24
 550:	39 f0       	breq	.+14     	; 0x560 <__LOCK_REGION_LENGTH__+0x160>
 552:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <score>
 556:	81 50       	subi	r24, 0x01	; 1
 558:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <score>
 55c:	10 92 11 01 	sts	0x0111, r1	; 0x800111 <countFlag>
 560:	81 e0       	ldi	r24, 0x01	; 1
 562:	5a de       	rcall	.-844    	; 0x218 <LCD_Cursor>
 564:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <score>
 568:	80 5d       	subi	r24, 0xD0	; 208
 56a:	fd dd       	rcall	.-1030   	; 0x166 <LCD_WriteData>
 56c:	07 c0       	rjmp	.+14     	; 0x57c <__LOCK_REGION_LENGTH__+0x17c>
 56e:	81 e0       	ldi	r24, 0x01	; 1
 570:	80 93 11 01 	sts	0x0111, r24	; 0x800111 <countFlag>
 574:	03 c0       	rjmp	.+6      	; 0x57c <__LOCK_REGION_LENGTH__+0x17c>
 576:	00 00       	nop
 578:	01 c0       	rjmp	.+2      	; 0x57c <__LOCK_REGION_LENGTH__+0x17c>
 57a:	00 00       	nop
 57c:	00 00       	nop
 57e:	df 91       	pop	r29
 580:	cf 91       	pop	r28
 582:	08 95       	ret

00000584 <TimerOn>:
 584:	cf 93       	push	r28
 586:	df 93       	push	r29
 588:	cd b7       	in	r28, 0x3d	; 61
 58a:	de b7       	in	r29, 0x3e	; 62
 58c:	81 e8       	ldi	r24, 0x81	; 129
 58e:	90 e0       	ldi	r25, 0x00	; 0
 590:	2b e0       	ldi	r18, 0x0B	; 11
 592:	fc 01       	movw	r30, r24
 594:	20 83       	st	Z, r18
 596:	88 e8       	ldi	r24, 0x88	; 136
 598:	90 e0       	ldi	r25, 0x00	; 0
 59a:	2d e7       	ldi	r18, 0x7D	; 125
 59c:	30 e0       	ldi	r19, 0x00	; 0
 59e:	fc 01       	movw	r30, r24
 5a0:	31 83       	std	Z+1, r19	; 0x01
 5a2:	20 83       	st	Z, r18
 5a4:	8f e6       	ldi	r24, 0x6F	; 111
 5a6:	90 e0       	ldi	r25, 0x00	; 0
 5a8:	22 e0       	ldi	r18, 0x02	; 2
 5aa:	fc 01       	movw	r30, r24
 5ac:	20 83       	st	Z, r18
 5ae:	84 e8       	ldi	r24, 0x84	; 132
 5b0:	90 e0       	ldi	r25, 0x00	; 0
 5b2:	fc 01       	movw	r30, r24
 5b4:	11 82       	std	Z+1, r1	; 0x01
 5b6:	10 82       	st	Z, r1
 5b8:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 5bc:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 5c0:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__data_start+0x2>
 5c4:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__data_start+0x3>
 5c8:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <_avr_timer_cntcurr>
 5cc:	90 93 0c 01 	sts	0x010C, r25	; 0x80010c <_avr_timer_cntcurr+0x1>
 5d0:	a0 93 0d 01 	sts	0x010D, r26	; 0x80010d <_avr_timer_cntcurr+0x2>
 5d4:	b0 93 0e 01 	sts	0x010E, r27	; 0x80010e <_avr_timer_cntcurr+0x3>
 5d8:	8f e5       	ldi	r24, 0x5F	; 95
 5da:	90 e0       	ldi	r25, 0x00	; 0
 5dc:	2f e5       	ldi	r18, 0x5F	; 95
 5de:	30 e0       	ldi	r19, 0x00	; 0
 5e0:	f9 01       	movw	r30, r18
 5e2:	20 81       	ld	r18, Z
 5e4:	20 68       	ori	r18, 0x80	; 128
 5e6:	fc 01       	movw	r30, r24
 5e8:	20 83       	st	Z, r18
 5ea:	00 00       	nop
 5ec:	df 91       	pop	r29
 5ee:	cf 91       	pop	r28
 5f0:	08 95       	ret

000005f2 <TimerSet>:



void TimerSet(unsigned long M)
{
 5f2:	cf 93       	push	r28
 5f4:	df 93       	push	r29
 5f6:	00 d0       	rcall	.+0      	; 0x5f8 <TimerSet+0x6>
 5f8:	00 d0       	rcall	.+0      	; 0x5fa <TimerSet+0x8>
 5fa:	cd b7       	in	r28, 0x3d	; 61
 5fc:	de b7       	in	r29, 0x3e	; 62
 5fe:	69 83       	std	Y+1, r22	; 0x01
 600:	7a 83       	std	Y+2, r23	; 0x02
 602:	8b 83       	std	Y+3, r24	; 0x03
 604:	9c 83       	std	Y+4, r25	; 0x04
	_avr_timer_M = M;
 606:	89 81       	ldd	r24, Y+1	; 0x01
 608:	9a 81       	ldd	r25, Y+2	; 0x02
 60a:	ab 81       	ldd	r26, Y+3	; 0x03
 60c:	bc 81       	ldd	r27, Y+4	; 0x04
 60e:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
 612:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
 616:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <__data_start+0x2>
 61a:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <__data_start+0x3>
	_avr_timer_cntcurr = _avr_timer_M;
 61e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 622:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 626:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__data_start+0x2>
 62a:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__data_start+0x3>
 62e:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <_avr_timer_cntcurr>
 632:	90 93 0c 01 	sts	0x010C, r25	; 0x80010c <_avr_timer_cntcurr+0x1>
 636:	a0 93 0d 01 	sts	0x010D, r26	; 0x80010d <_avr_timer_cntcurr+0x2>
 63a:	b0 93 0e 01 	sts	0x010E, r27	; 0x80010e <_avr_timer_cntcurr+0x3>
}
 63e:	00 00       	nop
 640:	0f 90       	pop	r0
 642:	0f 90       	pop	r0
 644:	0f 90       	pop	r0
 646:	0f 90       	pop	r0
 648:	df 91       	pop	r29
 64a:	cf 91       	pop	r28
 64c:	08 95       	ret

0000064e <TimerISR>:

void TimerISR()
{
 64e:	cf 93       	push	r28
 650:	df 93       	push	r29
 652:	cd b7       	in	r28, 0x3d	; 61
 654:	de b7       	in	r29, 0x3e	; 62
	TimerFlag = 1;
 656:	81 e0       	ldi	r24, 0x01	; 1
 658:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <__data_end>
}
 65c:	00 00       	nop
 65e:	df 91       	pop	r29
 660:	cf 91       	pop	r28
 662:	08 95       	ret

00000664 <__vector_13>:

ISR(TIMER1_COMPA_vect) {
 664:	1f 92       	push	r1
 666:	0f 92       	push	r0
 668:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
 66c:	0f 92       	push	r0
 66e:	11 24       	eor	r1, r1
 670:	00 90 5b 00 	lds	r0, 0x005B	; 0x80005b <__TEXT_REGION_LENGTH__+0x7e005b>
 674:	0f 92       	push	r0
 676:	2f 93       	push	r18
 678:	3f 93       	push	r19
 67a:	4f 93       	push	r20
 67c:	5f 93       	push	r21
 67e:	6f 93       	push	r22
 680:	7f 93       	push	r23
 682:	8f 93       	push	r24
 684:	9f 93       	push	r25
 686:	af 93       	push	r26
 688:	bf 93       	push	r27
 68a:	ef 93       	push	r30
 68c:	ff 93       	push	r31
 68e:	cf 93       	push	r28
 690:	df 93       	push	r29
 692:	cd b7       	in	r28, 0x3d	; 61
 694:	de b7       	in	r29, 0x3e	; 62
	// CPU automatically calls when TCNT1 == OCR1 (every 1 ms per TimerOn settings)
	_avr_timer_cntcurr--; // Count down to 0 rather than up to TOP
 696:	80 91 0b 01 	lds	r24, 0x010B	; 0x80010b <_avr_timer_cntcurr>
 69a:	90 91 0c 01 	lds	r25, 0x010C	; 0x80010c <_avr_timer_cntcurr+0x1>
 69e:	a0 91 0d 01 	lds	r26, 0x010D	; 0x80010d <_avr_timer_cntcurr+0x2>
 6a2:	b0 91 0e 01 	lds	r27, 0x010E	; 0x80010e <_avr_timer_cntcurr+0x3>
 6a6:	01 97       	sbiw	r24, 0x01	; 1
 6a8:	a1 09       	sbc	r26, r1
 6aa:	b1 09       	sbc	r27, r1
 6ac:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <_avr_timer_cntcurr>
 6b0:	90 93 0c 01 	sts	0x010C, r25	; 0x80010c <_avr_timer_cntcurr+0x1>
 6b4:	a0 93 0d 01 	sts	0x010D, r26	; 0x80010d <_avr_timer_cntcurr+0x2>
 6b8:	b0 93 0e 01 	sts	0x010E, r27	; 0x80010e <_avr_timer_cntcurr+0x3>
	if (_avr_timer_cntcurr == 0) { // results in a more efficient compare
 6bc:	80 91 0b 01 	lds	r24, 0x010B	; 0x80010b <_avr_timer_cntcurr>
 6c0:	90 91 0c 01 	lds	r25, 0x010C	; 0x80010c <_avr_timer_cntcurr+0x1>
 6c4:	a0 91 0d 01 	lds	r26, 0x010D	; 0x80010d <_avr_timer_cntcurr+0x2>
 6c8:	b0 91 0e 01 	lds	r27, 0x010E	; 0x80010e <_avr_timer_cntcurr+0x3>
 6cc:	89 2b       	or	r24, r25
 6ce:	8a 2b       	or	r24, r26
 6d0:	8b 2b       	or	r24, r27
 6d2:	89 f4       	brne	.+34     	; 0x6f6 <__vector_13+0x92>
		TimerISR(); // Call the ISR that the user uses
 6d4:	bc df       	rcall	.-136    	; 0x64e <TimerISR>
		_avr_timer_cntcurr = _avr_timer_M;
 6d6:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 6da:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 6de:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__data_start+0x2>
 6e2:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__data_start+0x3>
 6e6:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <_avr_timer_cntcurr>
 6ea:	90 93 0c 01 	sts	0x010C, r25	; 0x80010c <_avr_timer_cntcurr+0x1>
 6ee:	a0 93 0d 01 	sts	0x010D, r26	; 0x80010d <_avr_timer_cntcurr+0x2>
 6f2:	b0 93 0e 01 	sts	0x010E, r27	; 0x80010e <_avr_timer_cntcurr+0x3>
	}
}
 6f6:	00 00       	nop
 6f8:	df 91       	pop	r29
 6fa:	cf 91       	pop	r28
 6fc:	ff 91       	pop	r31
 6fe:	ef 91       	pop	r30
 700:	bf 91       	pop	r27
 702:	af 91       	pop	r26
 704:	9f 91       	pop	r25
 706:	8f 91       	pop	r24
 708:	7f 91       	pop	r23
 70a:	6f 91       	pop	r22
 70c:	5f 91       	pop	r21
 70e:	4f 91       	pop	r20
 710:	3f 91       	pop	r19
 712:	2f 91       	pop	r18
 714:	0f 90       	pop	r0
 716:	00 92 5b 00 	sts	0x005B, r0	; 0x80005b <__TEXT_REGION_LENGTH__+0x7e005b>
 71a:	0f 90       	pop	r0
 71c:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
 720:	0f 90       	pop	r0
 722:	1f 90       	pop	r1
 724:	18 95       	reti

00000726 <main>:


int main(void)
{
 726:	cf 93       	push	r28
 728:	df 93       	push	r29
 72a:	cd b7       	in	r28, 0x3d	; 61
 72c:	de b7       	in	r29, 0x3e	; 62
    /* Replace with your application code */
	DDRA = 0x00; PORTA = 0xFF;
 72e:	81 e2       	ldi	r24, 0x21	; 33
 730:	90 e0       	ldi	r25, 0x00	; 0
 732:	fc 01       	movw	r30, r24
 734:	10 82       	st	Z, r1
 736:	82 e2       	ldi	r24, 0x22	; 34
 738:	90 e0       	ldi	r25, 0x00	; 0
 73a:	2f ef       	ldi	r18, 0xFF	; 255
 73c:	fc 01       	movw	r30, r24
 73e:	20 83       	st	Z, r18
	DDRC = 0xFF;
 740:	87 e2       	ldi	r24, 0x27	; 39
 742:	90 e0       	ldi	r25, 0x00	; 0
 744:	2f ef       	ldi	r18, 0xFF	; 255
 746:	fc 01       	movw	r30, r24
 748:	20 83       	st	Z, r18
	PORTC = 0x00;
 74a:	88 e2       	ldi	r24, 0x28	; 40
 74c:	90 e0       	ldi	r25, 0x00	; 0
 74e:	fc 01       	movw	r30, r24
 750:	10 82       	st	Z, r1
	DDRD = 0xFF;
 752:	8a e2       	ldi	r24, 0x2A	; 42
 754:	90 e0       	ldi	r25, 0x00	; 0
 756:	2f ef       	ldi	r18, 0xFF	; 255
 758:	fc 01       	movw	r30, r24
 75a:	20 83       	st	Z, r18
	PORTD = 0x00;
 75c:	8b e2       	ldi	r24, 0x2B	; 43
 75e:	90 e0       	ldi	r25, 0x00	; 0
 760:	fc 01       	movw	r30, r24
 762:	10 82       	st	Z, r1
	TimerSet(300);
 764:	6c e2       	ldi	r22, 0x2C	; 44
 766:	71 e0       	ldi	r23, 0x01	; 1
 768:	80 e0       	ldi	r24, 0x00	; 0
 76a:	90 e0       	ldi	r25, 0x00	; 0
 76c:	42 df       	rcall	.-380    	; 0x5f2 <TimerSet>
	TimerOn();
 76e:	0a df       	rcall	.-492    	; 0x584 <TimerOn>
	LCD_init();
 770:	b5 dc       	rcall	.-1686   	; 0xdc <LCD_init>
 772:	97 dd       	rcall	.-1234   	; 0x2a2 <Tick>
	//LCD_DisplayString(1, "5");
    while (1) 
    {
		Tick();
 774:	00 00       	nop
 776:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <__data_end>
		while(!TimerFlag);
 77a:	88 23       	and	r24, r24
 77c:	e1 f3       	breq	.-8      	; 0x776 <main+0x50>
 77e:	10 92 0a 01 	sts	0x010A, r1	; 0x80010a <__data_end>
		TimerFlag = 0;
 782:	f7 cf       	rjmp	.-18     	; 0x772 <main+0x4c>

00000784 <_exit>:
 784:	f8 94       	cli

00000786 <__stop_program>:
    }
 786:	ff cf       	rjmp	.-2      	; 0x786 <__stop_program>
