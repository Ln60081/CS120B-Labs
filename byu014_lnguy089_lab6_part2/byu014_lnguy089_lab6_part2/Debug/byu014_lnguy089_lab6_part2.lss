
byu014_lnguy089_lab6_part2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000004  00800100  000004ca  0000055e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000004ca  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  00800104  00800104  00000562  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000562  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000594  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000050  00000000  00000000  000005d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000095b  00000000  00000000  00000624  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000805  00000000  00000000  00000f7f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000484  00000000  00000000  00001784  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000138  00000000  00000000  00001c08  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000496  00000000  00000000  00001d40  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000260  00000000  00000000  000021d6  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000040  00000000  00000000  00002436  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	c2 c1       	rjmp	.+900    	; 0x3ba <__vector_13>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e4       	ldi	r29, 0x40	; 64
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	ea ec       	ldi	r30, 0xCA	; 202
  a0:	f4 e0       	ldi	r31, 0x04	; 4
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a4 30       	cpi	r26, 0x04	; 4
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	a4 e0       	ldi	r26, 0x04	; 4
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	ae 30       	cpi	r26, 0x0E	; 14
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	dc d1       	rcall	.+952    	; 0x47c <main>
  c4:	00 c2       	rjmp	.+1024   	; 0x4c6 <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <Tick>:
}

void TimerOff()
{
	TimerFlag = 1;
}
  c8:	cf 93       	push	r28
  ca:	df 93       	push	r29
  cc:	cd b7       	in	r28, 0x3d	; 61
  ce:	de b7       	in	r29, 0x3e	; 62
  d0:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <state>
  d4:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <state+0x1>
  d8:	82 30       	cpi	r24, 0x02	; 2
  da:	91 05       	cpc	r25, r1
  dc:	09 f1       	breq	.+66     	; 0x120 <Tick+0x58>
  de:	83 30       	cpi	r24, 0x03	; 3
  e0:	91 05       	cpc	r25, r1
  e2:	28 f4       	brcc	.+10     	; 0xee <Tick+0x26>
  e4:	00 97       	sbiw	r24, 0x00	; 0
  e6:	71 f0       	breq	.+28     	; 0x104 <Tick+0x3c>
  e8:	01 97       	sbiw	r24, 0x01	; 1
  ea:	99 f0       	breq	.+38     	; 0x112 <Tick+0x4a>
  ec:	b3 c0       	rjmp	.+358    	; 0x254 <Tick+0x18c>
  ee:	84 30       	cpi	r24, 0x04	; 4
  f0:	91 05       	cpc	r25, r1
  f2:	09 f4       	brne	.+2      	; 0xf6 <Tick+0x2e>
  f4:	7f c0       	rjmp	.+254    	; 0x1f4 <Tick+0x12c>
  f6:	84 30       	cpi	r24, 0x04	; 4
  f8:	91 05       	cpc	r25, r1
  fa:	d8 f1       	brcs	.+118    	; 0x172 <Tick+0xaa>
  fc:	05 97       	sbiw	r24, 0x05	; 5
  fe:	09 f4       	brne	.+2      	; 0x102 <Tick+0x3a>
 100:	61 c0       	rjmp	.+194    	; 0x1c4 <Tick+0xfc>
 102:	a8 c0       	rjmp	.+336    	; 0x254 <Tick+0x18c>
 104:	81 e0       	ldi	r24, 0x01	; 1
 106:	90 e0       	ldi	r25, 0x00	; 0
 108:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <state+0x1>
 10c:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <state>
 110:	a1 c0       	rjmp	.+322    	; 0x254 <Tick+0x18c>
 112:	82 e0       	ldi	r24, 0x02	; 2
 114:	90 e0       	ldi	r25, 0x00	; 0
 116:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <state+0x1>
 11a:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <state>
 11e:	9a c0       	rjmp	.+308    	; 0x254 <Tick+0x18c>
 120:	80 e2       	ldi	r24, 0x20	; 32
 122:	90 e0       	ldi	r25, 0x00	; 0
 124:	fc 01       	movw	r30, r24
 126:	80 81       	ld	r24, Z
 128:	88 2f       	mov	r24, r24
 12a:	90 e0       	ldi	r25, 0x00	; 0
 12c:	81 70       	andi	r24, 0x01	; 1
 12e:	99 27       	eor	r25, r25
 130:	89 2b       	or	r24, r25
 132:	69 f4       	brne	.+26     	; 0x14e <Tick+0x86>
 134:	82 e0       	ldi	r24, 0x02	; 2
 136:	90 e0       	ldi	r25, 0x00	; 0
 138:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <prevState+0x1>
 13c:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <prevState>
 140:	85 e0       	ldi	r24, 0x05	; 5
 142:	90 e0       	ldi	r25, 0x00	; 0
 144:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <state+0x1>
 148:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <state>
 14c:	83 c0       	rjmp	.+262    	; 0x254 <Tick+0x18c>
 14e:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <tempC>
 152:	84 30       	cpi	r24, 0x04	; 4
 154:	39 f4       	brne	.+14     	; 0x164 <Tick+0x9c>
 156:	83 e0       	ldi	r24, 0x03	; 3
 158:	90 e0       	ldi	r25, 0x00	; 0
 15a:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <state+0x1>
 15e:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <state>
 162:	78 c0       	rjmp	.+240    	; 0x254 <Tick+0x18c>
 164:	82 e0       	ldi	r24, 0x02	; 2
 166:	90 e0       	ldi	r25, 0x00	; 0
 168:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <state+0x1>
 16c:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <state>
 170:	71 c0       	rjmp	.+226    	; 0x254 <Tick+0x18c>
 172:	80 e2       	ldi	r24, 0x20	; 32
 174:	90 e0       	ldi	r25, 0x00	; 0
 176:	fc 01       	movw	r30, r24
 178:	80 81       	ld	r24, Z
 17a:	88 2f       	mov	r24, r24
 17c:	90 e0       	ldi	r25, 0x00	; 0
 17e:	81 70       	andi	r24, 0x01	; 1
 180:	99 27       	eor	r25, r25
 182:	89 2b       	or	r24, r25
 184:	69 f4       	brne	.+26     	; 0x1a0 <Tick+0xd8>
 186:	83 e0       	ldi	r24, 0x03	; 3
 188:	90 e0       	ldi	r25, 0x00	; 0
 18a:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <prevState+0x1>
 18e:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <prevState>
 192:	85 e0       	ldi	r24, 0x05	; 5
 194:	90 e0       	ldi	r25, 0x00	; 0
 196:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <state+0x1>
 19a:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <state>
 19e:	5a c0       	rjmp	.+180    	; 0x254 <Tick+0x18c>
 1a0:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <tempC>
 1a4:	81 30       	cpi	r24, 0x01	; 1
 1a6:	39 f4       	brne	.+14     	; 0x1b6 <Tick+0xee>
 1a8:	82 e0       	ldi	r24, 0x02	; 2
 1aa:	90 e0       	ldi	r25, 0x00	; 0
 1ac:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <state+0x1>
 1b0:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <state>
 1b4:	4f c0       	rjmp	.+158    	; 0x254 <Tick+0x18c>
 1b6:	83 e0       	ldi	r24, 0x03	; 3
 1b8:	90 e0       	ldi	r25, 0x00	; 0
 1ba:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <state+0x1>
 1be:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <state>
 1c2:	48 c0       	rjmp	.+144    	; 0x254 <Tick+0x18c>
 1c4:	80 e2       	ldi	r24, 0x20	; 32
 1c6:	90 e0       	ldi	r25, 0x00	; 0
 1c8:	fc 01       	movw	r30, r24
 1ca:	80 81       	ld	r24, Z
 1cc:	88 2f       	mov	r24, r24
 1ce:	90 e0       	ldi	r25, 0x00	; 0
 1d0:	81 70       	andi	r24, 0x01	; 1
 1d2:	99 27       	eor	r25, r25
 1d4:	89 2b       	or	r24, r25
 1d6:	39 f4       	brne	.+14     	; 0x1e6 <Tick+0x11e>
 1d8:	85 e0       	ldi	r24, 0x05	; 5
 1da:	90 e0       	ldi	r25, 0x00	; 0
 1dc:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <state+0x1>
 1e0:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <state>
 1e4:	37 c0       	rjmp	.+110    	; 0x254 <Tick+0x18c>
 1e6:	84 e0       	ldi	r24, 0x04	; 4
 1e8:	90 e0       	ldi	r25, 0x00	; 0
 1ea:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <state+0x1>
 1ee:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <state>
 1f2:	30 c0       	rjmp	.+96     	; 0x254 <Tick+0x18c>
 1f4:	80 e2       	ldi	r24, 0x20	; 32
 1f6:	90 e0       	ldi	r25, 0x00	; 0
 1f8:	fc 01       	movw	r30, r24
 1fa:	80 81       	ld	r24, Z
 1fc:	88 2f       	mov	r24, r24
 1fe:	90 e0       	ldi	r25, 0x00	; 0
 200:	81 70       	andi	r24, 0x01	; 1
 202:	99 27       	eor	r25, r25
 204:	89 2b       	or	r24, r25
 206:	f9 f4       	brne	.+62     	; 0x246 <Tick+0x17e>
 208:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <tempC>
 20c:	84 30       	cpi	r24, 0x04	; 4
 20e:	39 f4       	brne	.+14     	; 0x21e <Tick+0x156>
 210:	83 e0       	ldi	r24, 0x03	; 3
 212:	90 e0       	ldi	r25, 0x00	; 0
 214:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <state+0x1>
 218:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <state>
 21c:	1a c0       	rjmp	.+52     	; 0x252 <Tick+0x18a>
 21e:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <tempC>
 222:	81 30       	cpi	r24, 0x01	; 1
 224:	39 f4       	brne	.+14     	; 0x234 <Tick+0x16c>
 226:	82 e0       	ldi	r24, 0x02	; 2
 228:	90 e0       	ldi	r25, 0x00	; 0
 22a:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <state+0x1>
 22e:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <state>
 232:	0f c0       	rjmp	.+30     	; 0x252 <Tick+0x18a>
 234:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <prevState>
 238:	90 91 0d 01 	lds	r25, 0x010D	; 0x80010d <prevState+0x1>
 23c:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <state+0x1>
 240:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <state>
 244:	06 c0       	rjmp	.+12     	; 0x252 <Tick+0x18a>
 246:	84 e0       	ldi	r24, 0x04	; 4
 248:	90 e0       	ldi	r25, 0x00	; 0
 24a:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <state+0x1>
 24e:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <state>
 252:	00 00       	nop
 254:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <state>
 258:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <state+0x1>
 25c:	82 30       	cpi	r24, 0x02	; 2
 25e:	91 05       	cpc	r25, r1
 260:	d9 f0       	breq	.+54     	; 0x298 <Tick+0x1d0>
 262:	83 30       	cpi	r24, 0x03	; 3
 264:	91 05       	cpc	r25, r1
 266:	28 f4       	brcc	.+10     	; 0x272 <Tick+0x1aa>
 268:	00 97       	sbiw	r24, 0x00	; 0
 26a:	71 f1       	breq	.+92     	; 0x2c8 <Tick+0x200>
 26c:	01 97       	sbiw	r24, 0x01	; 1
 26e:	51 f0       	breq	.+20     	; 0x284 <Tick+0x1bc>
 270:	30 c0       	rjmp	.+96     	; 0x2d2 <Tick+0x20a>
 272:	84 30       	cpi	r24, 0x04	; 4
 274:	91 05       	cpc	r25, r1
 276:	51 f1       	breq	.+84     	; 0x2cc <Tick+0x204>
 278:	84 30       	cpi	r24, 0x04	; 4
 27a:	91 05       	cpc	r25, r1
 27c:	c8 f0       	brcs	.+50     	; 0x2b0 <Tick+0x1e8>
 27e:	05 97       	sbiw	r24, 0x05	; 5
 280:	39 f1       	breq	.+78     	; 0x2d0 <Tick+0x208>
 282:	27 c0       	rjmp	.+78     	; 0x2d2 <Tick+0x20a>
 284:	81 e0       	ldi	r24, 0x01	; 1
 286:	80 93 09 01 	sts	0x0109, r24	; 0x800109 <tempC>
 28a:	88 e2       	ldi	r24, 0x28	; 40
 28c:	90 e0       	ldi	r25, 0x00	; 0
 28e:	20 91 09 01 	lds	r18, 0x0109	; 0x800109 <tempC>
 292:	fc 01       	movw	r30, r24
 294:	20 83       	st	Z, r18
 296:	1d c0       	rjmp	.+58     	; 0x2d2 <Tick+0x20a>
 298:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <tempC>
 29c:	88 0f       	add	r24, r24
 29e:	80 93 09 01 	sts	0x0109, r24	; 0x800109 <tempC>
 2a2:	88 e2       	ldi	r24, 0x28	; 40
 2a4:	90 e0       	ldi	r25, 0x00	; 0
 2a6:	20 91 09 01 	lds	r18, 0x0109	; 0x800109 <tempC>
 2aa:	fc 01       	movw	r30, r24
 2ac:	20 83       	st	Z, r18
 2ae:	11 c0       	rjmp	.+34     	; 0x2d2 <Tick+0x20a>
 2b0:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <tempC>
 2b4:	86 95       	lsr	r24
 2b6:	80 93 09 01 	sts	0x0109, r24	; 0x800109 <tempC>
 2ba:	88 e2       	ldi	r24, 0x28	; 40
 2bc:	90 e0       	ldi	r25, 0x00	; 0
 2be:	20 91 09 01 	lds	r18, 0x0109	; 0x800109 <tempC>
 2c2:	fc 01       	movw	r30, r24
 2c4:	20 83       	st	Z, r18
 2c6:	05 c0       	rjmp	.+10     	; 0x2d2 <Tick+0x20a>
 2c8:	00 00       	nop
 2ca:	03 c0       	rjmp	.+6      	; 0x2d2 <Tick+0x20a>
 2cc:	00 00       	nop
 2ce:	01 c0       	rjmp	.+2      	; 0x2d2 <Tick+0x20a>
 2d0:	00 00       	nop
 2d2:	00 00       	nop
 2d4:	df 91       	pop	r29
 2d6:	cf 91       	pop	r28
 2d8:	08 95       	ret

000002da <TimerOn>:
 2da:	cf 93       	push	r28
 2dc:	df 93       	push	r29
 2de:	cd b7       	in	r28, 0x3d	; 61
 2e0:	de b7       	in	r29, 0x3e	; 62
 2e2:	81 e8       	ldi	r24, 0x81	; 129
 2e4:	90 e0       	ldi	r25, 0x00	; 0
 2e6:	2b e0       	ldi	r18, 0x0B	; 11
 2e8:	fc 01       	movw	r30, r24
 2ea:	20 83       	st	Z, r18
 2ec:	88 e8       	ldi	r24, 0x88	; 136
 2ee:	90 e0       	ldi	r25, 0x00	; 0
 2f0:	2d e7       	ldi	r18, 0x7D	; 125
 2f2:	30 e0       	ldi	r19, 0x00	; 0
 2f4:	fc 01       	movw	r30, r24
 2f6:	31 83       	std	Z+1, r19	; 0x01
 2f8:	20 83       	st	Z, r18
 2fa:	8f e6       	ldi	r24, 0x6F	; 111
 2fc:	90 e0       	ldi	r25, 0x00	; 0
 2fe:	22 e0       	ldi	r18, 0x02	; 2
 300:	fc 01       	movw	r30, r24
 302:	20 83       	st	Z, r18
 304:	84 e8       	ldi	r24, 0x84	; 132
 306:	90 e0       	ldi	r25, 0x00	; 0
 308:	fc 01       	movw	r30, r24
 30a:	11 82       	std	Z+1, r1	; 0x01
 30c:	10 82       	st	Z, r1
 30e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 312:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 316:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__data_start+0x2>
 31a:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__data_start+0x3>
 31e:	80 93 05 01 	sts	0x0105, r24	; 0x800105 <_avr_timer_cntcurr>
 322:	90 93 06 01 	sts	0x0106, r25	; 0x800106 <_avr_timer_cntcurr+0x1>
 326:	a0 93 07 01 	sts	0x0107, r26	; 0x800107 <_avr_timer_cntcurr+0x2>
 32a:	b0 93 08 01 	sts	0x0108, r27	; 0x800108 <_avr_timer_cntcurr+0x3>
 32e:	8f e5       	ldi	r24, 0x5F	; 95
 330:	90 e0       	ldi	r25, 0x00	; 0
 332:	2f e5       	ldi	r18, 0x5F	; 95
 334:	30 e0       	ldi	r19, 0x00	; 0
 336:	f9 01       	movw	r30, r18
 338:	20 81       	ld	r18, Z
 33a:	20 68       	ori	r18, 0x80	; 128
 33c:	fc 01       	movw	r30, r24
 33e:	20 83       	st	Z, r18
 340:	00 00       	nop
 342:	df 91       	pop	r29
 344:	cf 91       	pop	r28
 346:	08 95       	ret

00000348 <TimerSet>:



void TimerSet(unsigned long M)
{
 348:	cf 93       	push	r28
 34a:	df 93       	push	r29
 34c:	00 d0       	rcall	.+0      	; 0x34e <TimerSet+0x6>
 34e:	00 d0       	rcall	.+0      	; 0x350 <TimerSet+0x8>
 350:	cd b7       	in	r28, 0x3d	; 61
 352:	de b7       	in	r29, 0x3e	; 62
 354:	69 83       	std	Y+1, r22	; 0x01
 356:	7a 83       	std	Y+2, r23	; 0x02
 358:	8b 83       	std	Y+3, r24	; 0x03
 35a:	9c 83       	std	Y+4, r25	; 0x04
	_avr_timer_M = M;
 35c:	89 81       	ldd	r24, Y+1	; 0x01
 35e:	9a 81       	ldd	r25, Y+2	; 0x02
 360:	ab 81       	ldd	r26, Y+3	; 0x03
 362:	bc 81       	ldd	r27, Y+4	; 0x04
 364:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
 368:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
 36c:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <__data_start+0x2>
 370:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <__data_start+0x3>
	_avr_timer_cntcurr = _avr_timer_M;
 374:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 378:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 37c:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__data_start+0x2>
 380:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__data_start+0x3>
 384:	80 93 05 01 	sts	0x0105, r24	; 0x800105 <_avr_timer_cntcurr>
 388:	90 93 06 01 	sts	0x0106, r25	; 0x800106 <_avr_timer_cntcurr+0x1>
 38c:	a0 93 07 01 	sts	0x0107, r26	; 0x800107 <_avr_timer_cntcurr+0x2>
 390:	b0 93 08 01 	sts	0x0108, r27	; 0x800108 <_avr_timer_cntcurr+0x3>
}
 394:	00 00       	nop
 396:	0f 90       	pop	r0
 398:	0f 90       	pop	r0
 39a:	0f 90       	pop	r0
 39c:	0f 90       	pop	r0
 39e:	df 91       	pop	r29
 3a0:	cf 91       	pop	r28
 3a2:	08 95       	ret

000003a4 <TimerISR>:

void TimerISR()
{
 3a4:	cf 93       	push	r28
 3a6:	df 93       	push	r29
 3a8:	cd b7       	in	r28, 0x3d	; 61
 3aa:	de b7       	in	r29, 0x3e	; 62
	TimerFlag = 1;
 3ac:	81 e0       	ldi	r24, 0x01	; 1
 3ae:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <__data_end>
}
 3b2:	00 00       	nop
 3b4:	df 91       	pop	r29
 3b6:	cf 91       	pop	r28
 3b8:	08 95       	ret

000003ba <__vector_13>:

ISR(TIMER1_COMPA_vect) {
 3ba:	1f 92       	push	r1
 3bc:	0f 92       	push	r0
 3be:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
 3c2:	0f 92       	push	r0
 3c4:	11 24       	eor	r1, r1
 3c6:	00 90 5b 00 	lds	r0, 0x005B	; 0x80005b <__TEXT_REGION_LENGTH__+0x7e005b>
 3ca:	0f 92       	push	r0
 3cc:	2f 93       	push	r18
 3ce:	3f 93       	push	r19
 3d0:	4f 93       	push	r20
 3d2:	5f 93       	push	r21
 3d4:	6f 93       	push	r22
 3d6:	7f 93       	push	r23
 3d8:	8f 93       	push	r24
 3da:	9f 93       	push	r25
 3dc:	af 93       	push	r26
 3de:	bf 93       	push	r27
 3e0:	ef 93       	push	r30
 3e2:	ff 93       	push	r31
 3e4:	cf 93       	push	r28
 3e6:	df 93       	push	r29
 3e8:	cd b7       	in	r28, 0x3d	; 61
 3ea:	de b7       	in	r29, 0x3e	; 62
	// CPU automatically calls when TCNT1 == OCR1 (every 1 ms per TimerOn settings)
	_avr_timer_cntcurr--; // Count down to 0 rather than up to TOP
 3ec:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <_avr_timer_cntcurr>
 3f0:	90 91 06 01 	lds	r25, 0x0106	; 0x800106 <_avr_timer_cntcurr+0x1>
 3f4:	a0 91 07 01 	lds	r26, 0x0107	; 0x800107 <_avr_timer_cntcurr+0x2>
 3f8:	b0 91 08 01 	lds	r27, 0x0108	; 0x800108 <_avr_timer_cntcurr+0x3>
 3fc:	01 97       	sbiw	r24, 0x01	; 1
 3fe:	a1 09       	sbc	r26, r1
 400:	b1 09       	sbc	r27, r1
 402:	80 93 05 01 	sts	0x0105, r24	; 0x800105 <_avr_timer_cntcurr>
 406:	90 93 06 01 	sts	0x0106, r25	; 0x800106 <_avr_timer_cntcurr+0x1>
 40a:	a0 93 07 01 	sts	0x0107, r26	; 0x800107 <_avr_timer_cntcurr+0x2>
 40e:	b0 93 08 01 	sts	0x0108, r27	; 0x800108 <_avr_timer_cntcurr+0x3>
	if (_avr_timer_cntcurr == 0) { // results in a more efficient compare
 412:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <_avr_timer_cntcurr>
 416:	90 91 06 01 	lds	r25, 0x0106	; 0x800106 <_avr_timer_cntcurr+0x1>
 41a:	a0 91 07 01 	lds	r26, 0x0107	; 0x800107 <_avr_timer_cntcurr+0x2>
 41e:	b0 91 08 01 	lds	r27, 0x0108	; 0x800108 <_avr_timer_cntcurr+0x3>
 422:	89 2b       	or	r24, r25
 424:	8a 2b       	or	r24, r26
 426:	8b 2b       	or	r24, r27
 428:	89 f4       	brne	.+34     	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>
		TimerISR(); // Call the ISR that the user uses
 42a:	bc df       	rcall	.-136    	; 0x3a4 <TimerISR>
		_avr_timer_cntcurr = _avr_timer_M;
 42c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 430:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 434:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__data_start+0x2>
 438:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__data_start+0x3>
 43c:	80 93 05 01 	sts	0x0105, r24	; 0x800105 <_avr_timer_cntcurr>
 440:	90 93 06 01 	sts	0x0106, r25	; 0x800106 <_avr_timer_cntcurr+0x1>
 444:	a0 93 07 01 	sts	0x0107, r26	; 0x800107 <_avr_timer_cntcurr+0x2>
 448:	b0 93 08 01 	sts	0x0108, r27	; 0x800108 <_avr_timer_cntcurr+0x3>
	}
}
 44c:	00 00       	nop
 44e:	df 91       	pop	r29
 450:	cf 91       	pop	r28
 452:	ff 91       	pop	r31
 454:	ef 91       	pop	r30
 456:	bf 91       	pop	r27
 458:	af 91       	pop	r26
 45a:	9f 91       	pop	r25
 45c:	8f 91       	pop	r24
 45e:	7f 91       	pop	r23
 460:	6f 91       	pop	r22
 462:	5f 91       	pop	r21
 464:	4f 91       	pop	r20
 466:	3f 91       	pop	r19
 468:	2f 91       	pop	r18
 46a:	0f 90       	pop	r0
 46c:	00 92 5b 00 	sts	0x005B, r0	; 0x80005b <__TEXT_REGION_LENGTH__+0x7e005b>
 470:	0f 90       	pop	r0
 472:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
 476:	0f 90       	pop	r0
 478:	1f 90       	pop	r1
 47a:	18 95       	reti

0000047c <main>:


int main(void)
{
 47c:	cf 93       	push	r28
 47e:	df 93       	push	r29
 480:	cd b7       	in	r28, 0x3d	; 61
 482:	de b7       	in	r29, 0x3e	; 62
    /* Replace with your application code */
	DDRA = 0x00; PORTA = 0xFF;
 484:	81 e2       	ldi	r24, 0x21	; 33
 486:	90 e0       	ldi	r25, 0x00	; 0
 488:	fc 01       	movw	r30, r24
 48a:	10 82       	st	Z, r1
 48c:	82 e2       	ldi	r24, 0x22	; 34
 48e:	90 e0       	ldi	r25, 0x00	; 0
 490:	2f ef       	ldi	r18, 0xFF	; 255
 492:	fc 01       	movw	r30, r24
 494:	20 83       	st	Z, r18
	DDRC = 0xFF;
 496:	87 e2       	ldi	r24, 0x27	; 39
 498:	90 e0       	ldi	r25, 0x00	; 0
 49a:	2f ef       	ldi	r18, 0xFF	; 255
 49c:	fc 01       	movw	r30, r24
 49e:	20 83       	st	Z, r18
	PORTC = 0x00;
 4a0:	88 e2       	ldi	r24, 0x28	; 40
 4a2:	90 e0       	ldi	r25, 0x00	; 0
 4a4:	fc 01       	movw	r30, r24
 4a6:	10 82       	st	Z, r1
	TimerSet(300);
 4a8:	6c e2       	ldi	r22, 0x2C	; 44
 4aa:	71 e0       	ldi	r23, 0x01	; 1
 4ac:	80 e0       	ldi	r24, 0x00	; 0
 4ae:	90 e0       	ldi	r25, 0x00	; 0
 4b0:	4b df       	rcall	.-362    	; 0x348 <TimerSet>
	TimerOn();
 4b2:	13 df       	rcall	.-474    	; 0x2da <TimerOn>
	
    while (1) 
    {
		Tick();
 4b4:	09 de       	rcall	.-1006   	; 0xc8 <Tick>
 4b6:	00 00       	nop
		while(!TimerFlag);
 4b8:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <__data_end>
 4bc:	88 23       	and	r24, r24
 4be:	e1 f3       	breq	.-8      	; 0x4b8 <main+0x3c>
 4c0:	10 92 04 01 	sts	0x0104, r1	; 0x800104 <__data_end>
		TimerFlag = 0;
 4c4:	f7 cf       	rjmp	.-18     	; 0x4b4 <main+0x38>

000004c6 <_exit>:
    }
 4c6:	f8 94       	cli

000004c8 <__stop_program>:
 4c8:	ff cf       	rjmp	.-2      	; 0x4c8 <__stop_program>
